Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/intro/index", "auto_examples/intro/inducing_path", "auto_examples/intro/intro_causal_graphs", "auto_examples/intro/sg_execution_times", "auto_examples/mixededge/index", "auto_examples/mixededge/plot_mixed_edge_graph", "auto_examples/mixededge/sg_execution_times", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout", "auto_examples/visualization/index", "auto_examples/visualization/plot_timeseries_graphs", "auto_examples/visualization/sg_execution_times", "generated/pywhy_graphs.ADMG", "generated/pywhy_graphs.AugmentedGraph", "generated/pywhy_graphs.AugmentedPAG", "generated/pywhy_graphs.CPDAG", "generated/pywhy_graphs.PAG", "generated/pywhy_graphs.algorithms.acyclification", "generated/pywhy_graphs.algorithms.add_all_snode_combinations", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node", "generated/pywhy_graphs.algorithms.discriminating_path", "generated/pywhy_graphs.algorithms.find_connected_pairs", "generated/pywhy_graphs.algorithms.inducing_path", "generated/pywhy_graphs.algorithms.is_definite_noncollider", "generated/pywhy_graphs.algorithms.is_valid_mec_graph", "generated/pywhy_graphs.algorithms.pds", "generated/pywhy_graphs.algorithms.pds_path", "generated/pywhy_graphs.algorithms.pds_t", "generated/pywhy_graphs.algorithms.pds_t_path", "generated/pywhy_graphs.algorithms.possible_ancestors", "generated/pywhy_graphs.algorithms.possible_descendants", "generated/pywhy_graphs.algorithms.uncovered_pd_path", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph", "generated/pywhy_graphs.classes.timeseries.get_summary_graph", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order", "generated/pywhy_graphs.export.clearn_to_graph", "generated/pywhy_graphs.export.graph_to_clearn", "generated/pywhy_graphs.export.graph_to_numpy", "generated/pywhy_graphs.export.graph_to_pcalg", "generated/pywhy_graphs.export.graph_to_tetrad", "generated/pywhy_graphs.export.numpy_to_graph", "generated/pywhy_graphs.export.pcalg_to_graph", "generated/pywhy_graphs.export.tetrad_to_graph", "generated/pywhy_graphs.functional.apply_linear_soft_intervention", "generated/pywhy_graphs.functional.discrete.add_cpd_for_node", "generated/pywhy_graphs.functional.discrete.make_random_discrete_graph", "generated/pywhy_graphs.functional.make_graph_linear_gaussian", "generated/pywhy_graphs.functional.make_graph_multidomain", "generated/pywhy_graphs.functional.set_node_attributes_with_G", "generated/pywhy_graphs.networkx.MixedEdgeGraph", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "generated/pywhy_graphs.networkx.is_minimal_m_separator", "generated/pywhy_graphs.networkx.m_separated", "generated/pywhy_graphs.networkx.minimal_m_separator", "generated/pywhy_graphs.simulate.simulate_data_from_var", "generated/pywhy_graphs.simulate.simulate_linear_var_process", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "generated/pywhy_graphs.sys_info", "generated/pywhy_graphs.viz.draw", "generated/pywhy_graphs.viz.timeseries_layout", "glossary", "index", "installation", "reference/algorithms/index", "reference/classes/index", "reference/export/index", "reference/functional/index", "reference/simulation/index", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1", "whats_new/v0.2"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/intro/index.rst", "auto_examples/intro/inducing_path.rst", "auto_examples/intro/intro_causal_graphs.rst", "auto_examples/intro/sg_execution_times.rst", "auto_examples/mixededge/index.rst", "auto_examples/mixededge/plot_mixed_edge_graph.rst", "auto_examples/mixededge/sg_execution_times.rst", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/plot_timeseries_graphs.rst", "auto_examples/visualization/sg_execution_times.rst", "generated/pywhy_graphs.ADMG.rst", "generated/pywhy_graphs.AugmentedGraph.rst", "generated/pywhy_graphs.AugmentedPAG.rst", "generated/pywhy_graphs.CPDAG.rst", "generated/pywhy_graphs.PAG.rst", "generated/pywhy_graphs.algorithms.acyclification.rst", "generated/pywhy_graphs.algorithms.add_all_snode_combinations.rst", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node.rst", "generated/pywhy_graphs.algorithms.discriminating_path.rst", "generated/pywhy_graphs.algorithms.find_connected_pairs.rst", "generated/pywhy_graphs.algorithms.inducing_path.rst", "generated/pywhy_graphs.algorithms.is_definite_noncollider.rst", "generated/pywhy_graphs.algorithms.is_valid_mec_graph.rst", "generated/pywhy_graphs.algorithms.pds.rst", "generated/pywhy_graphs.algorithms.pds_path.rst", "generated/pywhy_graphs.algorithms.pds_t.rst", "generated/pywhy_graphs.algorithms.pds_t_path.rst", "generated/pywhy_graphs.algorithms.possible_ancestors.rst", "generated/pywhy_graphs.algorithms.possible_descendants.rst", "generated/pywhy_graphs.algorithms.uncovered_pd_path.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.get_summary_graph.rst", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges.rst", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order.rst", "generated/pywhy_graphs.export.clearn_to_graph.rst", "generated/pywhy_graphs.export.graph_to_clearn.rst", "generated/pywhy_graphs.export.graph_to_numpy.rst", "generated/pywhy_graphs.export.graph_to_pcalg.rst", "generated/pywhy_graphs.export.graph_to_tetrad.rst", "generated/pywhy_graphs.export.numpy_to_graph.rst", "generated/pywhy_graphs.export.pcalg_to_graph.rst", "generated/pywhy_graphs.export.tetrad_to_graph.rst", "generated/pywhy_graphs.functional.apply_linear_soft_intervention.rst", "generated/pywhy_graphs.functional.discrete.add_cpd_for_node.rst", "generated/pywhy_graphs.functional.discrete.make_random_discrete_graph.rst", "generated/pywhy_graphs.functional.make_graph_linear_gaussian.rst", "generated/pywhy_graphs.functional.make_graph_multidomain.rst", "generated/pywhy_graphs.functional.set_node_attributes_with_G.rst", "generated/pywhy_graphs.networkx.MixedEdgeGraph.rst", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder.rst", "generated/pywhy_graphs.networkx.is_minimal_m_separator.rst", "generated/pywhy_graphs.networkx.m_separated.rst", "generated/pywhy_graphs.networkx.minimal_m_separator.rst", "generated/pywhy_graphs.simulate.simulate_data_from_var.rst", "generated/pywhy_graphs.simulate.simulate_linear_var_process.rst", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph.rst", "generated/pywhy_graphs.sys_info.rst", "generated/pywhy_graphs.viz.draw.rst", "generated/pywhy_graphs.viz.timeseries_layout.rst", "glossary.rst", "index.rst", "installation.md", "reference/algorithms/index.rst", "reference/classes/index.rst", "reference/export/index.rst", "reference/functional/index.rst", "reference/simulation/index.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst", "whats_new/v0.2.rst"], "titles": ["API", "Examples Gallery", "Introduction to causal graphs", "An introduction to Inducing Paths and how to find them", "An introduction to causal graphs and how to use them", "Computation times", "Networkx MixedEdgeGraph Examples", "MixedEdgeGraph - Graph with different types of edges", "Computation times", "Drawing graphs and setting their layout for visual comparison", "Visualization of causal graphs", "Drawing timeseries graphs and setting their layout", "Computation times", "pywhy_graphs.ADMG", "pywhy_graphs.AugmentedGraph", "pywhy_graphs.AugmentedPAG", "pywhy_graphs.CPDAG", "pywhy_graphs.PAG", "<span class=\"section-number\">3.4.1. </span>pywhy_graphs.algorithms.acyclification", "pywhy_graphs.algorithms.add_all_snode_combinations", "pywhy_graphs.algorithms.compute_invariant_domains_per_node", "<span class=\"section-number\">3.1.4. </span>pywhy_graphs.algorithms.discriminating_path", "pywhy_graphs.algorithms.find_connected_pairs", "pywhy_graphs.algorithms.inducing_path", "<span class=\"section-number\">3.1.5. </span>pywhy_graphs.algorithms.is_definite_noncollider", "<span class=\"section-number\">3.1.1. </span>pywhy_graphs.algorithms.is_valid_mec_graph", "<span class=\"section-number\">3.2.1. </span>pywhy_graphs.algorithms.pds", "<span class=\"section-number\">3.2.2. </span>pywhy_graphs.algorithms.pds_path", "<span class=\"section-number\">3.3.1. </span>pywhy_graphs.algorithms.pds_t", "<span class=\"section-number\">3.3.2. </span>pywhy_graphs.algorithms.pds_t_path", "<span class=\"section-number\">3.1.2. </span>pywhy_graphs.algorithms.possible_ancestors", "<span class=\"section-number\">3.1.3. </span>pywhy_graphs.algorithms.possible_descendants", "<span class=\"section-number\">3.2.3. </span>pywhy_graphs.algorithms.uncovered_pd_path", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.TimeSeriesGraph", "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.complete_ts_graph", "pywhy_graphs.classes.timeseries.empty_ts_graph", "pywhy_graphs.classes.timeseries.get_summary_graph", "pywhy_graphs.classes.timeseries.has_homologous_edges", "pywhy_graphs.classes.timeseries.nodes_in_time_order", "<span class=\"section-number\">5.1.2. </span>pywhy_graphs.export.clearn_to_graph", "<span class=\"section-number\">5.1.1. </span>pywhy_graphs.export.graph_to_clearn", "<span class=\"section-number\">5.2.1. </span>pywhy_graphs.export.graph_to_numpy", "<span class=\"section-number\">5.3.1. </span>pywhy_graphs.export.graph_to_pcalg", "<span class=\"section-number\">5.4.1. </span>pywhy_graphs.export.graph_to_tetrad", "<span class=\"section-number\">5.2.2. </span>pywhy_graphs.export.numpy_to_graph", "<span class=\"section-number\">5.3.2. </span>pywhy_graphs.export.pcalg_to_graph", "<span class=\"section-number\">5.4.2. </span>pywhy_graphs.export.tetrad_to_graph", "<span class=\"section-number\">2.5.2. </span>pywhy_graphs.functional.apply_linear_soft_intervention", "<span class=\"section-number\">2.2.1.2. </span>pywhy_graphs.functional.discrete.add_cpd_for_node", "<span class=\"section-number\">2.2.1.1. </span>pywhy_graphs.functional.discrete.make_random_discrete_graph", "<span class=\"section-number\">2.5.1. </span>pywhy_graphs.functional.make_graph_linear_gaussian", "<span class=\"section-number\">2.7.1. </span>pywhy_graphs.functional.make_graph_multidomain", "pywhy_graphs.functional.set_node_attributes_with_G", "pywhy_graphs.networkx.MixedEdgeGraph", "<span class=\"section-number\">3.1.6. </span>pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "<span class=\"section-number\">3.1.8. </span>pywhy_graphs.networkx.is_minimal_m_separator", "<span class=\"section-number\">3.1.7. </span>pywhy_graphs.networkx.m_separated", "<span class=\"section-number\">3.1.9. </span>pywhy_graphs.networkx.minimal_m_separator", "<span class=\"section-number\">4.1.2. </span>pywhy_graphs.simulate.simulate_data_from_var", "<span class=\"section-number\">4.1.1. </span>pywhy_graphs.simulate.simulate_linear_var_process", "<span class=\"section-number\">4.1.3. </span>pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "pywhy_graphs.sys_info", "pywhy_graphs.viz.draw", "pywhy_graphs.viz.timeseries_layout", "<span class=\"section-number\">6. </span>Glossary of Common Terms and API Elements", "<strong>pywhy-graphs</strong>", "Installation", "<span class=\"section-number\">3. </span>Causal Graph Algorithms in PyWhy", "<span class=\"section-number\">1. </span>Causal Graphs in PyWhy", "<span class=\"section-number\">5. </span>Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package", "<span class=\"section-number\">2. </span>Functional Causal Graphical Models", "<span class=\"section-number\">4. </span>Simulation module", "How to use pywhy-graphs with examples and tutorials", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?", "What\u2019s new?"], "terms": {"thi": [0, 1, 3, 4, 6, 7, 9, 11, 15, 16, 17, 18, 20, 25, 27, 28, 29, 32, 33, 35, 39, 40, 44, 48, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 75, 76, 77, 78, 79, 81], "i": [0, 1, 3, 4, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 40, 44, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80], "applic": 0, "program": 0, "interfac": [0, 71, 72, 76], "refer": [0, 14, 15, 18, 23, 26, 32, 52, 60, 62, 63, 64, 71, 72, 75, 77], "camelcas": 0, "name": [0, 7, 9, 13, 14, 15, 16, 17, 18, 33, 36, 37, 46, 51, 52, 60, 61, 62, 63, 64, 65, 69, 71, 75], "underscore_cas": 0, "pywhi": [0, 14, 15, 48, 49, 50, 53, 71, 73, 77, 80, 81, 83, 84], "group": 0, "themat": 0, "analysi": 0, "stage": [0, 58, 72], "These": [0, 4, 26, 71, 77], "ar": [0, 3, 4, 7, 9, 13, 14, 15, 16, 17, 20, 22, 23, 25, 26, 30, 31, 32, 33, 34, 37, 40, 43, 44, 46, 48, 49, 51, 52, 56, 57, 58, 60, 61, 62, 64, 65, 66, 71, 72, 74, 75, 77, 81], "structur": [0, 13, 16, 17, 33, 35, 38, 39, 40, 56, 58, 60, 71, 74, 75, 76, 77, 78], "scm": [0, 4, 16, 17, 33, 71, 75], "variou": [0, 4, 9, 75, 83], "encount": [0, 76], "literatur": [0, 4], "tradit": [0, 4, 13, 75], "oper": [0, 18], "over": [0, 7, 16, 17, 28, 29, 33, 34, 37, 40, 55, 60, 63, 65, 72, 75, 77], "onli": [0, 3, 4, 7, 16, 17, 32, 33, 37, 40, 48, 60, 63, 71, 75, 76, 77], "one": [0, 3, 4, 7, 9, 14, 17, 19, 20, 21, 25, 32, 34, 46, 48, 58, 60, 65, 66, 75, 76, 77], "type": [0, 1, 6, 8, 13, 14, 15, 16, 17, 33, 36, 40, 41, 46, 49, 51, 52, 53, 54, 60, 66, 71, 72, 76, 77, 79, 80], "equival": [0, 3, 4, 15, 16, 17, 33, 71, 75, 80], "gener": [0, 1, 3, 4, 7, 9, 11, 13, 16, 17, 33, 55, 56, 58, 60, 65, 66, 69, 75, 77, 78, 79, 80, 83], "consist": [0, 3, 28, 29, 34, 58, 65, 72, 75], "more": [0, 3, 4, 9, 14, 17, 58, 60, 66, 69, 71, 72, 75, 76], "than": [0, 17, 28, 29, 40, 58, 60, 75, 76], "common": [0, 4, 48, 72, 74, 75, 80], "us": [0, 1, 2, 5, 6, 7, 9, 11, 18, 20, 32, 33, 35, 39, 40, 56, 59, 68, 71, 72, 73, 76, 77, 78, 80], "varieti": 0, "differ": [0, 1, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 33, 37, 60, 62, 64, 66, 71, 72, 75, 77, 79], "learn": [0, 3, 4, 15, 16, 17, 18, 26, 33, 46, 68, 72, 75, 77, 79, 80, 83], "implement": [0, 7, 27, 28, 29, 60, 62, 63, 64, 71, 72, 75, 76, 83], "infer": [0, 4, 15, 20, 26, 72, 77], "procedur": [0, 18], "encod": [0, 4, 46, 75, 77], "object": [0, 4, 7, 9, 11, 16, 17, 33, 35, 40, 46, 60, 66, 71, 75], "submodul": [0, 72, 74, 77, 83], "those": [0, 3, 23, 60, 66], "data": [0, 13, 14, 15, 16, 17, 33, 34, 35, 40, 57, 58, 60, 65, 66, 71, 74, 75, 76, 77, 78], "correspond": [0, 7, 13, 15, 16, 17, 40, 48, 60, 67, 71, 75, 77], "current": [0, 20, 27, 28, 29, 34, 72, 75, 76, 77], "doe": [0, 17, 25, 32, 60, 63, 72, 77], "support": [0, 34, 43, 48, 60, 72, 73, 75, 76, 77, 83], "which": [0, 3, 4, 7, 11, 16, 17, 21, 26, 27, 28, 29, 32, 33, 34, 40, 46, 53, 55, 56, 57, 58, 60, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 77, 78, 80], "crucial": 0, "repres": [0, 4, 7, 13, 14, 15, 16, 17, 48, 49, 51, 52, 58, 60, 61, 62, 71, 72, 75, 76, 80], "latent": [0, 3, 4, 13, 15, 16, 17, 23, 26, 32, 33, 66, 71, 75, 77], "confound": [0, 3, 4, 7, 13, 16, 17, 23, 32, 33, 61, 66, 71, 75, 77], "select": [0, 3, 4, 13, 17, 23, 26, 32, 58, 75, 80], "bia": [0, 3, 4, 13, 17, 23, 32, 75], "The": [0, 4, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77], "follow": [0, 17, 26, 48, 51, 52, 60, 71, 75, 76, 77], "we": [0, 3, 4, 7, 9, 11, 17, 23, 32, 40, 48, 57, 58, 62, 65, 66, 71, 74, 75, 76, 77, 78, 79, 83, 84], "intend": 0, "pr": 0, "eventu": [0, 60, 72], "thei": [0, 4, 7, 9, 14, 15, 16, 17, 33, 40, 48, 56, 58, 60, 72, 75, 76, 77], "includ": [0, 20, 34, 35, 60, 62, 64, 65, 66, 67, 68, 71, 75, 83, 84], "temporari": 0, "bridg": 0, "welcom": [0, 76], "feedback": 0, "specif": [0, 7, 20, 48, 58, 59, 60, 62, 64, 70, 71, 72, 76, 80], "time": [0, 3, 4, 7, 9, 11, 28, 29, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 55, 65, 66, 67, 70, 71, 80, 83], "seri": [0, 4, 11, 34, 35, 36, 38, 39, 40, 41, 43, 44, 65, 66, 67, 70, 71, 80, 83], "also": [0, 48, 56, 58, 60, 70, 71, 72, 74, 75, 77], "have": [0, 4, 7, 17, 19, 24, 25, 44, 48, 56, 57, 58, 60, 61, 63, 65, 72, 75, 76, 77], "like": [0, 7, 17, 35, 48, 49, 51, 52, 60, 68, 72, 75, 76, 77], "stationari": [0, 33, 34, 35, 36, 37, 40, 44, 65, 66, 67, 75], "mai": [0, 13, 16, 17, 24, 34, 58, 60, 62, 63, 64, 66, 71, 75, 77], "For": [0, 3, 4, 7, 9, 11, 14, 15, 16, 17, 33, 34, 37, 57, 58, 60, 65, 69, 71, 72, 75, 77], "explicitli": [0, 60, 77], "them": [0, 1, 2, 5, 13, 16, 17, 25, 60, 63, 69, 71, 79], "assist": 0, "start": [0, 21, 27, 28, 29, 30, 31, 32, 45, 46, 52, 65, 67, 78], "from": [0, 3, 4, 9, 11, 15, 16, 17, 21, 26, 32, 33, 37, 40, 41, 43, 44, 45, 48, 52, 53, 57, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 80, 83], "an": [0, 1, 2, 5, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 32, 33, 34, 35, 37, 40, 41, 48, 51, 52, 55, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 76, 77, 78, 79, 83], "linear": [0, 54, 57, 58, 66, 80, 83], "equat": 0, "gaussian": [0, 54, 57, 58, 77], "sem": 0, "compar": [0, 4, 7, 9, 11, 17, 27, 28, 29, 60, 75], "becaus": [0, 3, 4, 7, 17, 48, 58, 62, 64, 72, 75, 76], "can": [0, 3, 4, 7, 9, 11, 13, 16, 17, 19, 20, 22, 32, 33, 34, 40, 48, 60, 63, 65, 66, 68, 69, 72, 75, 76, 77], "wrap": [0, 63, 77], "graphviz": [0, 4, 9, 11, 69, 80], "pygraphviz": [0, 34, 68, 75], "perform": [0, 63], "modular": 0, "node": [0, 4, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 44, 45, 46, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 80, 83], "modul": [0, 60, 68, 71, 72, 80], "simpl": [1, 17, 71, 72, 75, 77, 79], "demonstr": [1, 6, 9, 11, 79], "how": [1, 2, 5, 6, 9, 11, 13, 16, 17, 19, 20, 48, 49, 60, 63, 69, 71, 75, 77], "note": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 32, 33, 34, 40, 44, 48, 49, 52, 53, 58, 60, 61, 63, 65, 66, 67, 70, 71, 75, 77, 79, 81], "wip": [1, 6, 79], "api": [1, 6, 7, 35, 60, 75, 77, 79, 80, 81, 82, 83, 84], "intent": [1, 6, 79], "ad": [1, 3, 4, 6, 7, 14, 15, 16, 17, 19, 33, 34, 40, 60, 61, 75, 77, 79, 83], "edg": [1, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 27, 32, 33, 34, 35, 36, 37, 40, 44, 48, 49, 52, 57, 58, 60, 61, 62, 63, 64, 66, 69, 71, 72, 74, 75, 76, 77, 79, 83], "induc": [1, 2, 4, 5, 13, 16, 23, 33, 56, 60, 69, 71, 75, 79, 83], "path": [1, 2, 4, 5, 13, 21, 23, 24, 26, 27, 28, 29, 32, 60, 62, 63, 68, 69, 71, 79, 83], "find": [1, 2, 5, 13, 21, 22, 26, 60, 64, 69, 72, 79, 83], "draw": [1, 3, 4, 10, 12, 13, 16, 17, 38, 60, 70, 79, 83], "set": [1, 3, 4, 7, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 48, 49, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 75, 77, 79], "layout": [1, 10, 12, 13, 16, 17, 38, 60, 69, 70, 79, 83], "comparison": [1, 10, 11, 12, 13, 16, 17, 60, 69, 79], "timeseri": [1, 10, 12, 69, 70, 79, 80, 83], "download": [1, 3, 4, 7, 9, 11, 79], "all": [1, 3, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 33, 34, 35, 40, 44, 55, 56, 57, 58, 60, 61, 62, 64, 71, 72, 75, 76, 77, 79, 81], "python": [1, 3, 4, 7, 9, 11, 16, 17, 33, 40, 60, 68, 71, 72, 73, 79], "sourc": [1, 3, 4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 79], "code": [1, 3, 4, 7, 9, 11, 52, 71, 79], "auto_examples_python": [1, 79], "zip": [1, 79], "jupyt": [1, 3, 4, 7, 9, 11, 79], "notebook": [1, 3, 4, 7, 9, 11, 79], "auto_examples_jupyt": [1, 79], "sphinx": [1, 3, 4, 7, 9, 11, 71, 79], "click": [3, 4, 7, 9, 11], "here": [3, 4, 7, 9, 11, 52, 60, 76, 77, 79, 83, 84], "full": [3, 4, 7, 9, 11, 60, 66, 77], "A": [3, 4, 7, 9, 13, 16, 17, 18, 21, 23, 24, 25, 32, 33, 34, 36, 37, 38, 39, 40, 43, 55, 56, 60, 61, 63, 67, 70, 71, 75], "p": [3, 4, 21, 56, 71, 77], "call": [3, 9, 11, 15, 18, 27, 28, 29, 64, 71, 75], "rel": [3, 32, 72], "l": [3, 23], "": [3, 4, 15, 16, 17, 19, 20, 23, 26, 33, 34, 40, 52, 58, 60, 71, 72, 75, 80, 81], "mix": [3, 13, 17, 36, 40, 60, 62, 63, 64, 69, 72, 74, 75, 76, 83], "direct": [3, 7, 13, 14, 15, 16, 17, 18, 25, 26, 32, 33, 34, 35, 37, 38, 40, 43, 48, 60, 61, 62, 63, 64, 69, 72, 75, 77], "bidirect": [3, 4, 7, 13, 14, 15, 16, 17, 18, 33, 37, 48, 61, 62, 63, 64, 71, 72, 75, 77], "where": [3, 4, 7, 14, 15, 16, 17, 21, 25, 33, 34, 40, 48, 57, 60, 66, 71, 72, 75, 77], "everi": [3, 4, 7, 21, 26, 32, 63, 75, 77], "endpoint": [3, 4, 15, 17, 21, 29, 32, 46, 48, 75, 76], "vertex": [3, 21], "either": [3, 4, 15, 18, 48, 49, 58, 60, 71, 77], "ancestor": [3, 23, 30], "x": [3, 4, 7, 9, 11, 14, 15, 16, 17, 26, 28, 29, 33, 34, 37, 48, 57, 58, 62, 63, 64, 65, 69, 71, 75, 77], "y": [3, 4, 7, 9, 11, 14, 15, 16, 17, 26, 33, 34, 37, 48, 58, 62, 63, 64, 69, 71, 75, 77], "member": 3, "In": [3, 4, 9, 11, 17, 18, 32, 34, 44, 48, 58, 60, 65, 66, 72, 75, 77, 84], "other": [3, 4, 7, 9, 11, 17, 25, 48, 58, 60, 71, 75, 76, 77], "word": 3, "two": [3, 4, 7, 13, 16, 17, 23, 29, 32, 48, 58, 60, 61, 71, 72, 75, 77, 83], "cannot": [3, 23, 32, 62, 77], "d": [3, 4, 16, 17, 23, 26, 27, 28, 29, 33, 34, 40, 60, 75, 77], "seper": 3, "make": [3, 4, 18, 40], "activ": [3, 23], "regardless": [3, 23, 60], "what": [3, 4, 17, 18, 23, 58, 75, 81], "variabl": [3, 4, 7, 15, 23, 26, 32, 34, 41, 42, 56, 57, 58, 61, 65, 66, 70, 71, 75, 77], "condit": [3, 4, 23, 55, 56, 63, 65, 71, 77], "detail": [3, 4, 15, 23, 58, 71, 72], "found": [3, 21, 32, 60, 62, 64, 68], "1": [3, 4, 7, 9, 11, 14, 15, 18, 23, 26, 27, 28, 29, 32, 34, 35, 38, 39, 40, 48, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 81], "import": [3, 4, 7, 9, 11, 68, 71, 72, 77, 80, 83], "pywhy_graph": [3, 4, 7, 9, 11, 71, 72, 80, 83], "admg": [3, 9, 11, 14, 16, 17, 33, 46, 48, 51, 53, 63, 72, 75], "viz": [3, 4, 9, 11, 83], "To": [3, 7, 32, 44, 56, 58, 60, 65, 66, 72, 73, 77, 79], "illustr": [3, 72], "work": [3, 35, 60, 62, 63, 71, 72, 75], "algorithm": [3, 4, 16, 17, 33, 62, 63, 64, 72, 75, 78, 80, 83], "causal": [3, 5, 7, 13, 14, 15, 16, 17, 18, 23, 32, 33, 36, 37, 46, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 80, 83], "figur": 3, "2": [3, 4, 5, 7, 11, 15, 16, 17, 20, 26, 33, 34, 40, 48, 52, 57, 58, 60, 65, 68, 71, 75, 76, 77, 81], "g": [3, 4, 7, 9, 11, 18, 19, 20, 23, 24, 25, 30, 31, 32, 40, 41, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 77], "add_edg": [3, 4, 7, 16, 17, 33, 40, 60, 72], "x4": 3, "x1": [3, 11], "directed_edge_nam": [3, 13, 14, 15, 16, 17, 33, 37, 61, 62, 63, 64, 75], "x2": [3, 11], "x5": 3, "x6": 3, "x3": [3, 11], "l2": 3, "l1": 3, "paper": 3, "see": [3, 4, 9, 11, 14, 15, 23, 38, 39, 48, 49, 52, 53, 58, 60, 66, 69, 71, 72, 75], "dot_graph": [3, 4], "render": [3, 4, 9, 11, 71], "outfil": [3, 4, 9, 11], "png": [3, 4, 9, 11], "view": [3, 4, 9, 11, 40, 60, 77], "true": [3, 4, 7, 9, 11, 18, 23, 33, 34, 35, 37, 40, 41, 44, 57, 58, 60, 62, 63, 68, 71, 75], "By": [3, 7, 13, 14, 15, 16, 17, 21, 26, 32, 33, 35, 40, 55, 58, 60, 65, 67, 69, 71, 75], "definit": [3, 13, 16, 17, 24, 27, 32, 71, 75], "test": [3, 62, 76, 78, 83], "return": [3, 4, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 77], "print": [3, 4, 7, 9, 11, 48, 68], "inducing_path": [3, 5], "given": [3, 4, 16, 17, 19, 20, 32, 33, 34, 40, 55, 56, 58, 60, 63, 75, 77], "need": [3, 4, 32, 34, 72, 75, 79], "satisfi": 3, "requir": [3, 9, 17, 71, 75], "function": [3, 4, 7, 9, 11, 17, 25, 32, 34, 38, 39, 41, 44, 60, 62, 68, 71, 72, 74, 75, 76, 78, 80, 83], "enough": 3, "pair": [3, 13, 14, 15, 16, 17, 22, 25, 33, 34, 36, 48, 60, 71, 75, 77], "As": [3, 7], "c": [3, 4, 13, 21, 32, 71], "final": [3, 11, 60, 66, 75, 77], "skeleton": 3, "class": [3, 4, 7, 13, 14, 15, 16, 17, 48, 60, 71, 72, 80, 83], "sens": [3, 25, 75], "mag": [3, 52], "dag": [3, 13, 16, 17, 33, 37, 46, 51, 52, 53, 56, 57, 58, 61, 63, 66, 67, 72, 75, 76], "contain": [3, 15, 16, 17, 23, 25, 27, 33, 40, 44, 48, 60, 62, 63, 64, 71, 72, 77], "among": [3, 28, 29, 35, 58, 60, 63, 66, 71, 75], "ii": 3, "primit": 3, "sinc": [3, 4, 7, 48, 60, 77, 83, 84], "fals": [3, 4, 7, 32, 34, 40, 43, 55, 56, 60, 62, 68, 75], "howev": [3, 4, 13, 32, 65, 66, 71, 72, 75, 77], "add": [3, 4, 7, 13, 14, 16, 17, 19, 33, 34, 36, 40, 55, 60, 72, 73, 75, 77, 83], "valid": [3, 25, 34, 56, 64, 75], "now": [3, 4, 7, 67, 77], "ha": [3, 4, 7, 15, 16, 17, 21, 26, 33, 40, 48, 60, 62, 63, 64, 66, 71, 72, 75, 77, 83, 84], "downstream": 3, "effect": [3, 11, 16, 17, 33, 40, 60, 66, 77, 79], "descend": [3, 31], "open": [3, 4, 72], "up": [3, 4, 34, 75], "some": [3, 9, 11, 26, 60, 72, 75, 77, 79], "still": [3, 4, 58, 71], "do": [3, 4, 17, 25, 60, 71, 75, 77], "avail": [3, 73], "If": [3, 4, 7, 15, 16, 17, 20, 24, 26, 32, 33, 34, 37, 40, 44, 55, 58, 60, 62, 64, 65, 68, 72, 75, 77], "should": [3, 7, 16, 17, 33, 35, 39, 40, 60, 71, 72, 77, 80], "jiji": [3, 4, 23, 32], "zhang": [3, 4, 23, 32], "On": [3, 4, 23, 32], "complet": [3, 16, 23, 26, 32, 33, 35, 41, 60, 62, 63, 64, 65, 75], "orient": [3, 4, 16, 17, 21, 23, 32, 33, 37, 71, 75], "rule": [3, 4, 17, 23, 32, 75], "discoveri": [3, 4, 15, 18, 23, 32, 75, 78], "presenc": [3, 4, 7, 13, 18, 23, 32, 75], "artifici": [3, 4, 18, 23, 32, 62, 63, 64], "intellig": [3, 4, 18, 23, 32, 62, 63, 64], "172": [3, 4, 23, 32], "16": [3, 4, 8, 23, 32, 83], "1873": [3, 4, 23, 32], "1896": [3, 4, 23, 32], "2008": [3, 4, 23, 32], "url": [3, 4, 15, 18, 23, 26, 32], "http": [3, 4, 9, 15, 18, 23, 26, 32, 52, 53, 60, 69, 71, 73], "www": [3, 4, 15, 23, 32], "sciencedirect": [3, 4, 23, 32], "com": [3, 4, 23, 32, 73], "scienc": [3, 4, 15, 23, 32], "articl": [3, 4, 23, 32], "pii": [3, 4, 23, 32], "s0004370208001008": [3, 4, 23, 32], "doi": [3, 4, 15, 23, 26, 32, 62, 63, 64], "org": [3, 4, 9, 15, 23, 26, 32, 52, 60, 69, 73], "10": [3, 4, 9, 11, 15, 23, 26, 32, 48, 55, 62, 63, 64, 83], "1016": [3, 4, 23, 32, 62, 63, 64], "j": [3, 4, 22, 23, 32, 48, 57, 62, 63, 64], "artint": [3, 4, 23, 32, 62, 63, 64], "08": [3, 4, 23, 32, 68], "001": [3, 4, 23, 32], "diego": [3, 26], "colombo": [3, 26], "marlo": [3, 26], "h": [3, 26], "maathui": [3, 26], "marku": [3, 26], "kalisch": [3, 26], "thoma": [3, 26], "richardson": [3, 26], "high": [3, 26, 56], "dimension": [3, 26, 71, 77], "acycl": [3, 13, 16, 26, 33, 66, 72, 75, 77, 80, 83], "annal": [3, 26], "statist": [3, 14, 26], "40": [3, 26, 62, 63, 64], "294": [3, 26], "321": [3, 26], "2012": [3, 26], "1214": [3, 26], "11": [3, 26], "aos940": [3, 26], "total": [3, 4, 5, 7, 8, 9, 11, 12, 34, 58, 60, 75], "run": [3, 4, 7, 9, 11, 68, 73], "script": [3, 4, 7, 9, 11, 71], "0": [3, 4, 7, 9, 11, 14, 15, 26, 34, 44, 45, 48, 52, 55, 56, 57, 58, 65, 66, 68, 70, 71, 72, 75, 76, 77, 81], "minut": [3, 4, 7, 9, 11], "945": [3, 5], "second": [3, 4, 7, 9, 11, 60, 63, 71, 75], "estim": [3, 4, 7, 9, 11, 71], "memori": [3, 4, 7, 9, 11, 68, 71], "usag": [3, 4, 7, 9, 11, 71, 72], "9": [3, 4, 9, 11, 26, 34, 75, 83], "mb": [3, 4, 5, 7, 8, 9, 11, 12], "py": [3, 4, 5, 7, 8, 9, 11, 12, 73], "ipynb": [3, 4, 7, 9, 11], "galleri": [3, 4, 7, 9, 11, 71], "exampl": [4, 7, 9, 11, 14, 15, 33, 34, 37, 40, 48, 58, 65, 68, 71, 72, 75, 77], "graphic": [4, 14, 57, 71, 80], "attach": [4, 77], "notion": 4, "each": [4, 7, 9, 11, 14, 15, 16, 17, 25, 33, 36, 40, 55, 56, 58, 60, 65, 68, 69, 70, 71, 75, 77], "miss": [4, 58, 66], "review": 4, "fundament": [4, 72], "networkx": [4, 7, 9, 11, 13, 14, 15, 16, 17, 33, 34, 36, 40, 41, 57, 58, 68, 71, 75, 76, 77, 83], "nx": [4, 7, 9, 35, 43, 56, 60, 67, 71, 72, 75], "numpi": [4, 34, 48, 49, 51, 56, 68, 71, 75, 80, 83], "np": [4, 46, 48, 71], "panda": [4, 65, 67, 68, 71], "pd": [4, 27, 28, 29, 32, 71, 83], "dowhi": [4, 68], "gcm": 4, "util": 4, "set_random_se": 4, "scipi": [4, 34, 66, 68, 75], "stat": [4, 66], "pywhy_nx": [4, 18, 46, 69, 72], "mathemat": 4, "defin": [4, 7, 23, 26, 27, 28, 29, 32, 34, 48, 49, 55, 56, 57, 60, 71, 75, 77], "4": [4, 27, 62, 64, 68, 70, 71, 75, 77], "tupl": [4, 7, 14, 15, 16, 17, 21, 22, 23, 28, 29, 32, 33, 34, 40, 44, 47, 58, 60, 71, 75, 77], "v": [4, 7, 16, 17, 21, 26, 32, 33, 37, 40, 44, 60, 63, 64, 71], "u": [4, 9, 11, 16, 17, 21, 26, 32, 33, 37, 40, 44, 57, 60, 71, 72, 77], "f": [4, 7, 14, 15, 71, 75, 77], "endogen": [4, 71], "observ": [4, 65, 67, 71, 77], "exogen": [4, 54, 55, 71, 77], "unobserv": [4, 7, 16, 33, 61, 75], "distribut": [4, 15, 55, 57, 58, 66, 71], "taken": [4, 32, 60], "togeth": 4, "four": [4, 60], "mechan": [4, 58], "problem": [4, 15], "almost": 4, "alwai": [4, 23, 34, 56, 62, 64, 71, 72, 75, 77], "argument": [4, 9, 11, 13, 14, 15, 16, 17, 32, 33, 34, 36, 37, 40, 60, 68, 71, 75, 77, 83], "parent": [4, 16, 17, 21, 33, 37, 55, 56, 57, 58, 71, 77], "ani": [4, 7, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 44, 46, 47, 48, 51, 52, 54, 56, 58, 60, 65, 69, 71, 75, 77], "between": [4, 13, 16, 17, 21, 23, 25, 26, 29, 32, 33, 40, 46, 48, 57, 58, 60, 62, 63, 64, 71, 72, 75, 76, 77, 83], "even": [4, 64], "though": 4, "typic": [4, 7, 32], "unknown": [4, 15], "ground": 4, "truth": 4, "evalu": 4, "build": [4, 72], "our": [4, 72, 77], "intuit": [4, 23, 32], "understand": 4, "context": [4, 72, 77], "random": [4, 14, 15, 54, 55, 56, 57, 58, 65, 66, 67, 70, 77], "seed": [4, 54, 57, 58, 67], "reproduc": [4, 60], "12345": 4, "rng": [4, 77], "randomst": [4, 54], "mycustommodel": 4, "predictionmodel": 4, "def": 4, "__init__": 4, "self": 4, "coeffici": 4, "fit": [4, 71], "noth": 4, "know": [4, 7, 75], "pass": [4, 9, 11, 16, 17, 32, 33, 37, 65, 68, 77], "predict": [4, 26], "clone": [4, 73], "don": [4, 60], "t": [4, 34, 35, 45, 60, 65, 70, 71, 75], "realli": 4, "actual": [4, 40, 60, 76], "1234": 4, "construct": [4, 20, 25, 51, 53, 58, 77], "result": [4, 7, 17, 66, 75, 77], "xy": [4, 9], "z": [4, 7, 9, 26, 34, 48, 62, 63, 64, 75, 77], "w": [4, 9], "_________": 4, "digraph": [4, 7, 9, 13, 14, 15, 16, 17, 33, 36, 37, 41, 42, 43, 55, 56, 57, 58, 60, 61, 69, 72, 75], "causal_model": 4, "probabilisticcausalmodel": 4, "set_causal_mechan": 4, "scipydistribut": 4, "binom": [4, 58], "5": [4, 5, 11, 12, 66, 68, 70, 77], "n": [4, 16, 17, 33, 37, 57, 60, 77], "additivenoisemodel": 4, "prediction_model": 4, "noise_model": 4, "8": [4, 5, 8, 12, 62, 68, 73], "would": [4, 7, 17, 34, 48, 64, 65, 70, 75], "paramet": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75], "anyth": [4, 71, 77], "method": [4, 60, 71, 74, 75, 76], "ensur": [4, 63], "fcm": 4, "correct": [4, 16, 17, 33, 37, 60], "local": [4, 68, 77], "hash": 4, "e": [4, 7, 9, 11, 18, 20, 26, 32, 35, 52, 60, 63, 64, 66, 68, 70, 71, 72, 73, 75, 77], "get": [4, 7, 9, 11, 57, 58, 60], "inconsist": [4, 20, 58, 71], "error": [4, 19, 25, 60, 76], "modifi": [4, 57, 58, 59, 65, 75], "afterward": 4, "without": [4, 7, 9, 11, 13, 17, 18, 35, 40, 60, 66, 71, 75], "updat": [4, 16, 17, 33, 40, 60], "empti": [4, 23, 34, 62, 63, 64, 75, 77], "small": 4, "workaround": 4, "pre": [4, 48, 49, 83], "datafram": [4, 65, 67], "column": [4, 46, 51, 52, 65, 70], "sampl": [4, 55, 56, 57, 58, 67, 71, 83], "draw_sampl": 4, "num_sampl": 4, "500": [4, 65], "head": 4, "col": 4, "uniqu": [4, 34, 48, 75, 77], "show": [4, 7, 9, 68], "collid": [4, 21, 23, 24, 26, 63], "collis": 4, "arrow": [4, 76], "00": [4, 5, 8, 12], "100": 4, "861": 4, "18it": 4, "3": [4, 7, 11, 15, 16, 17, 21, 27, 33, 40, 52, 58, 60, 64, 68, 70, 73, 75, 76], "row": [4, 46, 51, 52, 70, 71], "dtype": 4, "0x7f65f8e12e20": 4, "markovian": [4, 16, 17, 33, 75], "suffici": [4, 16, 33, 75], "assumpt": [4, 16, 17, 33, 35, 75, 77], "One": [4, 9, 11, 16, 33, 51, 52, 53, 71, 72, 75], "queri": [4, 7, 34, 60, 75], "list": [4, 15, 21, 22, 23, 32, 34, 36, 40, 41, 46, 47, 51, 52, 56, 57, 58, 60, 65, 70, 71, 72, 75, 77, 83, 84], "predecessor": [4, 77], "Or": 4, "children": [4, 16, 17, 33, 37, 71, 77], "successor": 4, "explor": [4, 21, 77], "separ": [4, 17, 23, 26, 27, 28, 29, 34, 48, 62, 63, 64, 75, 83], "statement": [4, 71], "markov": [4, 15, 16, 17, 33, 71, 75, 80], "impli": [4, 16, 33, 52, 58, 75], "independ": [4, 60, 65, 66, 71], "d_separ": [4, 63], "semi": [4, 17, 75], "possibli": [4, 26, 27, 28, 29, 43, 57, 58, 60, 77], "depict": [4, 34, 75], "just": [4, 7, 13, 14, 15, 16, 17, 33, 37, 67, 73, 75, 76, 77], "set_nodes_as_latent_confound": [4, 9], "anymor": 4, "form": [4, 24, 25, 26, 66, 74, 75, 76], "cluster": 4, "compon": [4, 13, 18, 27, 58, 71], "short": 4, "c_compon": [4, 13, 71], "look": [4, 11, 72, 77, 79], "m": [4, 18, 62, 63, 64, 77, 83], "similarli": [4, 60, 62, 75, 77], "m_separ": [4, 83], "sai": 4, "longer": 4, "bidirected_edge_nam": [4, 13, 14, 15, 17, 37, 61, 62, 63, 64, 75], "after": [4, 20, 32], "besid": [4, 32, 60], "relationship": [4, 13, 16, 17, 33, 71, 75, 80], "same": [4, 7, 9, 11, 13, 16, 17, 20, 33, 40, 48, 60, 66, 71, 75, 77], "commonli": 4, "constraint": [4, 16, 17, 18, 33, 75], "base": [4, 16, 17, 18, 20, 33, 57, 60, 72, 75], "seek": 4, "reconstruct": 4, "part": [4, 71], "next": [4, 11, 75, 77], "section": [4, 77], "briefli": 4, "overview": [4, 79], "usual": [4, 71, 72], "so": [4, 7, 9, 17, 56, 60, 62, 71, 72, 75, 76, 77], "dodiscov": [4, 68], "github": [4, 53, 72, 73], "why": [4, 73], "_": [4, 71], "pleas": [4, 60, 72, 76], "repo": 4, "stem": [4, 75], "relev": [4, 34, 56, 60, 68, 71, 72, 75, 77], "assum": [4, 40, 65, 67, 72, 75, 77, 78], "uncertain": [4, 24, 26], "via": [4, 7, 16, 17, 33, 37, 40, 60, 73], "undirect": [4, 13, 14, 15, 16, 17, 33, 34, 37, 39, 43, 48, 60, 62, 63, 64, 75, 83], "ll": 4, "earlier": 4, "learnt": 4, "variant": 4, "pc": [4, 16, 33, 75], "let": [4, 9, 11], "add_edges_from": [4, 9, 11, 16, 17, 33, 40, 60], "undirected_edge_nam": [4, 9, 13, 14, 15, 16, 17, 33, 37, 62, 63, 64, 75], "unshield": [4, 32], "present": [4, 7, 13, 16, 17, 18, 48, 62, 63, 64, 70, 75], "origin": [4, 15, 40, 60, 77], "orient_uncertain_edg": [4, 9, 16, 17, 33, 37], "allow": [4, 7, 14, 16, 17, 26, 33, 35, 48, 63, 66, 71, 75, 76, 77], "complex": [4, 17, 75, 77], "circl": [4, 15, 17, 32, 37, 48, 52, 69, 75, 76, 83], "o": [4, 17, 24, 32, 48, 52, 63, 64, 75, 76], "tail": [4, 17, 32, 48, 52, 75, 76], "arrowhead": [4, 16, 17, 32, 33, 37, 52, 75, 76], "possibl": [4, 13, 17, 19, 20, 30, 31, 55, 56, 58, 75, 77], "fci": [4, 17, 32, 75], "circle_edge_nam": [4, 15, 17, 37, 75], "judea": [4, 14, 15], "pearl": [4, 14, 15], "reason": 4, "cambridg": 4, "univers": 4, "press": [4, 18, 26], "usa": 4, "2nd": 4, "edit": 4, "2009": 4, "isbn": [4, 26], "052189560x": 4, "peter": [4, 18, 26], "spirt": [4, 26], "clark": [4, 26], "glymour": [4, 26], "richard": [4, 26], "schein": [4, 26], "causat": [4, 26], "search": [4, 26, 27, 28, 29, 32, 63], "volum": [4, 18, 26], "81": [4, 26], "mit": [4, 26], "01": [4, 8, 12, 26], "1993": [4, 14, 26], "978": [4, 26], "4612": [4, 26], "7650": [4, 26], "1007": [4, 26], "2748": [4, 26], "019": [4, 5], "59": [4, 5], "intro_causal_graph": [4, 5, 9, 11], "04": 5, "964": 5, "execut": [5, 8, 12, 68], "auto_examples_intro": 5, "file": [5, 8, 12, 50, 53, 68, 76], "introduct": [5, 13, 16, 17, 60, 63, 69], "graph": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 78, 80, 81, 83, 84], "compris": [7, 60, 71], "user": [7, 14, 60, 68, 71, 72, 77], "arbitrari": [7, 60], "represent": [7, 60, 63, 69, 72, 77], "intern": [7, 13, 14, 16, 25, 33, 37, 72, 75], "semant": 7, "normal": [7, 56, 57], "convert": [7, 18, 46, 48, 49, 50, 51, 52, 53, 57, 58, 61, 65, 77, 83], "its": [7, 34, 55, 71, 75, 76, 77], "appropri": 7, "relat": [7, 9, 11, 13, 71, 72, 75], "matplotlib": [7, 68], "pyplot": 7, "plt": 7, "pg": 7, "kind": [7, 17, 60, 75], "creat": [7, 9, 11, 34, 41, 58, 60, 72, 75], "specifi": [7, 9, 16, 17, 33, 40, 58, 60, 61, 66, 72, 75, 77], "associ": [7, 55, 60, 71, 77], "directed_g": 7, "bidirected_g": 7, "add_nodes_from": [7, 60], "edge_typ": [7, 16, 17, 33, 36, 40, 60, 72, 75], "iv": 7, "comput": [7, 20, 27, 28, 29, 32, 43, 57, 58, 60, 77], "multipartite_layout": 7, "layer": [7, 35, 75, 77], "attribut": [7, 13, 14, 16, 17, 20, 33, 34, 36, 40, 56, 57, 58, 59, 60, 69, 71, 75, 77], "po": [7, 9, 11, 69, 70], "spring_layout": [7, 9], "visual": [7, 11, 12, 13, 16, 17, 60, 69], "fig": 7, "ax": 7, "subplot": 7, "draw_networkx": 7, "get_graph": [7, 60, 72], "set_titl": 7, "instrument": 7, "tight_layout": 7, "block": 7, "is_direct": [7, 60], "multigraph": [7, 60], "is_multigraph": [7, 60], "bidirected_edg": [7, 13, 17, 37, 75], "0x7f65fc5f00a0": 7, "0x7f65fc5fa250": 7, "similar": [7, 17, 55, 60, 71, 72, 75], "default": [7, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 77], "store": [7, 9, 11, 13, 16, 17, 46, 53, 60, 74, 75, 76], "insid": [7, 83], "assert": [7, 72], "order": [7, 9, 16, 17, 33, 34, 35, 37, 45, 46, 51, 52, 60, 65, 70, 75, 77], "len": [7, 60], "number_of_nod": [7, 60], "new": [7, 60, 72, 77, 81], "has_nod": [7, 60], "add_nod": 7, "remov": [7, 20, 40, 58, 60, 62, 64, 75], "remove_nod": 7, "except": [7, 19, 20, 40, 60], "per": [7, 66], "must": [7, 16, 17, 29, 32, 33, 35, 40, 46, 56, 58, 60, 65, 69, 75, 77], "when": [7, 16, 17, 20, 32, 33, 40, 60, 62, 66, 68, 71, 72, 77, 81], "you": [7, 17, 58, 60, 65, 72, 73, 75, 76, 79], "well": [7, 60, 77], "has_edg": [7, 44, 60, 72], "remove_edg": [7, 40, 60], "standard": [7, 76], "adj": [7, 60], "degre": [7, 60], "instead": [7, 60, 65], "moreov": [7, 57, 58, 60], "neighbor": [7, 60], "uni": 7, "counterpart": 7, "mani": [7, 60, 72], "connect": [7, 14, 16, 18, 22, 32, 33, 34, 37, 58, 60, 61, 63, 66, 75], "adjac": [7, 21, 23, 24, 26, 27, 32, 48, 49, 52, 60], "provid": [7, 40, 60, 71, 72, 74, 75, 76, 77, 78], "wai": [7, 17, 60, 75, 76, 77], "iter": [7, 13, 16, 17, 33, 35, 37, 45, 60, 75], "through": [7, 60, 71, 77], "item": [7, 60], "want": [7, 17, 60, 75, 77], "dictionari": [7, 9, 11, 16, 17, 33, 40, 60, 70, 72, 77], "166": [7, 8], "17": [7, 68, 83], "plot_mixed_edge_graph": [7, 8], "auto_examples_mixededg": 8, "mixededgegraph": [8, 13, 14, 16, 17, 18, 40, 46, 61, 67, 69, 72, 75, 83], "case": [9, 11, 17, 32, 44, 65, 75, 77], "choos": [9, 11, 20], "place": [9, 11, 18, 57, 58, 61], "fix": [9, 58, 81, 82, 83, 84], "easili": 9, "posit": [9, 11, 69, 70, 83], "label": [9, 16, 17, 33, 40, 60, 61, 69, 83], "altern": 9, "own": [9, 76], "manual": [9, 53, 60], "softwar": [9, 11, 72], "dagitti": [9, 80], "arrai": [9, 11, 34, 46, 48, 49, 51, 52, 65, 70, 71, 75, 76, 83], "15471958": 9, "42925134": 9, "7990356": 9, "90151211": 9, "36916753": 9, "62354034": 9, "6548282": 9, "09580111": 9, "92997669": 9, "pag": [9, 11, 14, 15, 21, 24, 25, 26, 27, 30, 31, 32, 35, 46, 49, 51, 52, 53, 72, 75, 83], "cpdag": [9, 11, 17, 25, 33, 46, 49, 51, 52, 53, 75, 83], "dummi": [9, 11], "borrow": [9, 11], "pos_g": [9, 11], "k": [9, 40, 60], "inspect": [9, 11], "notic": [9, 11], "kei": [9, 11, 13, 14, 16, 17, 33, 34, 36, 40, 60, 69, 70, 71, 75, 77], "coordin": [9, 11, 69], "valu": [9, 11, 13, 14, 16, 17, 33, 34, 36, 40, 48, 49, 55, 56, 58, 60, 69, 71, 75, 76, 77], "dot_g": [9, 11], "dot_admg": 9, "dot_cpdag": 9, "dot_pag": 9, "engin": [9, 11, 72], "neato": [9, 11], "leverag": [9, 77], "inform": [9, 14, 15, 49, 60, 66, 68, 69, 71, 77], "document": [9, 38, 39, 52, 53, 60, 69, 71, 72, 74, 75], "doc": [9, 60, 69, 71], "444": [9, 12], "draw_and_compare_graphs_with_same_layout": [9, 12], "rather": [11, 17, 60, 75, 77], "messi": 11, "output": [11, 48, 50, 65, 68, 75, 77], "stationarytimeseriesdigraph": [11, 35, 41, 42, 66, 75], "timeseries_layout": 11, "max_lag": [11, 34, 35, 36, 38, 39, 40, 41, 42, 65, 66, 67, 75], "ts_edg": 11, "first": [11, 14, 32, 58, 60, 62, 63, 71, 73, 75, 77], "default_g": 11, "nice": 11, "variable_ord": [11, 70], "scale": [11, 70], "7": [11, 64, 68], "33333333": 11, "836": [11, 12], "plot_timeseries_graph": [11, 12], "280": 12, "auto_examples_visu": 12, "6": [12, 62, 68, 83], "incoming_directed_edg": [13, 14, 15, 16, 17, 33, 37, 75], "none": [13, 14, 15, 16, 17, 19, 20, 21, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 77], "incoming_bidirected_edg": [13, 14, 15, 17, 37, 75], "incoming_undirected_edg": [13, 14, 15, 16, 17, 33, 37, 75], "str": [13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 46, 47, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 69, 75], "attr": [13, 14, 15, 16, 17, 33, 34, 35, 36, 37, 38, 39, 40, 60, 69, 75], "constitut": [13, 71, 75], "did": [13, 75], "while": [13, 71, 72, 75], "input": [13, 14, 15, 16, 17, 33, 34, 56, 57, 60, 74, 75, 77], "option": [13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 46, 54, 55, 56, 57, 58, 60, 65, 66, 67, 69, 70, 75], "initi": [13, 14, 15, 16, 17, 33, 34, 60, 65, 67, 75], "accept": [13, 14, 15, 16, 17, 33, 75], "keyword": [13, 14, 16, 17, 33, 34, 36, 40, 60, 72, 75, 77, 83], "subgraph": [13, 14, 15, 16, 17, 26, 33, 40, 60, 75], "underneath": [13, 16, 17, 75], "hood": [13, 16, 17, 75], "non": [13, 16, 21, 23, 24, 25, 35, 48, 60, 62, 63, 75, 77], "stand": [13, 16, 71, 75], "indic": [13, 15, 16, 17, 34, 48, 71, 75, 77], "access": [13, 16, 17, 33, 40, 60, 71, 75], "sub_directed_graph": [13, 16, 17, 33, 37, 75], "Their": [13, 16, 17, 75], "format": [13, 16, 17, 34, 50, 53, 75, 76], "directed_edg": [13, 16, 17, 33, 37, 75], "sub_bidirected_graph": [13, 17, 37, 75], "sub_undirected_graph": [13, 16, 17, 33, 37, 75], "undirected_edg": [13, 16, 17, 33, 37, 75], "cycl": [13, 16, 18, 25, 66, 72, 75], "exist": [13, 14, 16, 23, 40, 55, 56, 57, 58, 60, 62, 64, 72, 75, 78], "due": [13, 16, 26, 71, 75, 77], "beyond": [13, 75], "multipl": [13, 48, 60, 65, 75, 76], "properti": [13, 16, 17, 33, 37, 60, 75], "map": [13, 14, 15, 16, 17, 33, 37, 48, 49, 60, 71, 72, 75, 76, 77], "edgeview": [13, 16, 17, 33, 37, 60], "trivial": [13, 32], "themself": 13, "comp": 13, "sub": [13, 16, 17, 18, 33, 37, 60], "augment": [14, 15, 19, 20, 62, 75, 77], "diagram": [14, 15, 58, 80], "intervent": [14, 15, 54, 71, 75, 83], "were": [14, 61], "introduc": 14, "model": [14, 15, 16, 17, 33, 35, 57, 58, 66, 71, 75, 80, 83], "hard": 14, "soft": [14, 15, 54], "explicit": [14, 71], "tbd": 14, "guid": [14, 71, 72], "exactli": [14, 15, 40], "index": [14, 15, 34, 46, 52, 72, 75], "number": [14, 15, 16, 17, 19, 20, 22, 33, 40, 55, 56, 58, 60, 63, 64, 65, 66, 67, 71, 75, 77], "appli": [14, 15, 18, 54, 55, 57, 71], "rightarrow": [14, 15, 48, 58, 77], "regular": [14, 15, 58], "aspect": [14, 72], "proceed": [14, 15, 18], "49th": 14, "session": 14, "institut": 14, "page": [14, 72, 81], "399": 14, "401": 14, "incoming_circle_edg": [15, 17, 37, 75], "been": [15, 62], "both": [15, 17, 32, 40, 60, 71, 75, 77], "It": [15, 27, 60, 70, 71, 77], "circular": [15, 17, 26, 35, 75], "f_node": 15, "handl": [15, 19, 20, 48, 60, 80], "target": [15, 54, 59, 71, 75], "integ": [15, 56, 60, 71, 77], "sigma": 15, "special": [15, 17, 32, 71, 75], "known": [15, 72, 75, 77], "domain": [15, 19, 20, 22, 58], "environ": 15, "amin": 15, "jaber": 15, "murat": 15, "kocaoglu": 15, "karthikeyan": 15, "shanmugam": 15, "elia": 15, "bareinboim": 15, "character": [15, 75], "advanc": 15, "neural": 15, "process": [15, 65, 66, 67, 75, 77], "system": [15, 68, 77], "33": 15, "9551": 15, "9561": 15, "2020": [15, 18, 68], "2019": [15, 62, 63, 64], "fusion": 15, "nation": 15, "academi": 15, "113": 15, "27": 15, "7345": 15, "7352": 15, "juli": 15, "2016": 15, "publish": 15, "pna": 15, "content": 15, "1073": 15, "1510507113": 15, "partial": [16, 17, 18, 33, 72, 75], "uncertainti": [16, 17, 18, 33, 75], "b": [16, 33, 52, 62, 63, 64, 75], "implicit": [16, 17, 33, 75], "score": [16, 33, 75], "ge": [16, 33, 75], "approach": [16, 17, 33, 72, 75, 83], "suspect": [16, 33, 75], "directino": [16, 75], "u_of_edg": [16, 17, 33, 40, 44, 60], "v_of_edg": [16, 17, 33, 40, 44, 60], "automat": [16, 17, 33, 34, 40, 60, 75], "alreadi": [16, 17, 32, 33, 40, 60, 65, 71, 77], "directli": [16, 17, 33, 35, 39, 40, 60, 75, 77], "u_for_edg": [16, 17, 33, 40, 60], "v_for_edg": [16, 17, 33, 40, 60], "string": [16, 17, 33, 40, 60, 69, 71, 77], "hashabl": [16, 17, 33, 40, 60], "assign": [16, 17, 33, 40, 51, 52, 56, 60, 77], "collect": [16, 17, 33, 40, 60], "ebunch_to_add": [16, 17, 33, 40, 60], "singl": [16, 17, 33, 36, 40, 60, 71, 72, 75, 77], "twice": [16, 17, 33, 40, 60], "duplic": [16, 17, 33, 40, 60], "ebunch": [16, 17, 33, 40, 60], "take": [16, 17, 27, 33, 40, 57, 58, 60, 72, 74, 75, 77], "preced": [16, 17, 33, 40, 60, 77], "union": [16, 17, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 44, 46, 47, 51, 52, 54, 58, 60, 64, 65], "int": [16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 51, 52, 54, 56, 57, 58, 60, 65, 66, 67, 70, 75], "float": [16, 17, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 44, 46, 47, 51, 52, 54, 55, 56, 57, 58, 60, 65, 66, 70], "simpli": [16, 17, 33, 37, 66, 71, 77], "point": [16, 17, 18, 33, 34, 35, 37, 40, 44, 61, 65, 66, 67, 70, 71, 75, 77], "possible_children": [16, 17, 33, 37], "consid": [16, 17, 32, 33, 37, 40, 67, 71, 77], "possible_par": [16, 17, 33, 37], "ancestr": [17, 18, 62, 63, 64, 72, 75], "term": [17, 75, 77, 80], "essenti": [17, 75], "extend": [17, 75], "sub_circle_graph": [17, 37, 75], "circle_edg": [17, 37, 75], "exponenti": [17, 75], "increas": [17, 75], "occur": [17, 54, 65, 75], "main": [17, 60, 75], "complic": [17, 72, 75], "aris": [17, 75], "combin": [17, 75, 77], "abov": [17, 65, 75, 77], "certain": [17, 32, 72, 75], "anoth": [17, 75, 80], "matter": [17, 75], "loss": [17, 75], "deal": [17, 75], "flip": [17, 75], "discuss": [17, 75, 77], "dictat": [17, 75], "sort": [17, 75, 77], "There": [17, 53, 60, 75], "opposit": [17, 75], "qualifi": 17, "yield": [17, 60], "directed_edge_typ": 18, "bidirected_edge_typ": 18, "copi": [18, 40, 52, 60], "bool": [18, 21, 23, 24, 25, 32, 33, 34, 35, 37, 40, 41, 43, 44, 55, 56, 60, 62, 63, 68, 75], "acyclifi": 18, "cyclic": [18, 43, 83], "aci": 18, "whether": [18, 21, 24, 25, 32, 34, 44, 55, 56, 60, 75], "replac": [18, 60, 62], "strongli": 18, "fulli": [18, 61, 77], "Then": [18, 48, 58, 73, 77], "sc": 18, "made": 18, "jori": 18, "mooij": 18, "tom": 18, "claassen": 18, "jona": 18, "david": 18, "sontag": 18, "editor": 18, "36th": 18, "confer": 18, "uai": 18, "124": 18, "machin": 18, "research": [18, 72], "1159": 18, "1168": 18, "pmlr": 18, "03": 18, "06": 18, "aug": 18, "mlr": 18, "v124": 18, "mooij20a": 18, "html": [18, 60], "n_domain": [19, 20, 58], "on_error": [19, 25], "rais": [19, 20, 25, 40, 60, 76], "augmentedgraph": [19, 20, 75, 83], "ignor": [19, 20, 23, 25, 40, 60], "warn": [19, 20, 53, 60, 71], "all_poss_snod": 20, "invari": [20, 58, 77], "proce": 20, "domain_id": [20, 77], "max_path_length": [21, 26, 27, 28, 29, 32], "discrimin": 21, "least": 21, "maximum": [21, 22, 26, 27, 28, 29, 32, 34, 35, 36, 41, 66, 67, 75], "distanc": [21, 32], "check": [21, 23, 24, 25, 32, 34, 44, 53, 60, 62, 63, 66, 75], "1000": [21, 26, 27, 28, 29, 32, 65, 66, 67], "explored_nod": 21, "disc_path": 21, "found_discriminating_path": 21, "wa": [21, 25, 62, 64], "max_numb": 22, "id": [22, 77], "connected_pair": 22, "node_x": [23, 26, 27, 28, 29], "node_i": [23, 26, 27, 28, 29], "destin": 23, "otherwis": [23, 60, 64], "therefor": [23, 48, 66, 72, 76, 77], "along": [23, 26], "henc": [23, 32, 77], "node1": 24, "node2": 24, "node3": 24, "noncollid": 24, "is_noncollid": 24, "most": [25, 71, 72, 75], "compliant": [25, 75], "constrain": 25, "length": [26, 27, 28, 29, 46, 51, 52, 65, 71], "dsep": 26, "characterist": 26, "subpath": 26, "tripl": 26, "triangl": 26, "meet": 26, "fact": 26, "shield": 26, "end": [27, 28, 29, 46, 48, 52], "smaller": [27, 28, 29], "subset": [27, 28, 29, 58], "intersect": 27, "biconnect": 27, "restrict": [27, 28, 29], "stationarytimeseriespag": [28, 29, 75], "pdst": 28, "pds_t_set": [28, 29], "lag": [28, 29, 34, 35, 36, 40, 41, 44, 45, 65, 66, 67, 70, 71, 75], "being": [28, 29, 60, 71, 77], "less": [28, 29, 40, 71], "max": [28, 29, 34, 40, 44, 45, 70, 75], "pdst_path": 29, "addit": [29, 32, 54, 57, 66, 68, 69, 72, 75, 77], "first_nod": 32, "second_nod": 32, "force_circl": 32, "forbid_nod": 32, "uncov": [32, 83], "potenti": 32, "explan": 32, "could": [32, 34, 75], "chang": [32, 58, 60, 62, 64, 71, 72, 75, 77, 81, 82, 83, 84], "mean": [32, 57, 58, 60, 75, 77], "appear": [32, 60], "previou": [32, 65], "befor": [32, 77], "travers": 32, "forbidden": 32, "immedi": 32, "within": [32, 56, 60, 71, 72, 75, 77], "third": 32, "come": 32, "r5": 32, "prevent": 32, "incoming_graph_data": [34, 35, 38, 39, 75], "check_time_direct": [34, 75], "repeat": [34, 75], "themselv": [34, 75], "cross": [34, 75], "product": [34, 75], "to_networkx_graph": [34, 75], "dict": [34, 56, 60, 69, 70, 75], "2d": [34, 70, 71, 75], "spars": [34, 75], "matrix": [34, 48, 71, 75], "properli": [34, 75], "delet": [34, 58, 66, 75], "depend": [34, 65, 68, 75], "direction": [34, 35, 75], "enabl": [35, 75, 77], "forward": [35, 75], "serv": [35, 75], "imbu": [38, 39, 40, 75, 77], "basetimeseriesgraph": [38, 39, 75], "add_homologous_edg": 40, "homolog": [40, 44, 75], "tsnode": [40, 44, 71, 75], "absolut": 40, "equal": [40, 56, 65], "preserv": [40, 71], "as_view": [40, 60], "read": [40, 60, 71], "to_direct": [40, 60], "node_attr_dict_factori": [40, 60], "alia": [40, 60], "tsdict": 40, "node_dict_factori": [40, 60], "networkxerror": [40, 60], "remove_edges_from": [40, 60], "Will": [40, 60, 68], "fail": [40, 60, 64], "silent": [40, 60], "remove_homologous_edg": 40, "include_contemporan": 41, "create_us": [41, 42], "analog": [41, 75], "_description_": 41, "func": [41, 77], "include_self_loop": 43, "summari": [43, 67], "timeseriesdigraph": [43, 75], "summary_g": 43, "_must_": 44, "timeseriesgraph": [45, 70, 75], "arr": [46, 48, 51, 52], "ndarrai": [46, 47, 65], "arr_idx": [46, 51, 52], "graph_typ": [46, 51, 53], "shape": [46, 48, 49, 51, 52, 65, 66, 67, 69, 71], "n_node": [46, 48, 49, 51, 52, 66, 67], "causal_graph": [48, 49], "instanc": [48, 49, 50, 53, 65, 71], "numpy_graph": [48, 49], "accord": [48, 49], "ijth": 48, "entri": [48, 71, 77], "zero": 48, "symmetr": [48, 71], "jith": 48, "20": 48, "edge_to_value_map": [48, 51], "pcalg": [48, 49, 52, 80, 83], "packag": [48, 52, 72, 80], "numer": [48, 60, 72], "treat": [48, 60], "leftrightarrow": [48, 77], "element": [48, 75, 80], "21": [48, 68, 83], "issu": [48, 72, 76], "nodelist": 48, "bow_graph": 48, "numpy_to_graph": 48, "pcalg_to_graph": 49, "filenam": [50, 53], "tetrad": [50, 53, 80, 83], "text": [50, 53, 57, 76], "write": [50, 68], "enumer": [51, 52, 76], "amat_typ": 52, "r": [52, 62, 64, 77, 80], "pcalgpagendpoint": 52, "amattyp": 52, "cran": 52, "project": [52, 73, 83, 84], "web": 52, "pdf": 52, "conveni": 52, "amat": 52, "No": [52, 75], "edgemark": 52, "oppos": 52, "matric": 52, "cmu": 53, "phil": 53, "io": [53, 71, 81], "guarante": 53, "your": [53, 72], "adher": [53, 71], "random_st": [54, 55, 56, 57, 58, 65, 66, 67], "interven": 54, "simultanen": 54, "perturb": 54, "gaussian_noise_funct": [54, 57, 58, 77], "That": [54, 60], "nois": [54, 55, 56, 77], "cpd": [55, 77], "tabularcpd": [55, 56, 77], "noise_ratio": [55, 56, 77], "overwrit": [55, 56], "probabl": [55, 56, 66, 71, 77], "wrapper": [55, 83], "around": [55, 70, 72, 77], "bayesiannetwork": 55, "add_cpd": 55, "tabl": [55, 77], "state": [55, 65, 66, 77], "ratio": [55, 56, 70], "uniform": [55, 56, 77], "90": 55, "cardinality_lim": 56, "weight_lim": 56, "noise_ratio_lim": 56, "cardin": 56, "pgmpy": [56, 77], "parent_funct": [56, 57, 58, 77], "exogenous_funct": [56, 77], "exogenous_distribut": [56, 77], "cpt": [56, 77], "weight": [56, 57, 58, 60, 66, 76, 77], "categori": 56, "choic": [56, 60, 75], "rang": 56, "binari": 56, "sum": [56, 60], "low": [56, 72], "randomgener": 56, "alter": [56, 77], "node_mean_lim": [57, 58], "node_std_lim": [57, 58], "edge_funct": [57, 58], "callabl": [57, 58, 66, 71, 77], "edge_weight_lim": [57, 58], "parametr": 57, "uniformli": [57, 58, 77], "limit": 57, "fashion": [57, 70, 72], "x_i": 57, "sum_": 57, "w_j": 57, "f_j": 57, "x_j": 57, "epsilon_i": 57, "sim": 57, "mu_i": 57, "sigma_i": 57, "lower": [57, 58], "upper": [57, 58, 76], "bound": [57, 58], "std": [57, 58, 77], "iid": [57, 58], "transform": [57, 58], "nonlinear": [57, 58, 77], "lambda": [57, 58], "ident": [57, 58, 60], "linear_gaussian": [57, 58, 77], "n_nodes_with_s_nod": 58, "n_invariances_to_tri": 58, "multi": 58, "underli": [58, 65, 66, 75, 78], "particular": 58, "across": [58, 60, 66, 71, 75], "split": 58, "try": [58, 71], "make_graph_linear_gaussian": [58, 83], "determin": 58, "n_": 58, "randomli": [58, 77], "remain": 58, "At": 58, "keep": [58, 70], "g1": 59, "g2": 59, "link": [60, 71, 81], "experiment": [60, 71, 80], "featur": [60, 71, 72, 81, 82, 83, 84], "meant": 60, "caution": [60, 72], "multidigraph": 60, "mention": 60, "below": [60, 71, 72], "match": 60, "entir": 60, "add_edge_typ": [60, 72], "edge_subgraph": 60, "cach": [60, 71], "few": [60, 75], "wherea": 60, "__contains__": 60, "__getitem__": 60, "__iter__": 60, "__len__": 60, "hold": 60, "itself": [60, 71], "behav": 60, "idiom": 60, "loop": 60, "nbr": 60, "datadict": 60, "adjacencyview": 60, "clear_edge_typ": 60, "clear": 60, "shallow": 60, "share": [60, 71], "deepcopi": 60, "docstr": [60, 71], "peopl": 60, "might": [60, 72], "nbunch": 60, "degreeview": 60, "report": [60, 68], "incid": 60, "deg_dict": 60, "request": [60, 72], "ddict": 60, "quietli": 60, "out": [60, 70, 72, 77], "get_edge_data": 60, "doesn": 60, "edge_dict": 60, "graph_attr_dict_factori": 60, "keyerror": 60, "edge_ind": 60, "identifi": [60, 71], "technic": [60, 65, 71], "control": 60, "nbunch_it": 60, "membership": 60, "niter": 60, "sequenc": 60, "number_of_edge_typ": 60, "number_of_edg": [60, 72], "count": 60, "nedg": 60, "size": 60, "todo": [60, 77], "expect": [60, 72], "subclass": 60, "onc": 60, "attempt": 60, "contrast": 60, "deep": 60, "librari": [60, 71, 81], "transfer": 60, "to_undirect": 60, "desir": 60, "unless": [60, 75], "uc_label": 61, "g_copi": 61, "minim": [62, 64, 71, 83], "testminsep": 62, "line": [62, 64], "neq": 62, "r_x": 62, "r_y": 62, "deem": [62, 64], "necessari": [62, 64], "moral": 62, "caus": 62, "candid": 62, "later": [62, 64], "largest": [62, 64], "vertic": [62, 63, 64], "is_minimal_m_sep": 62, "els": 62, "van": [62, 63, 64], "der": [62, 63, 64], "zander": [62, 63, 64], "li\u015bkiewicz": [62, 63, 64], "textor": [62, 63, 64], "adjust": [62, 63, 64], "criteria": [62, 63, 64], "framework": [62, 63, 64], "vol": [62, 63, 64], "270": [62, 63, 64], "pp": [62, 63, 64], "2018": [62, 63, 64], "12": [62, 63, 64], "006": [62, 63, 64], "testsep": [63, 64], "further": 63, "breadth": 63, "runtim": [63, 64], "boolean": 63, "findsep": 64, "math": 64, "findminsep": 64, "anterior": 64, "var_arr": [65, 67], "n_time": [65, 66, 67], "n_realiz": [65, 66], "var_nam": 65, "var": [65, 66, 67], "arraylik": [65, 66, 67, 70], "n_variabl": [65, 66], "vector": [65, 71], "auto": 65, "regress": 65, "3rd": 65, "dimens": 65, "autoregress": [65, 67], "realiz": [65, 66], "node_nam": 65, "multivari": [65, 77], "p_time_self": 66, "p_time_var": 66, "p_contemporan": 66, "weight_dist": 66, "_continuous_distn": 66, "norm_gen": 66, "contemporan": 66, "instantan": 66, "simulate_data_from_var": 66, "var_model": 66, "never": 66, "worri": 66, "about": [66, 72], "situat": 66, "instantaen": 66, "network": 66, "x_df": 67, "dataset": [67, 71, 77], "right": [67, 70], "fid": 68, "show_path": 68, "debug": 68, "help": 68, "triag": 68, "bug": 68, "sy": 68, "stdout": 68, "develop": [68, 72, 83, 84], "submit": 68, "platform": 68, "linux": 68, "15": 68, "1067": 68, "aw": 68, "x86_64": 68, "glibc2": 68, "feb": 68, "37": 68, "gcc": 68, "usr": 68, "bin": 68, "cpu": 68, "36": 68, "core": [68, 80], "68": [68, 83], "gb": 68, "openbla": 68, "thread": 68, "sklearn": 68, "backend": 68, "macosx": 68, "Not": 68, "version": [68, 71, 72, 75, 81], "info": 68, "joblib": [68, 71], "squar": 69, "rankdir": 69, "plaintext": 69, "dot": 69, "languag": 69, "center": 70, "aspect_ratio": 70, "3333333333333333": 70, "left": 70, "top": [70, 72], "bottom": 70, "factor": [70, 77], "plot": 70, "width": 70, "height": 70, "lai": 70, "histor": 70, "hope": 71, "tacit": 71, "convent": 71, "contributor": [71, 72], "aim": 71, "describ": 71, "redund": 71, "begin": 71, "didn": 71, "elsewher": 71, "1d": 71, "whose": 71, "often": 71, "public": [71, 72], "larg": [71, 76], "formal": 71, "maintain": [71, 72, 76], "backward": 71, "compat": 71, "privat": 71, "assur": 71, "stabl": [71, 72], "__call__": 71, "embed": 71, "etc": [71, 72], "__doc__": 71, "pep257": 71, "numpydoc": 71, "give": [71, 77, 79], "basic": [71, 72], "doctest": 71, "directori": 71, "exemplifi": 71, "referenc": 71, "sometim": 71, "built": 71, "alongsid": 71, "descript": [71, 72], "tool": [71, 72], "usabl": 71, "subject": 71, "futur": [71, 77], "deprec": [71, 72], "polici": 71, "letter": 71, "readthedoc": 71, "facilit": 71, "parallel": 71, "toward": 71, "effici": [71, 81, 82, 83, 84], "delai": 71, "n_featur": 71, "n_sampl": 71, "shorthand": 71, "distinctli": 71, "noun": 71, "langl": 71, "rangl": 71, "off": [71, 75], "sigma_map": 71, "symmetric_difference_map": 71, "composit": 72, "encourag": 72, "pull": 72, "contribut": [72, 76, 83, 84], "exhaust": 72, "veri": 72, "earli": 72, "best": 72, "goal": 72, "converg": 72, "releas": 72, "trait": 72, "major": [72, 75, 81, 82, 83, 84], "mark": 72, "alpha": [72, 80], "drastic": 72, "robust": 72, "commun": [72, 76], "curv": 72, "transit": 72, "lie": 72, "hand": 72, "summar": 72, "implicitli": [72, 77], "focus": 72, "design": 72, "lightweight": 72, "sole": 72, "instal": 72, "histori": 72, "yourself": 72, "interest": 72, "solv": 72, "improv": [72, 83, 84], "overal": 72, "hesit": 72, "reach": 72, "who": [72, 83, 84], "codebas": 72, "pip": 73, "pypi": 73, "poetri": 73, "recommend": 73, "repositori": 73, "git": 73, "cd": 73, "heavili": 75, "reli": 75, "account": 75, "cover": 75, "concept": [75, 79, 80], "glossari": [75, 80], "ye": 75, "augmentedpag": 75, "stationarytimeseriesgraph": 75, "stationarytimeseriesmixededgegraph": [75, 83], "stationarytimeseriescpdag": 75, "sure": 75, "past": 75, "moment": 75, "embodi": 75, "stationar": 75, "propag": 75, "turn": 75, "set_stationar": 75, "modif": 75, "subtl": 75, "impact": 75, "mec": 75, "timeseriesmixededgegraph": 75, "light": 76, "quit": 76, "de": 76, "facto": 76, "offer": 76, "interpret": 76, "triangular": 76, "fill": 76, "against": [76, 77], "plan": 77, "yet": 77, "drop": 77, "varialbl": 77, "roadmap": 77, "simultan": 77, "gaussin": 77, "child": 77, "affect": 77, "said": 77, "_parent": 77, "leftarrow": 77, "observed_par": 77, "arbitrarili": 77, "simul": [77, 80], "determinist": 77, "stochast": 77, "inher": 77, "natur": 77, "univari": 77, "presum": 77, "parent_1": 77, "parent_2": 77, "treatment": 77, "intervention_funct": 77, "domain_parent_funct": 77, "domain_exogenous_distribut": 77, "smallest": 77, "topolog": 77, "again": 77, "respect": 77, "unalter": 77, "But": 77, "mathbb": 77, "sample_from_graph": 77, "instanti": 77, "dure": 77, "intricaci": 77, "apriori": 77, "pa_x": 77, "noisi": 77, "hyperparamet": 77, "overridden": 77, "nest": 77, "citat": 77, "FOR": 77, "sel": 77, "ones": 77, "extra": 77, "invariant_domain": 77, "domain_gaussian_noise_funct": 77, "faith": 78, "abl": 79, "everyth": 79, "multidomain": [80, 83], "export": [80, 83], "java": 80, "enhanc": [81, 82, 83, 84], "tip": 81, "subscrib": 81, "notifi": 81, "aryan": 83, "roi": 83, "71": 83, "minimal_m_separ": 83, "bf": 83, "jaron": 83, "lee": 83, "53": 83, "balltre": 83, "48": 83, "46": 83, "uncovered_pd_path": 83, "42": 83, "adam": [83, 84], "li": [83, 84], "possible_ancestor": 83, "possible_descend": 83, "discriminating_path": 83, "pds_path": 83, "acyclif": 83, "julien": 83, "siebert": 83, "26": 83, "29": 83, "49": 83, "go": 83, "causallearn": 83, "51": 83, "60": 83, "anank": 83, "63": 83, "commit": 83, "hook": 83, "75": 83, "make_graph_multidomain": 83, "77": 83, "78": 83, "82": 83, "thank": [83, 84], "everyon": [83, 84], "mainten": [83, 84], "incept": [83, 84]}, "objects": {"": [[0, 0, 0, "-", "pywhy_graphs"]], "pywhy_graphs": [[13, 1, 1, "", "ADMG"], [14, 1, 1, "", "AugmentedGraph"], [15, 1, 1, "", "AugmentedPAG"], [16, 1, 1, "", "CPDAG"], [17, 1, 1, "", "PAG"], [74, 0, 0, "-", "algorithms"], [75, 0, 0, "-", "classes"], [76, 0, 0, "-", "export"], [77, 0, 0, "-", "functional"], [78, 0, 0, "-", "simulate"], [68, 4, 1, "", "sys_info"]], "pywhy_graphs.ADMG": [[13, 2, 1, "", "bidirected_edge_name"], [13, 2, 1, "", "bidirected_edges"], [13, 3, 1, "", "c_components"], [13, 2, 1, "", "directed_edge_name"], [13, 2, 1, "", "directed_edges"], [13, 3, 1, "", "sub_bidirected_graph"], [13, 3, 1, "", "sub_directed_graph"], [13, 3, 1, "", "sub_undirected_graph"], [13, 2, 1, "", "undirected_edge_name"], [13, 2, 1, "", "undirected_edges"]], "pywhy_graphs.CPDAG": [[16, 3, 1, "", "add_edge"], [16, 3, 1, "", "add_edges_from"], [16, 2, 1, "", "directed_edge_name"], [16, 2, 1, "", "directed_edges"], [16, 3, 1, "", "orient_uncertain_edge"], [16, 3, 1, "", "possible_children"], [16, 3, 1, "", "possible_parents"], [16, 3, 1, "", "sub_directed_graph"], [16, 3, 1, "", "sub_undirected_graph"], [16, 2, 1, "", "undirected_edge_name"], [16, 2, 1, "", "undirected_edges"]], "pywhy_graphs.PAG": [[17, 3, 1, "", "add_edge"], [17, 3, 1, "", "add_edges_from"], [17, 3, 1, "", "children"], [17, 2, 1, "", "circle_edge_name"], [17, 2, 1, "", "circle_edges"], [17, 3, 1, "", "orient_uncertain_edge"], [17, 3, 1, "", "parents"], [17, 3, 1, "", "possible_children"], [17, 3, 1, "", "possible_parents"], [17, 3, 1, "", "sub_circle_graph"]], "pywhy_graphs.algorithms": [[18, 4, 1, "", "acyclification"], [19, 4, 1, "", "add_all_snode_combinations"], [20, 4, 1, "", "compute_invariant_domains_per_node"], [21, 4, 1, "", "discriminating_path"], [22, 4, 1, "", "find_connected_pairs"], [23, 4, 1, "", "inducing_path"], [24, 4, 1, "", "is_definite_noncollider"], [25, 4, 1, "", "is_valid_mec_graph"], [26, 4, 1, "", "pds"], [27, 4, 1, "", "pds_path"], [28, 4, 1, "", "pds_t"], [29, 4, 1, "", "pds_t_path"], [30, 4, 1, "", "possible_ancestors"], [31, 4, 1, "", "possible_descendants"], [32, 4, 1, "", "uncovered_pd_path"]], "pywhy_graphs.classes": [[75, 0, 0, "-", "timeseries"]], "pywhy_graphs.classes.timeseries": [[33, 1, 1, "", "StationaryTimeSeriesCPDAG"], [34, 1, 1, "", "StationaryTimeSeriesDiGraph"], [35, 1, 1, "", "StationaryTimeSeriesGraph"], [36, 1, 1, "", "StationaryTimeSeriesMixedEdgeGraph"], [37, 1, 1, "", "StationaryTimeSeriesPAG"], [38, 1, 1, "", "TimeSeriesDiGraph"], [39, 1, 1, "", "TimeSeriesGraph"], [40, 1, 1, "", "TimeSeriesMixedEdgeGraph"], [41, 4, 1, "", "complete_ts_graph"], [42, 4, 1, "", "empty_ts_graph"], [43, 4, 1, "", "get_summary_graph"], [44, 4, 1, "", "has_homologous_edges"], [45, 4, 1, "", "nodes_in_time_order"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[33, 3, 1, "", "add_edge"], [33, 3, 1, "", "add_edges_from"], [33, 2, 1, "", "directed_edge_name"], [33, 2, 1, "", "directed_edges"], [33, 3, 1, "", "orient_uncertain_edge"], [33, 3, 1, "", "possible_children"], [33, 3, 1, "", "possible_parents"], [33, 3, 1, "", "sub_directed_graph"], [33, 3, 1, "", "sub_undirected_graph"], [33, 2, 1, "", "undirected_edge_name"], [33, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[37, 2, 1, "", "bidirected_edge_name"], [37, 2, 1, "", "bidirected_edges"], [37, 2, 1, "", "circle_edge_name"], [37, 2, 1, "", "circle_edges"], [37, 2, 1, "", "directed_edge_name"], [37, 2, 1, "", "directed_edges"], [37, 3, 1, "", "orient_uncertain_edge"], [37, 3, 1, "", "possible_children"], [37, 3, 1, "", "possible_parents"], [37, 3, 1, "", "sub_bidirected_graph"], [37, 3, 1, "", "sub_circle_graph"], [37, 3, 1, "", "sub_directed_graph"], [37, 3, 1, "", "sub_undirected_graph"], [37, 2, 1, "", "undirected_edge_name"], [37, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[40, 3, 1, "", "add_edge"], [40, 3, 1, "", "add_edges_from"], [40, 3, 1, "", "add_homologous_edges"], [40, 3, 1, "", "copy"], [40, 5, 1, "", "node_attr_dict_factory"], [40, 5, 1, "", "node_dict_factory"], [40, 3, 1, "", "remove_edge"], [40, 3, 1, "", "remove_edges_from"], [40, 3, 1, "", "remove_homologous_edges"]], "pywhy_graphs.export": [[46, 4, 1, "", "clearn_to_graph"], [47, 4, 1, "", "graph_to_clearn"], [48, 4, 1, "", "graph_to_numpy"], [49, 4, 1, "", "graph_to_pcalg"], [50, 4, 1, "", "graph_to_tetrad"], [51, 4, 1, "", "numpy_to_graph"], [52, 4, 1, "", "pcalg_to_graph"], [53, 4, 1, "", "tetrad_to_graph"]], "pywhy_graphs.functional": [[54, 4, 1, "", "apply_linear_soft_intervention"], [57, 4, 1, "", "make_graph_linear_gaussian"], [58, 4, 1, "", "make_graph_multidomain"], [59, 4, 1, "", "set_node_attributes_with_G"]], "pywhy_graphs.functional.discrete": [[55, 4, 1, "", "add_cpd_for_node"], [56, 4, 1, "", "make_random_discrete_graph"]], "pywhy_graphs.networkx": [[60, 1, 1, "", "MixedEdgeGraph"], [61, 4, 1, "", "bidirected_to_unobserved_confounder"], [62, 4, 1, "", "is_minimal_m_separator"], [63, 4, 1, "", "m_separated"], [64, 4, 1, "", "minimal_m_separator"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[60, 3, 1, "", "__contains__"], [60, 3, 1, "", "__getitem__"], [60, 3, 1, "", "__iter__"], [60, 3, 1, "", "__len__"], [60, 3, 1, "", "add_edge"], [60, 3, 1, "", "add_edges_from"], [60, 2, 1, "", "adj"], [60, 3, 1, "", "clear_edge_types"], [60, 3, 1, "", "copy"], [60, 3, 1, "", "degree"], [60, 3, 1, "", "edges"], [60, 3, 1, "", "get_edge_data"], [60, 3, 1, "", "get_graphs"], [60, 5, 1, "", "graph_attr_dict_factory"], [60, 3, 1, "", "has_edge"], [60, 3, 1, "", "has_node"], [60, 3, 1, "", "is_directed"], [60, 3, 1, "", "is_multigraph"], [60, 2, 1, "", "name"], [60, 3, 1, "", "nbunch_iter"], [60, 5, 1, "", "node_attr_dict_factory"], [60, 5, 1, "", "node_dict_factory"], [60, 3, 1, "", "number_of_edge_types"], [60, 3, 1, "", "number_of_edges"], [60, 3, 1, "", "number_of_nodes"], [60, 3, 1, "", "order"], [60, 3, 1, "", "remove_edge"], [60, 3, 1, "", "remove_edges_from"], [60, 3, 1, "", "size"], [60, 3, 1, "", "subgraph"], [60, 3, 1, "", "to_directed"], [60, 3, 1, "", "to_undirected"], [60, 3, 1, "", "update"]], "pywhy_graphs.simulate": [[65, 4, 1, "", "simulate_data_from_var"], [66, 4, 1, "", "simulate_linear_var_process"], [67, 4, 1, "", "simulate_var_process_from_summary_graph"]], "pywhy_graphs.viz": [[69, 4, 1, "", "draw"], [70, 4, 1, "", "timeseries_layout"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 71, 72], "pywhy_graph": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 78], "class": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 74, 75], "causal": [0, 1, 2, 4, 10, 74, 75, 76, 77, 78, 79], "graph": [0, 1, 2, 3, 4, 7, 9, 10, 11, 72, 74, 75, 76, 77, 79], "algorithm": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 74], "mix": [0, 4, 7], "edg": [0, 7], "convers": 0, "between": [0, 3], "other": 0, "packag": [0, 76], "": [0, 77, 83, 84], "networkx": [0, 1, 6, 60, 61, 62, 63, 64, 72, 79], "experiment": [0, 76], "function": [0, 54, 55, 56, 57, 58, 59, 77], "timeseri": [0, 11, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 75], "simul": [0, 4, 65, 66, 67, 78], "graphic": [0, 77, 78], "model": [0, 4, 77, 78], "convert": 0, "visual": [0, 1, 9, 10, 79], "util": 0, "debug": 0, "exampl": [1, 3, 6, 13, 16, 17, 38, 60, 63, 69, 70, 79], "galleri": [1, 79], "mixededgegraph": [1, 6, 7, 60, 79], "introduct": [1, 2, 3, 4, 79], "an": [3, 4], "induc": 3, "path": 3, "how": [3, 4, 72, 79], "find": 3, "them": [3, 4], "construct": [3, 7], "adjac": 3, "node": [3, 7, 77], "trivial": 3, "have": 3, "non": 3, "The": 3, "role": 3, "collid": 3, "refer": [3, 4], "us": [4, 13, 16, 17, 38, 60, 63, 69, 70, 75, 79], "structur": 4, "some": 4, "data": 4, "direct": 4, "ayclic": 4, "dag": 4, "also": 4, "known": 4, "bayesian": 4, "network": 4, "acycl": [4, 74], "admg": [4, 13], "complet": 4, "partial": 4, "cpdag": [4, 16], "ancestr": 4, "pag": [4, 17], "comput": [5, 8, 12], "time": [5, 8, 12, 74, 75], "differ": 7, "type": [7, 75], "properti": 7, "oper": 7, "kei": 7, "draw": [9, 11, 69], "set": [9, 11], "layout": [9, 11], "comparison": 9, "augmentedgraph": 14, "augmentedpag": 15, "acyclif": 18, "add_all_snode_combin": 19, "compute_invariant_domains_per_nod": 20, "discriminating_path": 21, "find_connected_pair": 22, "inducing_path": 23, "is_definite_noncollid": 24, "is_valid_mec_graph": 25, "pd": 26, "pds_path": 27, "pds_t": 28, "pds_t_path": 29, "possible_ancestor": 30, "possible_descend": 31, "uncovered_pd_path": 32, "stationarytimeseriescpdag": 33, "stationarytimeseriesdigraph": 34, "stationarytimeseriesgraph": 35, "stationarytimeseriesmixededgegraph": 36, "stationarytimeseriespag": 37, "timeseriesdigraph": 38, "timeseriesgraph": 39, "timeseriesmixededgegraph": 40, "complete_ts_graph": 41, "empty_ts_graph": 42, "get_summary_graph": 43, "has_homologous_edg": 44, "nodes_in_time_ord": 45, "export": [46, 47, 48, 49, 50, 51, 52, 53, 76], "clearn_to_graph": 46, "graph_to_clearn": 47, "graph_to_numpi": 48, "graph_to_pcalg": 49, "graph_to_tetrad": 50, "numpy_to_graph": 51, "pcalg_to_graph": 52, "tetrad_to_graph": 53, "apply_linear_soft_intervent": 54, "discret": [55, 56, 77], "add_cpd_for_nod": 55, "make_random_discrete_graph": 56, "make_graph_linear_gaussian": 57, "make_graph_multidomain": 58, "set_node_attributes_with_g": 59, "bidirected_to_unobserved_confound": 61, "is_minimal_m_separ": 62, "m_separ": 63, "minimal_m_separ": 64, "simulate_data_from_var": 65, "simulate_linear_var_process": 66, "simulate_var_process_from_summary_graph": 67, "sys_info": 68, "viz": [69, 70], "timeseries_layout": 70, "glossari": 71, "common": 71, "term": 71, "element": 71, "gener": 71, "concept": 71, "pywhi": [72, 74, 75, 76, 79], "stabil": 72, "do": 72, "we": 72, "compar": 72, "content": 72, "get": 72, "start": 72, "team": 72, "indic": 72, "tabl": 72, "instal": 73, "core": 74, "markov": 74, "equival": 74, "seri": [74, 75], "handl": 74, "which": 75, "should": 75, "i": 75, "alpha": 75, "import": 76, "anoth": 76, "learn": 76, "numpi": 76, "graphviz": 76, "dagitti": 76, "pcalg": 76, "from": [76, 77], "r": 76, "tetrad": 76, "java": 76, "repres": 77, "relationship": 77, "multipl": 77, "distribut": 77, "intervent": 77, "domain": 77, "shift": 77, "sampl": 77, "limit": 77, "specif": 77, "linear": 77, "multidomain": 77, "select": 77, "diagram": 77, "modul": 78, "tutori": 79, "user": 80, "guid": 80, "releas": 81, "histori": 81, "what": [83, 84], "new": [83, 84], "version": [83, 84], "0": [83, 84], "1": 83, "changelog": [83, 84], "code": [83, 84], "document": [83, 84], "contributor": [83, 84], "2": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "pywhy_graphs.classes: Causal graph classes": [[0, "pywhy-graphs-classes-causal-graph-classes"]], "pywhy_graphs.algorithms: Algorithms for Mixed-Edge Graphs": [[0, "pywhy-graphs-algorithms-algorithms-for-mixed-edge-graphs"]], "Conversions between other package\u2019s causal graphs": [[0, "conversions-between-other-package-s-causal-graphs"]], "NetworkX Experimental Functionality": [[0, "networkx-experimental-functionality"]], "pywhy_graphs.classes.timeseries: Timeseries": [[0, "pywhy-graphs-classes-timeseries-timeseries"]], "pywhy_graphs.simulate: Causal graphical model simulations": [[0, "pywhy-graphs-simulate-causal-graphical-model-simulations"], [78, "pywhy-graphs-simulate-causal-graphical-model-simulations"]], "Converting graphs to functional models": [[0, "converting-graphs-to-functional-models"]], "Visualization of causal graphs": [[0, "visualization-of-causal-graphs"], [1, "visualization-of-causal-graphs"], [10, "visualization-of-causal-graphs"], [79, "visualization-of-causal-graphs"]], "Utilities for debugging": [[0, "utilities-for-debugging"]], "Simulation": [[0, "simulation"]], "Examples Gallery": [[1, "examples-gallery"], [79, "examples-gallery"]], "Networkx MixedEdgeGraph Examples": [[1, "networkx-mixededgegraph-examples"], [6, "networkx-mixededgegraph-examples"], [79, "networkx-mixededgegraph-examples"]], "Introduction to causal graphs": [[1, "introduction-to-causal-graphs"], [2, "introduction-to-causal-graphs"], [79, "introduction-to-causal-graphs"]], "An introduction to Inducing Paths and how to find them": [[3, "an-introduction-to-inducing-paths-and-how-to-find-them"]], "Construct an example graph": [[3, "construct-an-example-graph"]], "Adjacent nodes trivially have an inducing path": [[3, "adjacent-nodes-trivially-have-an-inducing-path"]], "Inducing paths between non-adjacent nodes": [[3, "inducing-paths-between-non-adjacent-nodes"]], "The role of colliders": [[3, "the-role-of-colliders"]], "References": [[3, "references"], [4, "references"]], "An introduction to causal graphs and how to use them": [[4, "an-introduction-to-causal-graphs-and-how-to-use-them"]], "Structural Causal Models: Simulating some data": [[4, "structural-causal-models-simulating-some-data"]], "Causal Directed Ayclic Graphs (DAG): Also known as Causal Bayesian Networks": [[4, "causal-directed-ayclic-graphs-dag-also-known-as-causal-bayesian-networks"]], "Acyclic Directed Mixed Graphs (ADMG)": [[4, "acyclic-directed-mixed-graphs-admg"]], "Completed Partially Directed Ayclic Graph (CPDAG)": [[4, "completed-partially-directed-ayclic-graph-cpdag"]], "Partial Ancestral Graph (PAG)": [[4, "partial-ancestral-graph-pag"]], "Computation times": [[5, "computation-times"], [8, "computation-times"], [12, "computation-times"]], "MixedEdgeGraph - Graph with different types of edges": [[7, "mixededgegraph-graph-with-different-types-of-edges"]], "Construct a MixedEdgeGraph": [[7, "construct-a-mixededgegraph"]], "Mixed Edge Graph Properties": [[7, "mixed-edge-graph-properties"]], "Mixed Edge Graph Operations on Nodes": [[7, "mixed-edge-graph-operations-on-nodes"]], "Mixed Edge Graph Operations on Edges": [[7, "mixed-edge-graph-operations-on-edges"]], "Mixed Edge Graph Key Differences": [[7, "mixed-edge-graph-key-differences"]], "Drawing graphs and setting their layout for visual comparison": [[9, "drawing-graphs-and-setting-their-layout-for-visual-comparison"]], "Drawing timeseries graphs and setting their layout": [[11, "drawing-timeseries-graphs-and-setting-their-layout"]], "pywhy_graphs.ADMG": [[13, "pywhy-graphs-admg"]], "Examples using pywhy_graphs.ADMG": [[13, "examples-using-pywhy-graphs-admg"]], "pywhy_graphs.AugmentedGraph": [[14, "pywhy-graphs-augmentedgraph"]], "pywhy_graphs.AugmentedPAG": [[15, "pywhy-graphs-augmentedpag"]], "pywhy_graphs.CPDAG": [[16, "pywhy-graphs-cpdag"]], "Examples using pywhy_graphs.CPDAG": [[16, "examples-using-pywhy-graphs-cpdag"]], "pywhy_graphs.PAG": [[17, "pywhy-graphs-pag"]], "Examples using pywhy_graphs.PAG": [[17, "examples-using-pywhy-graphs-pag"]], "pywhy_graphs.algorithms.acyclification": [[18, "pywhy-graphs-algorithms-acyclification"]], "pywhy_graphs.algorithms.add_all_snode_combinations": [[19, "pywhy-graphs-algorithms-add-all-snode-combinations"]], "pywhy_graphs.algorithms.compute_invariant_domains_per_node": [[20, "pywhy-graphs-algorithms-compute-invariant-domains-per-node"]], "pywhy_graphs.algorithms.discriminating_path": [[21, "pywhy-graphs-algorithms-discriminating-path"]], "pywhy_graphs.algorithms.find_connected_pairs": [[22, "pywhy-graphs-algorithms-find-connected-pairs"]], "pywhy_graphs.algorithms.inducing_path": [[23, "pywhy-graphs-algorithms-inducing-path"]], "pywhy_graphs.algorithms.is_definite_noncollider": [[24, "pywhy-graphs-algorithms-is-definite-noncollider"]], "pywhy_graphs.algorithms.is_valid_mec_graph": [[25, "pywhy-graphs-algorithms-is-valid-mec-graph"]], "pywhy_graphs.algorithms.pds": [[26, "pywhy-graphs-algorithms-pds"]], "pywhy_graphs.algorithms.pds_path": [[27, "pywhy-graphs-algorithms-pds-path"]], "pywhy_graphs.algorithms.pds_t": [[28, "pywhy-graphs-algorithms-pds-t"]], "pywhy_graphs.algorithms.pds_t_path": [[29, "pywhy-graphs-algorithms-pds-t-path"]], "pywhy_graphs.algorithms.possible_ancestors": [[30, "pywhy-graphs-algorithms-possible-ancestors"]], "pywhy_graphs.algorithms.possible_descendants": [[31, "pywhy-graphs-algorithms-possible-descendants"]], "pywhy_graphs.algorithms.uncovered_pd_path": [[32, "pywhy-graphs-algorithms-uncovered-pd-path"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[33, "pywhy-graphs-classes-timeseries-stationarytimeseriescpdag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph": [[34, "pywhy-graphs-classes-timeseries-stationarytimeseriesdigraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph": [[35, "pywhy-graphs-classes-timeseries-stationarytimeseriesgraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph": [[36, "pywhy-graphs-classes-timeseries-stationarytimeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[37, "pywhy-graphs-classes-timeseries-stationarytimeseriespag"]], "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[38, "pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "Examples using pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[38, "examples-using-pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesGraph": [[39, "pywhy-graphs-classes-timeseries-timeseriesgraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[40, "pywhy-graphs-classes-timeseries-timeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.complete_ts_graph": [[41, "pywhy-graphs-classes-timeseries-complete-ts-graph"]], "pywhy_graphs.classes.timeseries.empty_ts_graph": [[42, "pywhy-graphs-classes-timeseries-empty-ts-graph"]], "pywhy_graphs.classes.timeseries.get_summary_graph": [[43, "pywhy-graphs-classes-timeseries-get-summary-graph"]], "pywhy_graphs.classes.timeseries.has_homologous_edges": [[44, "pywhy-graphs-classes-timeseries-has-homologous-edges"]], "pywhy_graphs.classes.timeseries.nodes_in_time_order": [[45, "pywhy-graphs-classes-timeseries-nodes-in-time-order"]], "pywhy_graphs.export.clearn_to_graph": [[46, "pywhy-graphs-export-clearn-to-graph"]], "pywhy_graphs.export.graph_to_clearn": [[47, "pywhy-graphs-export-graph-to-clearn"]], "pywhy_graphs.export.graph_to_numpy": [[48, "pywhy-graphs-export-graph-to-numpy"]], "pywhy_graphs.export.graph_to_pcalg": [[49, "pywhy-graphs-export-graph-to-pcalg"]], "pywhy_graphs.export.graph_to_tetrad": [[50, "pywhy-graphs-export-graph-to-tetrad"]], "pywhy_graphs.export.numpy_to_graph": [[51, "pywhy-graphs-export-numpy-to-graph"]], "pywhy_graphs.export.pcalg_to_graph": [[52, "pywhy-graphs-export-pcalg-to-graph"]], "pywhy_graphs.export.tetrad_to_graph": [[53, "pywhy-graphs-export-tetrad-to-graph"]], "pywhy_graphs.functional.apply_linear_soft_intervention": [[54, "pywhy-graphs-functional-apply-linear-soft-intervention"]], "pywhy_graphs.functional.discrete.add_cpd_for_node": [[55, "pywhy-graphs-functional-discrete-add-cpd-for-node"]], "pywhy_graphs.functional.discrete.make_random_discrete_graph": [[56, "pywhy-graphs-functional-discrete-make-random-discrete-graph"]], "pywhy_graphs.functional.make_graph_linear_gaussian": [[57, "pywhy-graphs-functional-make-graph-linear-gaussian"]], "pywhy_graphs.functional.make_graph_multidomain": [[58, "pywhy-graphs-functional-make-graph-multidomain"]], "pywhy_graphs.functional.set_node_attributes_with_G": [[59, "pywhy-graphs-functional-set-node-attributes-with-g"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[60, "pywhy-graphs-networkx-mixededgegraph"]], "Examples using pywhy_graphs.networkx.MixedEdgeGraph": [[60, "examples-using-pywhy-graphs-networkx-mixededgegraph"]], "pywhy_graphs.networkx.bidirected_to_unobserved_confounder": [[61, "pywhy-graphs-networkx-bidirected-to-unobserved-confounder"]], "pywhy_graphs.networkx.is_minimal_m_separator": [[62, "pywhy-graphs-networkx-is-minimal-m-separator"]], "pywhy_graphs.networkx.m_separated": [[63, "pywhy-graphs-networkx-m-separated"]], "Examples using pywhy_graphs.networkx.m_separated": [[63, "examples-using-pywhy-graphs-networkx-m-separated"]], "pywhy_graphs.networkx.minimal_m_separator": [[64, "pywhy-graphs-networkx-minimal-m-separator"]], "pywhy_graphs.simulate.simulate_data_from_var": [[65, "pywhy-graphs-simulate-simulate-data-from-var"]], "pywhy_graphs.simulate.simulate_linear_var_process": [[66, "pywhy-graphs-simulate-simulate-linear-var-process"]], "pywhy_graphs.simulate.simulate_var_process_from_summary_graph": [[67, "pywhy-graphs-simulate-simulate-var-process-from-summary-graph"]], "pywhy_graphs.sys_info": [[68, "pywhy-graphs-sys-info"]], "pywhy_graphs.viz.draw": [[69, "pywhy-graphs-viz-draw"]], "Examples using pywhy_graphs.viz.draw": [[69, "examples-using-pywhy-graphs-viz-draw"]], "pywhy_graphs.viz.timeseries_layout": [[70, "pywhy-graphs-viz-timeseries-layout"]], "Examples using pywhy_graphs.viz.timeseries_layout": [[70, "examples-using-pywhy-graphs-viz-timeseries-layout"]], "Glossary of Common Terms and API Elements": [[71, "glossary-of-common-terms-and-api-elements"]], "General Concepts": [[71, "general-concepts"]], "pywhy-graphs": [[72, "pywhy-graphs"]], "API Stability": [[72, "api-stability"]], "How do we compare with NetworkX?": [[72, "how-do-we-compare-with-networkx"]], "Contents": [[72, "contents"]], "Getting started:": [[72, null]], "Team": [[72, "team"]], "Indices and tables": [[72, "indices-and-tables"]], "Installation": [[73, "installation"]], "Causal Graph Algorithms in PyWhy": [[74, "module-pywhy_graphs.algorithms"]], "Core Algorithms": [[74, "core-algorithms"]], "Algorithms for Markov Equivalence Classes": [[74, "algorithms-for-markov-equivalence-classes"]], "Algorithms for Time-Series Graphs": [[74, "algorithms-for-time-series-graphs"]], "Algorithms for handling acyclicity": [[74, "algorithms-for-handling-acyclicity"]], "Causal Graphs in PyWhy": [[75, "module-pywhy_graphs.classes"]], "Which graph class should I use?": [[75, "which-graph-class-should-i-use"]], "pywhy_graphs.classes: Causal graph types": [[75, "pywhy-graphs-classes-causal-graph-types"]], "pywhy_graphs.classes.timeseries: Causal graph types for time-series (alpha)": [[75, "module-pywhy_graphs.classes.timeseries"]], "Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package": [[76, "module-pywhy_graphs.export"]], "Causal-Learn": [[76, "causal-learn"]], "Numpy (graphviz and dagitty)": [[76, "numpy-graphviz-and-dagitty"]], "PCAlg from R (Experimental)": [[76, "pcalg-from-r-experimental"]], "Tetrad from Java": [[76, "tetrad-from-java"]], "Functional Causal Graphical Models": [[77, "module-pywhy_graphs.functional"]], "Representing a node\u2019s functional relationships": [[77, "representing-a-node-s-functional-relationships"]], "Multiple Distributions: Interventions and Domain Shifts": [[77, "multiple-distributions-interventions-and-domain-shifts"]], "Sampling from the graph": [[77, "sampling-from-the-graph"]], "Limitations": [[77, "limitations"]], "Specific Functional Graphs": [[77, "specific-functional-graphs"]], "Discrete functional graphs": [[77, "discrete-functional-graphs"]], "Linear": [[77, "linear"], [77, "id4"]], "Linear functional graphs": [[77, "linear-functional-graphs"]], "Multidomain": [[77, "multidomain"]], "Linear functional selection diagrams": [[77, "linear-functional-selection-diagrams"]], "Simulation module": [[78, "simulation-module"]], "How to use pywhy-graphs with examples and tutorials": [[79, "how-to-use-pywhy-graphs-with-examples-and-tutorials"]], "User Guide": [[80, "user-guide"]], "Release History": [[81, "release-history"]], "What\u2019s new?": [[83, "what-s-new"], [84, "what-s-new"]], "Version 0.1": [[83, "version-0-1"]], "Changelog": [[83, "changelog"], [84, "changelog"]], "Code and Documentation Contributors": [[83, "code-and-documentation-contributors"], [84, "code-and-documentation-contributors"]], "Version 0.2": [[84, "version-0-2"]]}, "indexentries": {"module": [[0, "module-pywhy_graphs"], [74, "module-pywhy_graphs.algorithms"], [75, "module-pywhy_graphs.classes"], [75, "module-pywhy_graphs.classes.timeseries"], [76, "module-pywhy_graphs.export"], [77, "module-pywhy_graphs.functional"], [78, "module-pywhy_graphs.simulate"]], "pywhy_graphs": [[0, "module-pywhy_graphs"]], "admg (class in pywhy_graphs)": [[13, "pywhy_graphs.ADMG"]], "bidirected_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.bidirected_edges"]], "c_components() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.c_components"]], "directed_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.directed_edge_name"]], "directed_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.directed_edges"]], "sub_bidirected_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_bidirected_graph"]], "sub_directed_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.undirected_edges"]], "augmentedgraph (class in pywhy_graphs)": [[14, "pywhy_graphs.AugmentedGraph"]], "augmentedpag (class in pywhy_graphs)": [[15, "pywhy_graphs.AugmentedPAG"]], "cpdag (class in pywhy_graphs)": [[16, "pywhy_graphs.CPDAG"]], "add_edge() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.possible_children"]], "possible_parents() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.undirected_edges"]], "pag (class in pywhy_graphs)": [[17, "pywhy_graphs.PAG"]], "add_edge() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.add_edge"]], "add_edges_from() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.add_edges_from"]], "children() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.children"]], "circle_edge_name (pywhy_graphs.pag property)": [[17, "pywhy_graphs.PAG.circle_edge_name"]], "circle_edges (pywhy_graphs.pag property)": [[17, "pywhy_graphs.PAG.circle_edges"]], "orient_uncertain_edge() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.orient_uncertain_edge"]], "parents() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.parents"]], "possible_children() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.possible_children"]], "possible_parents() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.possible_parents"]], "sub_circle_graph() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.sub_circle_graph"]], "acyclification() (in module pywhy_graphs.algorithms)": [[18, "pywhy_graphs.algorithms.acyclification"]], "add_all_snode_combinations() (in module pywhy_graphs.algorithms)": [[19, "pywhy_graphs.algorithms.add_all_snode_combinations"]], "compute_invariant_domains_per_node() (in module pywhy_graphs.algorithms)": [[20, "pywhy_graphs.algorithms.compute_invariant_domains_per_node"]], "discriminating_path() (in module pywhy_graphs.algorithms)": [[21, "pywhy_graphs.algorithms.discriminating_path"]], "find_connected_pairs() (in module pywhy_graphs.algorithms)": [[22, "pywhy_graphs.algorithms.find_connected_pairs"]], "inducing_path() (in module pywhy_graphs.algorithms)": [[23, "pywhy_graphs.algorithms.inducing_path"]], "is_definite_noncollider() (in module pywhy_graphs.algorithms)": [[24, "pywhy_graphs.algorithms.is_definite_noncollider"]], "is_valid_mec_graph() (in module pywhy_graphs.algorithms)": [[25, "pywhy_graphs.algorithms.is_valid_mec_graph"]], "pds() (in module pywhy_graphs.algorithms)": [[26, "pywhy_graphs.algorithms.pds"]], "pds_path() (in module pywhy_graphs.algorithms)": [[27, "pywhy_graphs.algorithms.pds_path"]], "pds_t() (in module pywhy_graphs.algorithms)": [[28, "pywhy_graphs.algorithms.pds_t"]], "pds_t_path() (in module pywhy_graphs.algorithms)": [[29, "pywhy_graphs.algorithms.pds_t_path"]], "possible_ancestors() (in module pywhy_graphs.algorithms)": [[30, "pywhy_graphs.algorithms.possible_ancestors"]], "possible_descendants() (in module pywhy_graphs.algorithms)": [[31, "pywhy_graphs.algorithms.possible_descendants"]], "uncovered_pd_path() (in module pywhy_graphs.algorithms)": [[32, "pywhy_graphs.algorithms.uncovered_pd_path"]], "stationarytimeseriescpdag (class in pywhy_graphs.classes.timeseries)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG"]], "add_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edges"]], "stationarytimeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[34, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph"]], "stationarytimeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph"]], "stationarytimeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph"]], "stationarytimeseriespag (class in pywhy_graphs.classes.timeseries)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG"]], "bidirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edges"]], "circle_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edge_name"]], "circle_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edges"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_parents"]], "sub_bidirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_bidirected_graph"]], "sub_circle_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_circle_graph"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edges"]], "timeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph"]], "timeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesGraph"]], "timeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph"]], "add_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edges_from"]], "add_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_homologous_edges"]], "copy() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.copy"]], "node_attr_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_dict_factory"]], "remove_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edges_from"]], "remove_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_homologous_edges"]], "complete_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[41, "pywhy_graphs.classes.timeseries.complete_ts_graph"]], "empty_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[42, "pywhy_graphs.classes.timeseries.empty_ts_graph"]], "get_summary_graph() (in module pywhy_graphs.classes.timeseries)": [[43, "pywhy_graphs.classes.timeseries.get_summary_graph"]], "has_homologous_edges() (in module pywhy_graphs.classes.timeseries)": [[44, "pywhy_graphs.classes.timeseries.has_homologous_edges"]], "nodes_in_time_order() (in module pywhy_graphs.classes.timeseries)": [[45, "pywhy_graphs.classes.timeseries.nodes_in_time_order"]], "clearn_to_graph() (in module pywhy_graphs.export)": [[46, "pywhy_graphs.export.clearn_to_graph"]], "graph_to_clearn() (in module pywhy_graphs.export)": [[47, "pywhy_graphs.export.graph_to_clearn"]], "graph_to_numpy() (in module pywhy_graphs.export)": [[48, "pywhy_graphs.export.graph_to_numpy"]], "graph_to_pcalg() (in module pywhy_graphs.export)": [[49, "pywhy_graphs.export.graph_to_pcalg"]], "graph_to_tetrad() (in module pywhy_graphs.export)": [[50, "pywhy_graphs.export.graph_to_tetrad"]], "numpy_to_graph() (in module pywhy_graphs.export)": [[51, "pywhy_graphs.export.numpy_to_graph"]], "pcalg_to_graph() (in module pywhy_graphs.export)": [[52, "pywhy_graphs.export.pcalg_to_graph"]], "tetrad_to_graph() (in module pywhy_graphs.export)": [[53, "pywhy_graphs.export.tetrad_to_graph"]], "apply_linear_soft_intervention() (in module pywhy_graphs.functional)": [[54, "pywhy_graphs.functional.apply_linear_soft_intervention"]], "add_cpd_for_node() (in module pywhy_graphs.functional.discrete)": [[55, "pywhy_graphs.functional.discrete.add_cpd_for_node"]], "make_random_discrete_graph() (in module pywhy_graphs.functional.discrete)": [[56, "pywhy_graphs.functional.discrete.make_random_discrete_graph"]], "make_graph_linear_gaussian() (in module pywhy_graphs.functional)": [[57, "pywhy_graphs.functional.make_graph_linear_gaussian"]], "make_graph_multidomain() (in module pywhy_graphs.functional)": [[58, "pywhy_graphs.functional.make_graph_multidomain"]], "set_node_attributes_with_g() (in module pywhy_graphs.functional)": [[59, "pywhy_graphs.functional.set_node_attributes_with_G"]], "mixededgegraph (class in pywhy_graphs.networkx)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph"]], "__contains__() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.__contains__"]], "__getitem__() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.__getitem__"]], "__iter__() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.__iter__"]], "__len__() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.__len__"]], "add_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.add_edges_from"]], "adj (pywhy_graphs.networkx.mixededgegraph property)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.adj"]], "clear_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.clear_edge_types"]], "copy() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.copy"]], "degree() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.degree"]], "edges() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.edges"]], "get_edge_data() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.get_edge_data"]], "get_graphs() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.get_graphs"]], "graph_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.graph_attr_dict_factory"]], "has_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.has_edge"]], "has_node() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.has_node"]], "is_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.is_directed"]], "is_multigraph() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.is_multigraph"]], "name (pywhy_graphs.networkx.mixededgegraph property)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.name"]], "nbunch_iter() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.nbunch_iter"]], "node_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.node_dict_factory"]], "number_of_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edge_types"]], "number_of_edges() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edges"]], "number_of_nodes() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_nodes"]], "order() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.order"]], "remove_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edges_from"]], "size() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.size"]], "subgraph() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.subgraph"]], "to_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.to_directed"]], "to_undirected() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.to_undirected"]], "update() (pywhy_graphs.networkx.mixededgegraph method)": [[60, "pywhy_graphs.networkx.MixedEdgeGraph.update"]], "bidirected_to_unobserved_confounder() (in module pywhy_graphs.networkx)": [[61, "pywhy_graphs.networkx.bidirected_to_unobserved_confounder"]], "is_minimal_m_separator() (in module pywhy_graphs.networkx)": [[62, "pywhy_graphs.networkx.is_minimal_m_separator"]], "m_separated() (in module pywhy_graphs.networkx)": [[63, "pywhy_graphs.networkx.m_separated"]], "minimal_m_separator() (in module pywhy_graphs.networkx)": [[64, "pywhy_graphs.networkx.minimal_m_separator"]], "simulate_data_from_var() (in module pywhy_graphs.simulate)": [[65, "pywhy_graphs.simulate.simulate_data_from_var"]], "simulate_linear_var_process() (in module pywhy_graphs.simulate)": [[66, "pywhy_graphs.simulate.simulate_linear_var_process"]], "simulate_var_process_from_summary_graph() (in module pywhy_graphs.simulate)": [[67, "pywhy_graphs.simulate.simulate_var_process_from_summary_graph"]], "sys_info() (in module pywhy_graphs)": [[68, "pywhy_graphs.sys_info"]], "draw() (in module pywhy_graphs.viz)": [[69, "pywhy_graphs.viz.draw"]], "timeseries_layout() (in module pywhy_graphs.viz)": [[70, "pywhy_graphs.viz.timeseries_layout"]], "1d": [[71, "term-1d"]], "1d array": [[71, "term-1d-array"]], "2d": [[71, "term-2d"]], "2d array": [[71, "term-2d-array"]], "api": [[71, "term-API"]], "f-node": [[71, "term-F-node"]], "markov equivalence class": [[71, "term-Markov-equivalence-class"]], "scm": [[71, "term-SCM"]], "structural causal model": [[71, "term-Structural-Causal-Model"]], "c components": [[71, "term-0"]], "c-components": [[71, "term-c-components"]], "c_components": [[71, "term-c_components"]], "callable": [[71, "term-callable"]], "docstring": [[71, "term-docstring"]], "equivalence class": [[71, "term-equivalence-class"]], "examples": [[71, "term-examples"]], "experimental": [[71, "term-experimental"]], "gallery": [[71, "term-gallery"]], "joblib": [[71, "term-joblib"]], "lag": [[71, "term-lag"]], "n_features": [[71, "term-n_features"]], "n_samples": [[71, "term-n_samples"]], "node": [[71, "term-node"]], "np": [[71, "term-np"]], "nx": [[71, "term-nx"]], "pair": [[71, "term-pair"]], "pd": [[71, "term-pd"]], "sample": [[71, "term-sample"]], "samples": [[71, "term-samples"]], "sigma_map": [[71, "term-sigma_map"]], "symmetric_difference_map": [[71, "term-symmetric_difference_map"]], "tsnode": [[71, "term-tsnode"]], "variable": [[71, "term-variable"]], "pywhy_graphs.algorithms": [[74, "module-pywhy_graphs.algorithms"]], "pywhy_graphs.classes": [[75, "module-pywhy_graphs.classes"]], "pywhy_graphs.classes.timeseries": [[75, "module-pywhy_graphs.classes.timeseries"]], "pywhy_graphs.export": [[76, "module-pywhy_graphs.export"]], "pywhy_graphs.functional": [[77, "module-pywhy_graphs.functional"]], "pywhy_graphs.simulate": [[78, "module-pywhy_graphs.simulate"]]}})