Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/intro/index", "auto_examples/intro/inducing_path", "auto_examples/intro/intro_causal_graphs", "auto_examples/intro/sg_execution_times", "auto_examples/mixededge/index", "auto_examples/mixededge/plot_mixed_edge_graph", "auto_examples/mixededge/sg_execution_times", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout", "auto_examples/visualization/index", "auto_examples/visualization/plot_timeseries_graphs", "auto_examples/visualization/sg_execution_times", "generated/pywhy_graphs.ADMG", "generated/pywhy_graphs.AugmentedGraph", "generated/pywhy_graphs.AugmentedPAG", "generated/pywhy_graphs.CPDAG", "generated/pywhy_graphs.PAG", "generated/pywhy_graphs.algorithms.acyclification", "generated/pywhy_graphs.algorithms.add_all_snode_combinations", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node", "generated/pywhy_graphs.algorithms.discriminating_path", "generated/pywhy_graphs.algorithms.find_connected_pairs", "generated/pywhy_graphs.algorithms.inducing_path", "generated/pywhy_graphs.algorithms.is_definite_noncollider", "generated/pywhy_graphs.algorithms.is_valid_mec_graph", "generated/pywhy_graphs.algorithms.pds", "generated/pywhy_graphs.algorithms.pds_path", "generated/pywhy_graphs.algorithms.pds_t", "generated/pywhy_graphs.algorithms.pds_t_path", "generated/pywhy_graphs.algorithms.possible_ancestors", "generated/pywhy_graphs.algorithms.possible_descendants", "generated/pywhy_graphs.algorithms.uncovered_pd_path", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph", "generated/pywhy_graphs.classes.timeseries.get_summary_graph", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order", "generated/pywhy_graphs.export.clearn_to_graph", "generated/pywhy_graphs.export.graph_to_clearn", "generated/pywhy_graphs.export.graph_to_numpy", "generated/pywhy_graphs.export.graph_to_pcalg", "generated/pywhy_graphs.export.graph_to_tetrad", "generated/pywhy_graphs.export.numpy_to_graph", "generated/pywhy_graphs.export.pcalg_to_graph", "generated/pywhy_graphs.export.tetrad_to_graph", "generated/pywhy_graphs.functional.apply_linear_soft_intervention", "generated/pywhy_graphs.functional.make_graph_linear_gaussian", "generated/pywhy_graphs.functional.make_graph_multidomain", "generated/pywhy_graphs.functional.set_node_attributes_with_G", "generated/pywhy_graphs.networkx.MixedEdgeGraph", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "generated/pywhy_graphs.networkx.is_minimal_m_separator", "generated/pywhy_graphs.networkx.m_separated", "generated/pywhy_graphs.networkx.minimal_m_separator", "generated/pywhy_graphs.simulate.simulate_data_from_var", "generated/pywhy_graphs.simulate.simulate_linear_var_process", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "generated/pywhy_graphs.sys_info", "generated/pywhy_graphs.viz.draw", "generated/pywhy_graphs.viz.timeseries_layout", "glossary", "index", "installation", "reference/algorithms/index", "reference/classes/index", "reference/export/index", "reference/functional/index", "reference/simulation/index", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1", "whats_new/v0.2"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/intro/index.rst", "auto_examples/intro/inducing_path.rst", "auto_examples/intro/intro_causal_graphs.rst", "auto_examples/intro/sg_execution_times.rst", "auto_examples/mixededge/index.rst", "auto_examples/mixededge/plot_mixed_edge_graph.rst", "auto_examples/mixededge/sg_execution_times.rst", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/plot_timeseries_graphs.rst", "auto_examples/visualization/sg_execution_times.rst", "generated/pywhy_graphs.ADMG.rst", "generated/pywhy_graphs.AugmentedGraph.rst", "generated/pywhy_graphs.AugmentedPAG.rst", "generated/pywhy_graphs.CPDAG.rst", "generated/pywhy_graphs.PAG.rst", "generated/pywhy_graphs.algorithms.acyclification.rst", "generated/pywhy_graphs.algorithms.add_all_snode_combinations.rst", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node.rst", "generated/pywhy_graphs.algorithms.discriminating_path.rst", "generated/pywhy_graphs.algorithms.find_connected_pairs.rst", "generated/pywhy_graphs.algorithms.inducing_path.rst", "generated/pywhy_graphs.algorithms.is_definite_noncollider.rst", "generated/pywhy_graphs.algorithms.is_valid_mec_graph.rst", "generated/pywhy_graphs.algorithms.pds.rst", "generated/pywhy_graphs.algorithms.pds_path.rst", "generated/pywhy_graphs.algorithms.pds_t.rst", "generated/pywhy_graphs.algorithms.pds_t_path.rst", "generated/pywhy_graphs.algorithms.possible_ancestors.rst", "generated/pywhy_graphs.algorithms.possible_descendants.rst", "generated/pywhy_graphs.algorithms.uncovered_pd_path.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.get_summary_graph.rst", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges.rst", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order.rst", "generated/pywhy_graphs.export.clearn_to_graph.rst", "generated/pywhy_graphs.export.graph_to_clearn.rst", "generated/pywhy_graphs.export.graph_to_numpy.rst", "generated/pywhy_graphs.export.graph_to_pcalg.rst", "generated/pywhy_graphs.export.graph_to_tetrad.rst", "generated/pywhy_graphs.export.numpy_to_graph.rst", "generated/pywhy_graphs.export.pcalg_to_graph.rst", "generated/pywhy_graphs.export.tetrad_to_graph.rst", "generated/pywhy_graphs.functional.apply_linear_soft_intervention.rst", "generated/pywhy_graphs.functional.make_graph_linear_gaussian.rst", "generated/pywhy_graphs.functional.make_graph_multidomain.rst", "generated/pywhy_graphs.functional.set_node_attributes_with_G.rst", "generated/pywhy_graphs.networkx.MixedEdgeGraph.rst", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder.rst", "generated/pywhy_graphs.networkx.is_minimal_m_separator.rst", "generated/pywhy_graphs.networkx.m_separated.rst", "generated/pywhy_graphs.networkx.minimal_m_separator.rst", "generated/pywhy_graphs.simulate.simulate_data_from_var.rst", "generated/pywhy_graphs.simulate.simulate_linear_var_process.rst", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph.rst", "generated/pywhy_graphs.sys_info.rst", "generated/pywhy_graphs.viz.draw.rst", "generated/pywhy_graphs.viz.timeseries_layout.rst", "glossary.rst", "index.rst", "installation.md", "reference/algorithms/index.rst", "reference/classes/index.rst", "reference/export/index.rst", "reference/functional/index.rst", "reference/simulation/index.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst", "whats_new/v0.2.rst"], "titles": ["API", "Examples Gallery", "Introduction to causal graphs", "An introduction to Inducing Paths and how to find them", "An introduction to causal graphs and how to use them", "Computation times", "Networkx MixedEdgeGraph Examples", "MixedEdgeGraph - Graph with different types of edges", "Computation times", "Drawing graphs and setting their layout for visual comparison", "Visualization of causal graphs", "Drawing timeseries graphs and setting their layout", "Computation times", "pywhy_graphs.ADMG", "pywhy_graphs.AugmentedGraph", "pywhy_graphs.AugmentedPAG", "pywhy_graphs.CPDAG", "pywhy_graphs.PAG", "<span class=\"section-number\">3.4.1. </span>pywhy_graphs.algorithms.acyclification", "pywhy_graphs.algorithms.add_all_snode_combinations", "pywhy_graphs.algorithms.compute_invariant_domains_per_node", "<span class=\"section-number\">3.1.4. </span>pywhy_graphs.algorithms.discriminating_path", "pywhy_graphs.algorithms.find_connected_pairs", "pywhy_graphs.algorithms.inducing_path", "<span class=\"section-number\">3.1.5. </span>pywhy_graphs.algorithms.is_definite_noncollider", "<span class=\"section-number\">3.1.1. </span>pywhy_graphs.algorithms.is_valid_mec_graph", "<span class=\"section-number\">3.2.1. </span>pywhy_graphs.algorithms.pds", "<span class=\"section-number\">3.2.2. </span>pywhy_graphs.algorithms.pds_path", "<span class=\"section-number\">3.3.1. </span>pywhy_graphs.algorithms.pds_t", "<span class=\"section-number\">3.3.2. </span>pywhy_graphs.algorithms.pds_t_path", "<span class=\"section-number\">3.1.2. </span>pywhy_graphs.algorithms.possible_ancestors", "<span class=\"section-number\">3.1.3. </span>pywhy_graphs.algorithms.possible_descendants", "<span class=\"section-number\">3.2.3. </span>pywhy_graphs.algorithms.uncovered_pd_path", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.TimeSeriesGraph", "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.complete_ts_graph", "pywhy_graphs.classes.timeseries.empty_ts_graph", "pywhy_graphs.classes.timeseries.get_summary_graph", "pywhy_graphs.classes.timeseries.has_homologous_edges", "pywhy_graphs.classes.timeseries.nodes_in_time_order", "<span class=\"section-number\">5.1.2. </span>pywhy_graphs.export.clearn_to_graph", "<span class=\"section-number\">5.1.1. </span>pywhy_graphs.export.graph_to_clearn", "<span class=\"section-number\">5.2.1. </span>pywhy_graphs.export.graph_to_numpy", "<span class=\"section-number\">5.3.1. </span>pywhy_graphs.export.graph_to_pcalg", "<span class=\"section-number\">5.4.1. </span>pywhy_graphs.export.graph_to_tetrad", "<span class=\"section-number\">5.2.2. </span>pywhy_graphs.export.numpy_to_graph", "<span class=\"section-number\">5.3.2. </span>pywhy_graphs.export.pcalg_to_graph", "<span class=\"section-number\">5.4.2. </span>pywhy_graphs.export.tetrad_to_graph", "<span class=\"section-number\">2.2.2. </span>pywhy_graphs.functional.apply_linear_soft_intervention", "<span class=\"section-number\">2.2.1. </span>pywhy_graphs.functional.make_graph_linear_gaussian", "<span class=\"section-number\">2.4.1. </span>pywhy_graphs.functional.make_graph_multidomain", "pywhy_graphs.functional.set_node_attributes_with_G", "pywhy_graphs.networkx.MixedEdgeGraph", "<span class=\"section-number\">3.1.6. </span>pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "<span class=\"section-number\">3.1.8. </span>pywhy_graphs.networkx.is_minimal_m_separator", "<span class=\"section-number\">3.1.7. </span>pywhy_graphs.networkx.m_separated", "<span class=\"section-number\">3.1.9. </span>pywhy_graphs.networkx.minimal_m_separator", "<span class=\"section-number\">4.1.2. </span>pywhy_graphs.simulate.simulate_data_from_var", "<span class=\"section-number\">4.1.1. </span>pywhy_graphs.simulate.simulate_linear_var_process", "<span class=\"section-number\">4.1.3. </span>pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "pywhy_graphs.sys_info", "pywhy_graphs.viz.draw", "pywhy_graphs.viz.timeseries_layout", "<span class=\"section-number\">6. </span>Glossary of Common Terms and API Elements", "<strong>pywhy-graphs</strong>", "Installation", "<span class=\"section-number\">3. </span>Causal Graph Algorithms in PyWhy", "<span class=\"section-number\">1. </span>Causal Graphs in PyWhy", "<span class=\"section-number\">5. </span>Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package", "<span class=\"section-number\">2. </span>Functional Causal Graphical Models", "<span class=\"section-number\">4. </span>Simulation module", "How to use pywhy-graphs with examples and tutorials", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?", "What\u2019s new?"], "terms": {"thi": [0, 1, 3, 4, 6, 7, 9, 11, 15, 16, 17, 18, 20, 25, 27, 28, 29, 32, 33, 35, 39, 40, 44, 48, 56, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 73, 74, 75, 76, 77, 79], "i": [0, 1, 3, 4, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 40, 44, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78], "applic": 0, "program": 0, "interfac": [0, 69, 70, 74], "refer": [0, 14, 15, 18, 23, 26, 32, 52, 58, 60, 61, 62, 69, 70, 73], "camelcas": 0, "name": [0, 7, 9, 13, 14, 15, 16, 17, 18, 33, 36, 37, 46, 51, 52, 58, 59, 60, 61, 62, 63, 67, 69, 73], "underscore_cas": 0, "pywhi": [0, 14, 15, 48, 49, 50, 53, 69, 71, 75, 78, 79, 81, 82], "group": 0, "themat": 0, "analysi": 0, "stage": [0, 56, 70], "These": [0, 4, 26, 69], "ar": [0, 3, 4, 7, 9, 13, 14, 15, 16, 17, 20, 22, 23, 25, 26, 30, 31, 32, 33, 34, 37, 40, 43, 44, 46, 48, 49, 51, 52, 55, 56, 58, 59, 60, 62, 63, 64, 69, 70, 72, 73, 75, 79], "structur": [0, 13, 16, 17, 33, 35, 38, 39, 40, 56, 58, 69, 72, 73, 74, 76], "scm": [0, 4, 16, 17, 33, 69, 73], "variou": [0, 4, 9, 73, 81], "encount": [0, 74], "literatur": [0, 4], "tradit": [0, 4, 13, 73], "oper": [0, 18], "over": [0, 7, 16, 17, 28, 29, 33, 34, 37, 40, 58, 61, 63, 70, 73], "onli": [0, 3, 4, 7, 16, 17, 32, 33, 37, 40, 48, 58, 61, 69, 73, 74, 75], "one": [0, 3, 4, 7, 9, 14, 17, 20, 21, 25, 32, 34, 46, 48, 56, 58, 63, 64, 73, 74, 75], "type": [0, 1, 6, 8, 13, 14, 15, 16, 17, 33, 36, 40, 41, 46, 49, 51, 52, 53, 54, 58, 64, 69, 70, 74, 77, 78], "equival": [0, 3, 4, 15, 16, 17, 33, 69, 73, 78], "gener": [0, 1, 3, 4, 7, 9, 11, 13, 16, 17, 33, 56, 58, 63, 64, 67, 73, 75, 76, 77, 78], "consist": [0, 3, 28, 29, 34, 56, 63, 70, 73], "more": [0, 3, 4, 9, 14, 17, 56, 58, 64, 67, 69, 70, 73, 74], "than": [0, 17, 28, 29, 40, 56, 58, 73, 74], "common": [0, 4, 48, 70, 72, 73, 78], "us": [0, 1, 2, 5, 6, 7, 9, 11, 18, 20, 32, 33, 35, 39, 40, 57, 66, 69, 70, 71, 74, 76, 78], "varieti": 0, "differ": [0, 1, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 33, 37, 58, 60, 62, 64, 69, 70, 73, 77], "learn": [0, 3, 4, 15, 16, 17, 18, 26, 33, 46, 66, 70, 73, 75, 77, 78, 81], "implement": [0, 7, 27, 28, 29, 58, 60, 61, 62, 69, 70, 73, 74, 81], "infer": [0, 4, 15, 20, 26, 70], "procedur": [0, 18], "encod": [0, 4, 46, 73, 75], "object": [0, 4, 7, 9, 11, 16, 17, 33, 35, 40, 46, 58, 64, 69, 73], "submodul": [0, 70, 72, 75, 81], "those": [0, 3, 23, 58, 64], "data": [0, 13, 14, 15, 16, 17, 33, 34, 35, 40, 55, 56, 58, 63, 64, 69, 72, 73, 74, 75, 76], "correspond": [0, 7, 13, 15, 16, 17, 40, 48, 58, 65, 69, 73, 75], "current": [0, 20, 27, 28, 29, 34, 70, 73, 74, 75], "doe": [0, 17, 25, 32, 58, 61, 70], "support": [0, 34, 43, 48, 58, 70, 71, 73, 74, 75, 81], "which": [0, 3, 4, 7, 11, 16, 17, 21, 26, 27, 28, 29, 32, 33, 34, 40, 46, 53, 55, 56, 58, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 76, 78], "crucial": 0, "repres": [0, 4, 7, 13, 14, 15, 16, 17, 48, 49, 51, 52, 56, 58, 59, 60, 69, 70, 73, 74, 75], "latent": [0, 3, 4, 13, 15, 16, 17, 23, 26, 32, 33, 64, 69, 73, 75], "confound": [0, 3, 4, 7, 13, 16, 17, 23, 32, 33, 59, 64, 69, 73, 75], "select": [0, 3, 4, 13, 17, 23, 26, 32, 56, 73, 78], "bia": [0, 3, 4, 13, 17, 23, 32, 73], "The": [0, 4, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75], "follow": [0, 17, 26, 48, 51, 52, 58, 69, 73, 74], "we": [0, 3, 4, 7, 9, 11, 17, 23, 32, 40, 48, 55, 56, 60, 63, 64, 69, 72, 73, 74, 75, 76, 77, 81, 82], "intend": 0, "pr": 0, "eventu": [0, 58, 70], "thei": [0, 4, 7, 9, 14, 15, 16, 17, 33, 40, 48, 56, 58, 70, 73, 74], "includ": [0, 20, 34, 35, 58, 60, 62, 63, 64, 65, 66, 69, 73, 81, 82], "temporari": 0, "bridg": 0, "welcom": [0, 74], "feedback": 0, "specif": [0, 7, 20, 48, 56, 57, 58, 60, 62, 68, 69, 70, 74], "time": [0, 3, 4, 7, 9, 11, 28, 29, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 63, 64, 65, 68, 69, 78, 81], "seri": [0, 4, 11, 34, 35, 36, 38, 39, 40, 41, 43, 44, 63, 64, 65, 68, 69, 78, 81], "also": [0, 48, 56, 58, 68, 69, 70, 72, 73, 75], "have": [0, 4, 7, 17, 19, 24, 25, 44, 48, 55, 56, 58, 59, 61, 63, 70, 73, 74], "like": [0, 7, 17, 35, 48, 49, 51, 52, 58, 66, 70, 73, 74], "stationari": [0, 33, 34, 35, 36, 37, 40, 44, 63, 64, 65, 73], "mai": [0, 13, 16, 17, 24, 34, 56, 58, 60, 61, 62, 64, 69, 73], "For": [0, 3, 4, 7, 9, 11, 14, 15, 16, 17, 33, 34, 37, 55, 56, 58, 63, 67, 69, 70, 73, 75], "explicitli": [0, 58, 75], "them": [0, 1, 2, 5, 13, 16, 17, 25, 58, 61, 67, 69, 77], "assist": 0, "start": [0, 21, 27, 28, 29, 30, 31, 32, 45, 46, 52, 63, 65, 76], "from": [0, 3, 4, 9, 11, 15, 16, 17, 21, 26, 32, 33, 37, 40, 41, 43, 44, 45, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 76, 78, 81], "an": [0, 1, 2, 5, 7, 9, 13, 14, 15, 16, 17, 18, 20, 23, 25, 26, 32, 33, 34, 35, 37, 40, 41, 48, 51, 52, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 81], "linear": [0, 54, 55, 56, 64, 78, 81], "equat": 0, "gaussian": [0, 54, 55, 56, 75], "sem": 0, "compar": [0, 4, 7, 9, 11, 17, 27, 28, 29, 58, 73], "becaus": [0, 3, 4, 7, 17, 48, 56, 60, 62, 70, 73, 74], "can": [0, 3, 4, 7, 9, 11, 13, 16, 17, 20, 22, 32, 33, 34, 40, 48, 58, 61, 63, 64, 66, 67, 70, 73, 74, 75], "wrap": [0, 61], "graphviz": [0, 4, 9, 11, 67, 78], "pygraphviz": [0, 34, 66, 73], "perform": [0, 61], "modular": 0, "node": [0, 4, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 44, 45, 46, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 75, 81], "modul": [0, 58, 66, 69, 70, 78], "simpl": [1, 17, 69, 70, 73, 77], "demonstr": [1, 6, 9, 11, 77], "how": [1, 2, 5, 6, 9, 11, 13, 16, 17, 20, 48, 49, 58, 61, 67, 69, 73], "note": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 32, 33, 34, 40, 44, 48, 49, 52, 53, 56, 58, 59, 61, 63, 64, 65, 68, 69, 73, 77, 79], "wip": [1, 6, 77], "api": [1, 6, 7, 35, 58, 73, 77, 78, 79, 80, 81, 82], "intent": [1, 6, 77], "ad": [1, 3, 4, 6, 7, 14, 15, 16, 17, 19, 33, 34, 40, 58, 59, 73, 75, 77, 81], "edg": [1, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 27, 32, 33, 34, 35, 36, 37, 40, 44, 48, 49, 52, 55, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 77, 81], "induc": [1, 2, 4, 5, 13, 16, 23, 33, 58, 67, 69, 73, 77, 81], "path": [1, 2, 4, 5, 13, 21, 23, 24, 26, 27, 28, 29, 32, 58, 60, 61, 66, 67, 69, 77, 81], "find": [1, 2, 5, 13, 21, 22, 26, 58, 62, 67, 70, 77, 81], "draw": [1, 3, 4, 10, 12, 13, 16, 17, 38, 58, 68, 77, 81], "set": [1, 3, 4, 7, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 48, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 73, 75, 77], "layout": [1, 10, 12, 13, 16, 17, 38, 58, 67, 68, 77, 81], "comparison": [1, 10, 11, 12, 13, 16, 17, 58, 67, 77], "timeseri": [1, 10, 12, 67, 68, 77, 78, 81], "download": [1, 3, 4, 7, 9, 11, 77], "all": [1, 3, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 33, 34, 35, 40, 44, 55, 56, 58, 59, 60, 62, 69, 70, 73, 74, 77, 79], "python": [1, 3, 4, 7, 9, 11, 16, 17, 33, 40, 58, 66, 69, 70, 71, 77], "sourc": [1, 3, 4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 77], "code": [1, 3, 4, 7, 9, 11, 52, 69, 77], "auto_examples_python": [1, 77], "zip": [1, 77], "jupyt": [1, 3, 4, 7, 9, 11, 77], "notebook": [1, 3, 4, 7, 9, 11, 77], "auto_examples_jupyt": [1, 77], "sphinx": [1, 3, 4, 7, 9, 11, 69, 77], "click": [3, 4, 7, 9, 11], "here": [3, 4, 7, 9, 11, 52, 58, 74, 77, 81, 82], "full": [3, 4, 7, 9, 11, 58, 64], "A": [3, 4, 7, 9, 13, 16, 17, 18, 21, 23, 24, 25, 32, 33, 34, 36, 37, 38, 39, 40, 43, 58, 59, 61, 65, 68, 69, 73], "p": [3, 4, 21, 69], "call": [3, 9, 11, 15, 18, 27, 28, 29, 62, 69, 73], "rel": [3, 32, 70], "l": [3, 23], "": [3, 4, 15, 16, 17, 19, 20, 23, 26, 33, 34, 40, 52, 56, 58, 69, 70, 73, 75, 79], "mix": [3, 13, 17, 36, 40, 58, 60, 61, 62, 67, 70, 72, 73, 74, 81], "direct": [3, 7, 13, 14, 15, 16, 17, 18, 25, 26, 32, 33, 34, 35, 37, 38, 40, 43, 48, 58, 59, 60, 61, 62, 67, 70, 73, 75], "bidirect": [3, 4, 7, 13, 14, 15, 16, 17, 18, 33, 37, 48, 59, 60, 61, 62, 69, 70, 73, 75], "where": [3, 4, 7, 14, 15, 16, 17, 21, 25, 33, 34, 40, 48, 55, 58, 64, 69, 70, 73], "everi": [3, 4, 7, 21, 26, 32, 61, 73], "endpoint": [3, 4, 15, 17, 21, 29, 32, 46, 48, 73, 74], "vertex": [3, 21], "either": [3, 4, 15, 18, 48, 49, 56, 58, 69], "ancestor": [3, 23, 30], "x": [3, 4, 7, 9, 11, 14, 15, 16, 17, 26, 28, 29, 33, 34, 37, 48, 55, 56, 60, 61, 62, 63, 67, 69, 73, 75], "y": [3, 4, 7, 9, 11, 14, 15, 16, 17, 26, 33, 34, 37, 48, 56, 60, 61, 62, 67, 69, 73, 75], "member": 3, "In": [3, 4, 9, 11, 17, 18, 32, 34, 44, 48, 56, 58, 63, 64, 70, 73, 75, 82], "other": [3, 4, 7, 9, 11, 17, 25, 48, 56, 58, 69, 73, 74], "word": 3, "two": [3, 4, 7, 13, 16, 17, 23, 29, 32, 48, 56, 58, 59, 69, 70, 73, 81], "cannot": [3, 23, 32, 60], "d": [3, 4, 16, 17, 23, 26, 27, 28, 29, 33, 34, 40, 58, 73], "seper": 3, "make": [3, 4, 18, 40], "activ": [3, 23], "regardless": [3, 23, 58], "what": [3, 4, 17, 18, 23, 56, 73, 79], "variabl": [3, 4, 7, 15, 23, 26, 32, 34, 41, 42, 55, 56, 59, 63, 64, 68, 69, 73, 75], "condit": [3, 4, 23, 61, 63, 69], "detail": [3, 4, 15, 23, 56, 69, 70], "found": [3, 21, 32, 58, 60, 62, 66], "1": [3, 4, 7, 9, 11, 14, 15, 18, 23, 26, 27, 28, 29, 32, 34, 35, 38, 39, 40, 48, 52, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 79], "import": [3, 4, 7, 9, 11, 66, 69, 70, 78, 81], "pywhy_graph": [3, 4, 7, 9, 11, 69, 70, 78, 81], "admg": [3, 9, 11, 14, 16, 17, 33, 46, 48, 51, 53, 61, 70, 73], "viz": [3, 4, 9, 11, 81], "To": [3, 7, 32, 44, 56, 58, 63, 64, 70, 71, 75, 77], "illustr": [3, 70], "work": [3, 35, 58, 60, 61, 69, 70, 73], "algorithm": [3, 4, 16, 17, 33, 60, 61, 62, 70, 73, 76, 78, 81], "causal": [3, 5, 7, 13, 14, 15, 16, 17, 18, 23, 32, 33, 36, 37, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 78, 81], "figur": 3, "2": [3, 4, 7, 11, 15, 16, 17, 20, 26, 33, 34, 40, 48, 52, 55, 56, 58, 63, 66, 69, 73, 74, 79], "g": [3, 4, 7, 9, 11, 18, 19, 20, 23, 24, 25, 30, 31, 32, 40, 41, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 67, 68, 70], "add_edg": [3, 4, 7, 16, 17, 33, 40, 58, 70], "x4": 3, "x1": [3, 11], "directed_edge_nam": [3, 13, 14, 15, 16, 17, 33, 37, 59, 60, 61, 62, 73], "x2": [3, 11], "x5": 3, "x6": 3, "x3": [3, 11], "l2": 3, "l1": 3, "paper": 3, "see": [3, 4, 9, 11, 14, 15, 23, 38, 39, 48, 49, 52, 53, 56, 58, 64, 67, 69, 70, 73], "dot_graph": [3, 4], "render": [3, 4, 9, 11, 69], "outfil": [3, 4, 9, 11], "png": [3, 4, 9, 11], "view": [3, 4, 9, 11, 40, 58], "true": [3, 4, 7, 9, 11, 18, 23, 33, 34, 35, 37, 40, 41, 44, 55, 56, 58, 60, 61, 66, 69, 73], "By": [3, 7, 13, 14, 15, 16, 17, 21, 26, 32, 33, 35, 40, 56, 58, 63, 65, 67, 69, 73], "definit": [3, 13, 16, 17, 24, 27, 32, 69, 73], "test": [3, 60, 74, 76, 81], "return": [3, 4, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69], "print": [3, 4, 7, 9, 11, 48, 66], "inducing_path": [3, 5], "given": [3, 4, 16, 17, 19, 20, 32, 33, 34, 40, 56, 58, 61, 73], "need": [3, 4, 32, 34, 70, 73, 77], "satisfi": 3, "requir": [3, 9, 17, 69, 73], "function": [3, 4, 7, 9, 11, 17, 25, 32, 34, 38, 39, 41, 44, 58, 60, 66, 69, 70, 72, 73, 74, 76, 78, 81], "enough": 3, "pair": [3, 13, 14, 15, 16, 17, 22, 25, 33, 34, 36, 48, 58, 69, 73], "As": [3, 7], "c": [3, 4, 13, 21, 32, 69], "final": [3, 11, 58, 64, 73, 75], "skeleton": 3, "class": [3, 4, 7, 13, 14, 15, 16, 17, 48, 58, 69, 70, 78, 81], "sens": [3, 25, 73], "mag": [3, 52], "dag": [3, 13, 16, 17, 33, 37, 46, 51, 52, 53, 55, 56, 59, 61, 64, 65, 70, 73, 74], "contain": [3, 15, 16, 17, 23, 25, 27, 33, 40, 44, 48, 58, 60, 61, 62, 69, 70], "among": [3, 28, 29, 35, 56, 58, 61, 64, 69, 73], "ii": 3, "primit": 3, "sinc": [3, 4, 7, 48, 58, 81, 82], "fals": [3, 4, 7, 32, 34, 40, 43, 58, 60, 66, 73], "howev": [3, 4, 13, 32, 63, 64, 69, 70, 73], "add": [3, 4, 7, 13, 14, 16, 17, 19, 33, 34, 36, 40, 58, 70, 71, 73, 75, 81], "valid": [3, 25, 34, 62, 73], "now": [3, 4, 7, 65], "ha": [3, 4, 7, 15, 16, 17, 21, 26, 33, 40, 48, 58, 60, 61, 62, 64, 69, 70, 73, 75, 81, 82], "downstream": 3, "effect": [3, 11, 16, 17, 33, 40, 58, 64, 75, 77], "descend": [3, 31], "open": [3, 4, 70], "up": [3, 4, 34, 73], "some": [3, 9, 11, 26, 58, 70, 73, 77], "still": [3, 4, 56, 69], "do": [3, 4, 17, 25, 58, 69, 73, 75], "avail": [3, 71], "If": [3, 4, 7, 15, 16, 17, 20, 24, 26, 32, 33, 34, 37, 40, 44, 56, 58, 60, 62, 63, 66, 70, 73], "should": [3, 7, 16, 17, 33, 35, 39, 40, 58, 69, 70, 78], "jiji": [3, 4, 23, 32], "zhang": [3, 4, 23, 32], "On": [3, 4, 23, 32], "complet": [3, 16, 23, 26, 32, 33, 35, 41, 58, 60, 61, 62, 63, 73], "orient": [3, 4, 16, 17, 21, 23, 32, 33, 37, 69, 73], "rule": [3, 4, 17, 23, 32, 73], "discoveri": [3, 4, 15, 18, 23, 32, 73, 76], "presenc": [3, 4, 7, 13, 18, 23, 32, 73], "artifici": [3, 4, 18, 23, 32, 60, 61, 62], "intellig": [3, 4, 18, 23, 32, 60, 61, 62], "172": [3, 4, 23, 32], "16": [3, 4, 23, 32, 81], "1873": [3, 4, 23, 32], "1896": [3, 4, 23, 32], "2008": [3, 4, 23, 32], "url": [3, 4, 15, 18, 23, 26, 32], "http": [3, 4, 9, 15, 18, 23, 26, 32, 52, 53, 58, 67, 69, 71], "www": [3, 4, 15, 23, 32], "sciencedirect": [3, 4, 23, 32], "com": [3, 4, 23, 32, 71], "scienc": [3, 4, 15, 23, 32], "articl": [3, 4, 23, 32], "pii": [3, 4, 23, 32], "s0004370208001008": [3, 4, 23, 32], "doi": [3, 4, 15, 23, 26, 32, 60, 61, 62], "org": [3, 4, 9, 15, 23, 26, 32, 52, 58, 67, 71], "10": [3, 4, 9, 11, 15, 23, 26, 32, 48, 60, 61, 62, 81], "1016": [3, 4, 23, 32, 60, 61, 62], "j": [3, 4, 22, 23, 32, 48, 55, 60, 61, 62], "artint": [3, 4, 23, 32, 60, 61, 62], "08": [3, 4, 23, 32, 66], "001": [3, 4, 23, 32], "diego": [3, 26], "colombo": [3, 26], "marlo": [3, 26], "h": [3, 26], "maathui": [3, 26], "marku": [3, 26], "kalisch": [3, 26], "thoma": [3, 26], "richardson": [3, 26], "high": [3, 26], "dimension": [3, 26, 69], "acycl": [3, 13, 16, 26, 33, 64, 70, 73, 78, 81], "annal": [3, 26], "statist": [3, 14, 26], "40": [3, 26, 60, 61, 62], "294": [3, 26], "321": [3, 26], "2012": [3, 26], "1214": [3, 26], "11": [3, 26], "aos940": [3, 26], "total": [3, 4, 5, 7, 8, 9, 11, 12, 34, 56, 58, 73], "run": [3, 4, 7, 9, 11, 66, 71], "script": [3, 4, 7, 9, 11, 69], "0": [3, 4, 7, 9, 11, 14, 15, 26, 34, 44, 45, 48, 52, 55, 56, 63, 64, 66, 68, 69, 70, 73, 74, 79], "minut": [3, 4, 7, 9, 11], "619": [3, 5], "second": [3, 4, 7, 9, 11, 58, 61, 69, 73], "estim": [3, 4, 7, 9, 11, 69], "memori": [3, 4, 7, 9, 11, 66, 69], "usag": [3, 4, 7, 9, 11, 69, 70], "8": [3, 4, 5, 9, 12, 60, 66, 71], "mb": [3, 4, 5, 7, 8, 9, 11, 12], "py": [3, 4, 5, 7, 8, 9, 11, 12, 71], "ipynb": [3, 4, 7, 9, 11], "galleri": [3, 4, 7, 9, 11, 69], "exampl": [4, 7, 9, 11, 14, 15, 33, 34, 37, 40, 48, 56, 63, 66, 69, 70, 73, 75], "graphic": [4, 14, 55, 69, 78], "attach": 4, "notion": 4, "each": [4, 7, 9, 11, 14, 15, 16, 17, 25, 33, 36, 40, 56, 58, 63, 66, 67, 68, 69, 73, 75], "miss": [4, 56, 64], "review": 4, "fundament": [4, 70], "networkx": [4, 7, 9, 11, 13, 14, 15, 16, 17, 33, 34, 36, 40, 41, 55, 56, 66, 69, 73, 74, 81], "nx": [4, 7, 9, 35, 43, 58, 65, 69, 70, 73], "numpi": [4, 34, 48, 49, 51, 66, 69, 73, 78, 81], "np": [4, 46, 48, 69], "panda": [4, 63, 65, 66, 69], "pd": [4, 27, 28, 29, 32, 69, 81], "dowhi": [4, 66], "gcm": 4, "util": 4, "set_random_se": 4, "scipi": [4, 34, 64, 66, 73], "stat": [4, 64], "pywhy_nx": [4, 18, 46, 67, 70], "mathemat": 4, "defin": [4, 7, 23, 26, 27, 28, 29, 32, 34, 48, 49, 55, 58, 69, 73], "4": [4, 27, 60, 62, 66, 68, 69, 73], "tupl": [4, 7, 14, 15, 16, 17, 21, 22, 23, 28, 29, 32, 33, 34, 40, 44, 47, 56, 58, 69, 73], "v": [4, 7, 16, 17, 21, 26, 32, 33, 37, 40, 44, 58, 61, 62, 69], "u": [4, 9, 11, 16, 17, 21, 26, 32, 33, 37, 40, 44, 55, 58, 69, 70], "f": [4, 7, 14, 15, 69, 73], "endogen": [4, 69], "observ": [4, 63, 65, 69], "exogen": [4, 54, 69], "unobserv": [4, 7, 16, 33, 59, 73], "distribut": [4, 15, 55, 56, 64, 69, 75], "taken": [4, 32, 58], "togeth": 4, "four": [4, 58], "mechan": [4, 56], "problem": [4, 15], "almost": 4, "alwai": [4, 23, 34, 60, 62, 69, 70, 73], "argument": [4, 9, 11, 13, 14, 15, 16, 17, 32, 33, 34, 36, 37, 40, 58, 66, 69, 73, 81], "parent": [4, 16, 17, 21, 33, 37, 55, 56, 69, 75], "ani": [4, 7, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 44, 46, 47, 48, 51, 52, 54, 56, 58, 63, 67, 69, 73, 75], "between": [4, 13, 16, 17, 21, 23, 25, 26, 29, 32, 33, 40, 46, 48, 55, 56, 58, 60, 61, 62, 69, 70, 73, 74, 81], "even": [4, 62], "though": 4, "typic": [4, 7, 32], "unknown": [4, 15], "ground": 4, "truth": 4, "evalu": 4, "build": [4, 70], "our": [4, 70], "intuit": [4, 23, 32], "understand": 4, "context": [4, 70], "random": [4, 14, 15, 54, 55, 56, 63, 64, 65, 68], "seed": [4, 54, 55, 56, 65], "reproduc": [4, 58], "12345": 4, "rng": 4, "randomst": [4, 54], "mycustommodel": 4, "predictionmodel": 4, "def": 4, "__init__": 4, "self": 4, "coeffici": 4, "fit": [4, 69], "noth": 4, "know": [4, 7, 73], "pass": [4, 9, 11, 16, 17, 32, 33, 37, 63, 66], "predict": [4, 26], "clone": [4, 71], "don": [4, 58], "t": [4, 34, 35, 45, 58, 63, 68, 69, 73], "realli": 4, "actual": [4, 40, 58, 74], "1234": 4, "construct": [4, 20, 25, 51, 53, 56], "result": [4, 7, 17, 64, 73], "xy": [4, 9], "z": [4, 7, 9, 26, 34, 48, 60, 61, 62, 73, 75], "w": [4, 9], "_________": 4, "digraph": [4, 7, 9, 13, 14, 15, 16, 17, 33, 36, 37, 41, 42, 43, 55, 56, 58, 59, 67, 70, 73], "causal_model": 4, "probabilisticcausalmodel": 4, "set_causal_mechan": 4, "scipydistribut": 4, "binom": [4, 56], "5": [4, 5, 11, 12, 64, 66, 68], "n": [4, 16, 17, 33, 37, 55, 58], "9": [4, 11, 26, 34, 73, 81], "additivenoisemodel": 4, "prediction_model": 4, "noise_model": 4, "would": [4, 7, 17, 34, 48, 62, 63, 68, 73], "paramet": [4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73], "anyth": [4, 69], "method": [4, 58, 69, 72, 73, 74], "ensur": [4, 61], "fcm": 4, "correct": [4, 16, 17, 33, 37, 58], "local": [4, 66], "hash": 4, "e": [4, 7, 9, 11, 18, 20, 26, 32, 35, 52, 58, 61, 62, 64, 66, 68, 69, 70, 71, 73], "get": [4, 7, 9, 11, 55, 56, 58], "inconsist": [4, 20, 56, 69], "error": [4, 25, 58, 74], "modifi": [4, 55, 56, 57, 63, 73], "afterward": 4, "without": [4, 7, 9, 11, 13, 17, 18, 35, 40, 58, 64, 69, 73], "updat": [4, 16, 17, 33, 40, 58], "empti": [4, 23, 34, 60, 61, 62, 73], "small": 4, "workaround": 4, "pre": [4, 48, 49, 81], "datafram": [4, 63, 65], "column": [4, 46, 51, 52, 63, 68], "sampl": [4, 55, 56, 65, 69], "draw_sampl": 4, "num_sampl": 4, "500": [4, 63], "head": 4, "col": 4, "uniqu": [4, 34, 48, 73], "show": [4, 7, 9, 66], "collid": [4, 21, 23, 24, 26, 61], "collis": 4, "arrow": [4, 74], "00": [4, 5, 8, 12], "100": 4, "1330": 4, "01it": 4, "3": [4, 7, 8, 11, 15, 16, 17, 21, 27, 33, 40, 52, 56, 58, 62, 66, 68, 71, 73, 74], "row": [4, 46, 51, 52, 68, 69], "dtype": 4, "0x7fa482931310": 4, "markovian": [4, 16, 17, 33, 73], "suffici": [4, 16, 33, 73], "assumpt": [4, 16, 17, 33, 35, 73], "One": [4, 9, 11, 16, 33, 51, 52, 53, 69, 70, 73], "queri": [4, 7, 34, 58, 73], "list": [4, 15, 21, 22, 23, 32, 34, 36, 40, 41, 46, 47, 51, 52, 55, 56, 58, 63, 68, 69, 70, 73, 75, 81, 82], "predecessor": 4, "Or": 4, "children": [4, 16, 17, 33, 37, 69, 75], "successor": 4, "explor": [4, 21], "separ": [4, 17, 23, 26, 27, 28, 29, 34, 48, 60, 61, 62, 73, 81], "statement": [4, 69], "markov": [4, 15, 16, 17, 33, 69, 73, 78], "impli": [4, 16, 33, 52, 56, 73], "independ": [4, 58, 63, 64, 69], "d_separ": [4, 61], "semi": [4, 17, 73], "possibli": [4, 26, 27, 28, 29, 43, 55, 56, 58], "depict": [4, 34, 73], "just": [4, 7, 13, 14, 15, 16, 17, 33, 37, 65, 71, 73, 74], "set_nodes_as_latent_confound": [4, 9], "anymor": 4, "form": [4, 24, 25, 26, 64, 72, 73, 74], "cluster": 4, "compon": [4, 13, 18, 27, 56, 69], "short": 4, "c_compon": [4, 13, 69], "look": [4, 11, 70, 77], "m": [4, 18, 60, 61, 62, 81], "similarli": [4, 58, 60, 73], "m_separ": [4, 81], "sai": 4, "longer": 4, "bidirected_edge_nam": [4, 13, 14, 15, 17, 37, 59, 60, 61, 62, 73], "after": [4, 20, 32], "besid": [4, 32, 58], "relationship": [4, 13, 16, 17, 33, 69, 73], "same": [4, 7, 9, 11, 13, 16, 17, 20, 33, 40, 48, 58, 64, 69, 73], "commonli": 4, "constraint": [4, 16, 17, 18, 33, 73], "base": [4, 16, 17, 18, 20, 33, 55, 58, 70, 73], "seek": 4, "reconstruct": 4, "part": [4, 69], "next": [4, 11, 73], "section": 4, "briefli": 4, "overview": [4, 77], "usual": [4, 69, 70], "so": [4, 7, 9, 17, 58, 60, 69, 70, 73, 74], "dodiscov": [4, 66], "github": [4, 53, 70, 71], "why": [4, 71], "_": [4, 69], "pleas": [4, 58, 70, 74], "repo": 4, "stem": [4, 73], "relev": [4, 34, 58, 66, 69, 70, 73], "assum": [4, 40, 63, 65, 70, 73, 76], "uncertain": [4, 24, 26], "via": [4, 7, 16, 17, 33, 37, 40, 58, 71], "undirect": [4, 13, 14, 15, 16, 17, 33, 34, 37, 39, 43, 48, 58, 60, 61, 62, 73, 81], "ll": 4, "earlier": 4, "learnt": 4, "variant": 4, "pc": [4, 16, 33, 73], "let": [4, 9, 11], "add_edges_from": [4, 9, 11, 16, 17, 33, 40, 58], "undirected_edge_nam": [4, 9, 13, 14, 15, 16, 17, 33, 37, 60, 61, 62, 73], "unshield": [4, 32], "present": [4, 7, 13, 16, 17, 18, 48, 60, 61, 62, 68, 73], "origin": [4, 15, 40, 58], "orient_uncertain_edg": [4, 9, 16, 17, 33, 37], "allow": [4, 7, 14, 16, 17, 26, 33, 35, 48, 61, 64, 69, 73, 74], "complex": [4, 17, 73], "circl": [4, 15, 17, 32, 37, 48, 52, 67, 73, 74, 81], "o": [4, 17, 24, 32, 48, 52, 61, 62, 73, 74], "tail": [4, 17, 32, 48, 52, 73, 74], "arrowhead": [4, 16, 17, 32, 33, 37, 52, 73, 74], "possibl": [4, 13, 17, 19, 20, 30, 31, 56, 73], "fci": [4, 17, 32, 73], "circle_edge_nam": [4, 15, 17, 37, 73], "judea": [4, 14, 15], "pearl": [4, 14, 15], "reason": 4, "cambridg": 4, "univers": 4, "press": [4, 18, 26], "usa": 4, "2nd": 4, "edit": 4, "2009": 4, "isbn": [4, 26], "052189560x": 4, "peter": [4, 18, 26], "spirt": [4, 26], "clark": [4, 26], "glymour": [4, 26], "richard": [4, 26], "schein": [4, 26], "causat": [4, 26], "search": [4, 26, 27, 28, 29, 32, 61], "volum": [4, 18, 26], "81": [4, 26], "mit": [4, 26], "01": [4, 8, 26], "1993": [4, 14, 26], "978": [4, 26], "4612": [4, 26], "7650": [4, 26], "1007": [4, 26], "2748": [4, 26], "279": [4, 5], "58": 4, "intro_causal_graph": [4, 5, 9, 11], "03": [5, 18], "898": 5, "execut": [5, 8, 12, 66], "auto_examples_intro": 5, "file": [5, 8, 12, 50, 53, 66, 74], "introduct": [5, 13, 16, 17, 58, 61, 67], "graph": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 76, 78, 79, 81, 82], "57": 5, "7": [5, 11, 62, 66], "compris": [7, 58, 69], "user": [7, 14, 58, 66, 69, 70], "arbitrari": [7, 58], "represent": [7, 58, 61, 67, 70], "intern": [7, 13, 14, 16, 25, 33, 37, 70, 73], "semant": 7, "normal": [7, 55], "convert": [7, 18, 46, 48, 49, 50, 51, 52, 53, 55, 56, 59, 63, 75, 81], "its": [7, 34, 69, 73, 74, 75], "appropri": 7, "relat": [7, 9, 11, 13, 69, 70, 73], "matplotlib": [7, 66], "pyplot": 7, "plt": 7, "pg": 7, "kind": [7, 17, 58, 73], "creat": [7, 9, 11, 34, 41, 56, 58, 70, 73], "specifi": [7, 9, 16, 17, 33, 40, 56, 58, 59, 64, 70, 73], "associ": [7, 58, 69], "directed_g": 7, "bidirected_g": 7, "add_nodes_from": [7, 58], "edge_typ": [7, 16, 17, 33, 36, 40, 58, 70, 73], "iv": 7, "comput": [7, 20, 27, 28, 29, 32, 43, 55, 56, 58], "multipartite_layout": 7, "layer": [7, 35, 73, 75], "attribut": [7, 13, 14, 16, 17, 20, 33, 34, 36, 40, 55, 56, 57, 58, 67, 69, 73, 75], "po": [7, 9, 11, 67, 68], "spring_layout": [7, 9], "visual": [7, 11, 12, 13, 16, 17, 58, 67], "fig": 7, "ax": 7, "subplot": 7, "draw_networkx": 7, "get_graph": [7, 58, 70], "set_titl": 7, "instrument": 7, "tight_layout": 7, "block": 7, "is_direct": [7, 58], "multigraph": [7, 58], "is_multigraph": [7, 58], "bidirected_edg": [7, 13, 17, 37, 73], "0x7fa4b1b3ad30": 7, "0x7fa4b1b3ac70": 7, "similar": [7, 17, 58, 69, 70, 73], "default": [7, 11, 13, 14, 15, 16, 17, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73], "store": [7, 9, 11, 13, 16, 17, 46, 53, 58, 72, 73, 74], "insid": [7, 81], "assert": [7, 70], "order": [7, 9, 16, 17, 33, 34, 35, 37, 45, 46, 51, 52, 58, 63, 68, 73, 75], "len": [7, 58], "number_of_nod": [7, 58], "new": [7, 58, 70, 79], "has_nod": [7, 58], "add_nod": 7, "remov": [7, 20, 40, 56, 58, 60, 62, 73], "remove_nod": 7, "except": [7, 20, 40, 58], "per": [7, 64], "must": [7, 16, 17, 29, 32, 33, 35, 40, 46, 56, 58, 63, 67, 73], "when": [7, 16, 17, 20, 32, 33, 40, 58, 60, 64, 66, 69, 70, 79], "you": [7, 17, 56, 58, 63, 70, 71, 73, 74, 77], "well": [7, 58], "has_edg": [7, 44, 58, 70], "remove_edg": [7, 40, 58], "standard": [7, 74], "adj": [7, 58], "degre": [7, 58], "instead": [7, 58, 63], "moreov": [7, 55, 56, 58], "neighbor": [7, 58], "uni": 7, "counterpart": 7, "mani": [7, 58, 70], "connect": [7, 14, 16, 18, 22, 32, 33, 34, 37, 56, 58, 59, 61, 64, 73], "adjac": [7, 21, 23, 24, 26, 27, 32, 48, 49, 52, 58], "provid": [7, 40, 58, 69, 70, 72, 73, 74, 75, 76], "wai": [7, 17, 58, 73, 74], "iter": [7, 13, 16, 17, 33, 35, 37, 45, 58, 73], "through": [7, 58, 69], "item": [7, 58], "want": [7, 17, 58, 73], "dictionari": [7, 9, 11, 16, 17, 33, 40, 58, 68, 70, 75], "674": [7, 8], "45": [7, 8], "plot_mixed_edge_graph": [7, 8], "auto_examples_mixededg": 8, "mixededgegraph": [8, 13, 14, 16, 17, 18, 40, 46, 59, 65, 67, 70, 73, 81], "case": [9, 11, 17, 32, 44, 63, 73], "choos": [9, 11, 20], "place": [9, 11, 18, 55, 56, 59], "fix": [9, 56, 79, 80, 81, 82], "easili": 9, "posit": [9, 11, 67, 68, 81], "label": [9, 16, 17, 33, 40, 58, 59, 67, 81], "altern": 9, "own": [9, 74], "manual": [9, 53, 58], "softwar": [9, 11, 70], "dagitti": [9, 78], "arrai": [9, 11, 34, 46, 48, 49, 51, 52, 63, 68, 69, 73, 74, 81], "15471958": 9, "42925134": 9, "7990356": 9, "90151211": 9, "36916753": 9, "62354034": 9, "6548282": 9, "09580111": 9, "92997669": 9, "pag": [9, 11, 14, 15, 21, 24, 25, 26, 27, 30, 31, 32, 35, 46, 49, 51, 52, 53, 70, 73, 81], "cpdag": [9, 11, 17, 25, 33, 46, 49, 51, 52, 53, 73, 81], "dummi": [9, 11], "borrow": [9, 11], "pos_g": [9, 11], "k": [9, 40, 58], "inspect": [9, 11], "notic": [9, 11], "kei": [9, 11, 13, 14, 16, 17, 33, 34, 36, 40, 58, 67, 68, 69, 73, 75], "coordin": [9, 11, 67], "valu": [9, 11, 13, 14, 16, 17, 33, 34, 36, 40, 48, 49, 56, 58, 67, 69, 73, 74, 75], "dot_g": [9, 11], "dot_admg": 9, "dot_cpdag": 9, "dot_pag": 9, "engin": [9, 11, 70], "neato": [9, 11], "leverag": 9, "inform": [9, 14, 15, 49, 58, 64, 66, 67, 69], "document": [9, 38, 39, 52, 53, 58, 67, 69, 70, 72, 73], "doc": [9, 58, 67, 69], "327": [9, 12], "draw_and_compare_graphs_with_same_layout": [9, 12], "rather": [11, 17, 58, 73], "messi": 11, "output": [11, 48, 50, 63, 66, 73], "stationarytimeseriesdigraph": [11, 35, 41, 42, 64, 73], "timeseries_layout": 11, "max_lag": [11, 34, 35, 36, 38, 39, 40, 41, 42, 63, 64, 65, 73], "ts_edg": 11, "first": [11, 14, 32, 56, 58, 60, 61, 69, 71, 73], "default_g": 11, "nice": 11, "variable_ord": [11, 68], "scale": [11, 68], "33333333": 11, "598": [11, 12], "plot_timeseries_graph": [11, 12], "925": 12, "auto_examples_visu": 12, "incoming_directed_edg": [13, 14, 15, 16, 17, 33, 37, 73], "none": [13, 14, 15, 16, 17, 19, 20, 21, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 73], "incoming_bidirected_edg": [13, 14, 15, 17, 37, 73], "incoming_undirected_edg": [13, 14, 15, 16, 17, 33, 37, 73], "str": [13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 46, 47, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 67, 73], "attr": [13, 14, 15, 16, 17, 33, 34, 35, 36, 37, 38, 39, 40, 58, 67, 73], "constitut": [13, 69, 73], "did": [13, 73], "while": [13, 69, 70, 73], "input": [13, 14, 15, 16, 17, 33, 34, 55, 58, 72, 73, 75], "option": [13, 14, 15, 16, 17, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 46, 54, 55, 56, 58, 63, 64, 65, 67, 68, 73], "initi": [13, 14, 15, 16, 17, 33, 34, 58, 63, 65, 73], "accept": [13, 14, 15, 16, 17, 33, 73], "keyword": [13, 14, 16, 17, 33, 34, 36, 40, 58, 70, 73, 81], "subgraph": [13, 14, 15, 16, 17, 26, 33, 40, 58, 73], "underneath": [13, 16, 17, 73], "hood": [13, 16, 17, 73], "non": [13, 16, 21, 23, 24, 25, 35, 48, 58, 60, 61, 73, 75], "stand": [13, 16, 69, 73], "indic": [13, 15, 16, 17, 34, 48, 69, 73], "access": [13, 16, 17, 33, 40, 58, 69, 73], "sub_directed_graph": [13, 16, 17, 33, 37, 73], "Their": [13, 16, 17, 73], "format": [13, 16, 17, 34, 50, 53, 73, 74], "directed_edg": [13, 16, 17, 33, 37, 73], "sub_bidirected_graph": [13, 17, 37, 73], "sub_undirected_graph": [13, 16, 17, 33, 37, 73], "undirected_edg": [13, 16, 17, 33, 37, 73], "cycl": [13, 16, 18, 25, 64, 70, 73], "exist": [13, 14, 16, 23, 40, 55, 56, 58, 60, 62, 70, 73, 76], "due": [13, 16, 26, 69, 73], "beyond": [13, 73], "multipl": [13, 48, 58, 63, 73, 74, 75], "properti": [13, 16, 17, 33, 37, 58, 73], "map": [13, 14, 15, 16, 17, 33, 37, 48, 49, 58, 69, 70, 73, 74, 75], "edgeview": [13, 16, 17, 33, 37, 58], "trivial": [13, 32], "themself": 13, "comp": 13, "sub": [13, 16, 17, 18, 33, 37, 58], "augment": [14, 15, 19, 20, 60, 73, 75], "diagram": [14, 15, 56, 78], "intervent": [14, 15, 54, 69, 73, 81], "were": [14, 59], "introduc": 14, "model": [14, 15, 16, 17, 33, 35, 55, 56, 64, 69, 73, 78, 81], "hard": 14, "soft": [14, 15, 54], "explicit": [14, 69], "tbd": 14, "guid": [14, 69, 70], "exactli": [14, 15, 40], "index": [14, 15, 34, 46, 52, 70, 73], "number": [14, 15, 16, 17, 19, 20, 22, 33, 40, 56, 58, 61, 62, 63, 64, 65, 69, 73], "appli": [14, 15, 18, 54, 55, 69], "rightarrow": [14, 15, 48, 56], "regular": [14, 15, 56], "aspect": [14, 70], "proceed": [14, 15, 18], "49th": 14, "session": 14, "institut": 14, "page": [14, 70, 79], "399": 14, "401": 14, "incoming_circle_edg": [15, 17, 37, 73], "been": [15, 60], "both": [15, 17, 32, 40, 58, 69, 73, 75], "It": [15, 27, 58, 68, 69], "circular": [15, 17, 26, 35, 73], "f_node": 15, "handl": [15, 20, 48, 58, 78], "target": [15, 54, 57, 69, 73], "integ": [15, 58, 69], "sigma": 15, "special": [15, 17, 32, 69, 73], "known": [15, 70, 73], "domain": [15, 19, 20, 22, 56, 75], "environ": 15, "amin": 15, "jaber": 15, "murat": 15, "kocaoglu": 15, "karthikeyan": 15, "shanmugam": 15, "elia": 15, "bareinboim": 15, "character": [15, 73], "advanc": 15, "neural": 15, "process": [15, 63, 64, 65, 73], "system": [15, 66], "33": 15, "9551": 15, "9561": 15, "2020": [15, 18, 66], "2019": [15, 60, 61, 62], "fusion": 15, "nation": 15, "academi": 15, "113": 15, "27": 15, "7345": 15, "7352": 15, "juli": 15, "2016": 15, "publish": 15, "pna": 15, "content": 15, "1073": 15, "1510507113": 15, "partial": [16, 17, 18, 33, 70, 73], "uncertainti": [16, 17, 18, 33, 73], "b": [16, 33, 52, 60, 61, 62, 73], "implicit": [16, 17, 33, 73], "score": [16, 33, 73], "ge": [16, 33, 73], "approach": [16, 17, 33, 70, 73, 81], "suspect": [16, 33, 73], "directino": [16, 73], "u_of_edg": [16, 17, 33, 40, 44, 58], "v_of_edg": [16, 17, 33, 40, 44, 58], "automat": [16, 17, 33, 34, 40, 58, 73], "alreadi": [16, 17, 32, 33, 40, 58, 63, 69], "directli": [16, 17, 33, 35, 39, 40, 58, 73], "u_for_edg": [16, 17, 33, 40, 58], "v_for_edg": [16, 17, 33, 40, 58], "string": [16, 17, 33, 40, 58, 67, 69], "hashabl": [16, 17, 33, 40, 58], "assign": [16, 17, 33, 40, 51, 52, 58], "collect": [16, 17, 33, 40, 58], "ebunch_to_add": [16, 17, 33, 40, 58], "singl": [16, 17, 33, 36, 40, 58, 69, 70, 73], "twice": [16, 17, 33, 40, 58], "duplic": [16, 17, 33, 40, 58], "ebunch": [16, 17, 33, 40, 58], "take": [16, 17, 27, 33, 40, 55, 56, 58, 70, 72, 73, 75], "preced": [16, 17, 33, 40, 58], "union": [16, 17, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 44, 46, 47, 51, 52, 54, 56, 58, 62, 63], "int": [16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 51, 52, 54, 55, 56, 58, 63, 64, 65, 68, 73], "float": [16, 17, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 44, 46, 47, 51, 52, 54, 55, 56, 58, 63, 64, 68], "simpli": [16, 17, 33, 37, 64, 69], "point": [16, 17, 18, 33, 34, 35, 37, 40, 44, 59, 63, 64, 65, 68, 69, 73], "possible_children": [16, 17, 33, 37], "consid": [16, 17, 32, 33, 37, 40, 65, 69], "possible_par": [16, 17, 33, 37], "ancestr": [17, 18, 60, 61, 62, 70, 73], "term": [17, 73, 78], "essenti": [17, 73], "extend": [17, 73], "sub_circle_graph": [17, 37, 73], "circle_edg": [17, 37, 73], "exponenti": [17, 73], "increas": [17, 73], "occur": [17, 54, 63, 73], "main": [17, 58, 73], "complic": [17, 70, 73], "aris": [17, 73], "combin": [17, 73], "abov": [17, 63, 73], "certain": [17, 32, 70, 73], "anoth": [17, 73, 78], "matter": [17, 73], "loss": [17, 73], "deal": [17, 73], "flip": [17, 73], "discuss": [17, 73], "dictat": [17, 73], "sort": [17, 73], "There": [17, 53, 58, 73], "opposit": [17, 73], "qualifi": 17, "yield": [17, 58], "directed_edge_typ": 18, "bidirected_edge_typ": 18, "copi": [18, 40, 52, 58], "bool": [18, 21, 23, 24, 25, 32, 33, 34, 35, 37, 40, 41, 43, 44, 58, 60, 61, 66, 73], "acyclifi": 18, "cyclic": [18, 43, 81], "aci": 18, "whether": [18, 21, 24, 25, 32, 34, 44, 58, 73], "replac": [18, 58, 60], "strongli": 18, "fulli": [18, 59], "Then": [18, 48, 56, 71], "sc": 18, "made": 18, "jori": 18, "mooij": 18, "tom": 18, "claassen": 18, "jona": 18, "david": 18, "sontag": 18, "editor": 18, "36th": 18, "confer": 18, "uai": 18, "124": 18, "machin": 18, "research": [18, 70], "1159": 18, "1168": 18, "pmlr": 18, "06": 18, "aug": 18, "mlr": 18, "v124": 18, "mooij20a": 18, "html": [18, 58], "n_domain": [19, 20, 56], "augmentedgraph": [19, 20, 73, 81], "all_poss_snod": 20, "rais": [20, 25, 40, 58, 74], "invari": [20, 56, 75], "proce": 20, "domain_id": [20, 75], "ignor": [20, 23, 25, 40, 58], "warn": [20, 53, 58, 69], "max_path_length": [21, 26, 27, 28, 29, 32], "discrimin": 21, "least": 21, "maximum": [21, 22, 26, 27, 28, 29, 32, 34, 35, 36, 41, 64, 65, 73], "distanc": [21, 32], "check": [21, 23, 24, 25, 32, 34, 44, 53, 58, 60, 61, 64, 73], "1000": [21, 26, 27, 28, 29, 32, 63, 64, 65], "explored_nod": 21, "disc_path": 21, "found_discriminating_path": 21, "wa": [21, 25, 60, 62], "max_numb": 22, "id": [22, 75], "connected_pair": 22, "node_x": [23, 26, 27, 28, 29], "node_i": [23, 26, 27, 28, 29], "destin": 23, "otherwis": [23, 58, 62], "therefor": [23, 48, 64, 70, 74], "along": [23, 26], "henc": [23, 32], "node1": 24, "node2": 24, "node3": 24, "noncollid": 24, "is_noncollid": 24, "on_error": 25, "most": [25, 69, 70, 73], "compliant": [25, 73], "constrain": 25, "length": [26, 27, 28, 29, 46, 51, 52, 63, 69], "dsep": 26, "characterist": 26, "subpath": 26, "tripl": 26, "triangl": 26, "meet": 26, "fact": 26, "shield": 26, "end": [27, 28, 29, 46, 48, 52], "smaller": [27, 28, 29], "subset": [27, 28, 29, 56], "intersect": 27, "biconnect": 27, "restrict": [27, 28, 29], "stationarytimeseriespag": [28, 29, 73], "pdst": 28, "pds_t_set": [28, 29], "lag": [28, 29, 34, 35, 36, 40, 41, 44, 45, 63, 64, 65, 68, 69, 73], "being": [28, 29, 58, 69], "less": [28, 29, 40, 69], "max": [28, 29, 34, 40, 44, 45, 68, 73], "pdst_path": 29, "addit": [29, 32, 54, 55, 64, 66, 67, 70, 73, 75], "first_nod": 32, "second_nod": 32, "force_circl": 32, "forbid_nod": 32, "uncov": [32, 81], "potenti": 32, "explan": 32, "could": [32, 34, 73], "chang": [32, 56, 58, 60, 62, 69, 70, 73, 79, 80, 81, 82], "mean": [32, 55, 56, 58, 73, 75], "appear": [32, 58], "previou": [32, 63], "befor": 32, "travers": 32, "forbidden": 32, "immedi": 32, "within": [32, 58, 69, 70, 73], "third": 32, "come": 32, "r5": 32, "prevent": 32, "incoming_graph_data": [34, 35, 38, 39, 73], "check_time_direct": [34, 73], "repeat": [34, 73], "themselv": [34, 73], "cross": [34, 73], "product": [34, 73], "to_networkx_graph": [34, 73], "dict": [34, 58, 67, 68, 73], "2d": [34, 68, 69, 73], "spars": [34, 73], "matrix": [34, 48, 69, 73], "properli": [34, 73], "delet": [34, 56, 64, 73], "depend": [34, 63, 66, 73], "direction": [34, 35, 73], "enabl": [35, 73], "forward": [35, 73], "serv": [35, 73], "imbu": [38, 39, 40, 73, 75], "basetimeseriesgraph": [38, 39, 73], "add_homologous_edg": 40, "homolog": [40, 44, 73], "tsnode": [40, 44, 69, 73], "absolut": 40, "equal": [40, 63], "preserv": [40, 69], "as_view": [40, 58], "read": [40, 58, 69], "to_direct": [40, 58], "node_attr_dict_factori": [40, 58], "alia": [40, 58], "tsdict": 40, "node_dict_factori": [40, 58], "networkxerror": [40, 58], "remove_edges_from": [40, 58], "Will": [40, 58, 66], "fail": [40, 58, 62], "silent": [40, 58], "remove_homologous_edg": 40, "include_contemporan": 41, "create_us": [41, 42], "analog": 41, "_description_": 41, "func": [41, 75], "include_self_loop": 43, "summari": [43, 65], "timeseriesdigraph": [43, 73], "summary_g": 43, "_must_": 44, "timeseriesgraph": [45, 68, 73], "arr": [46, 48, 51, 52], "ndarrai": [46, 47, 63], "arr_idx": [46, 51, 52], "graph_typ": [46, 51, 53], "shape": [46, 48, 49, 51, 52, 63, 64, 65, 67, 69], "n_node": [46, 48, 49, 51, 52, 64, 65], "causal_graph": [48, 49], "instanc": [48, 49, 50, 53, 63, 69], "numpy_graph": [48, 49], "accord": [48, 49], "ijth": 48, "entri": [48, 69], "zero": 48, "symmetr": [48, 69], "jith": 48, "20": 48, "edge_to_value_map": [48, 51], "pcalg": [48, 49, 52, 78, 81], "packag": [48, 52, 70, 78], "numer": [48, 58, 70], "treat": [48, 58], "leftrightarrow": 48, "element": [48, 73, 78], "21": [48, 66, 81], "issu": [48, 70, 74], "nodelist": 48, "bow_graph": 48, "numpy_to_graph": 48, "pcalg_to_graph": 49, "filenam": [50, 53], "tetrad": [50, 53, 78, 81], "text": [50, 53, 55, 74], "write": [50, 66], "enumer": [51, 52, 74], "amat_typ": 52, "r": [52, 60, 62, 78], "pcalgpagendpoint": 52, "amattyp": 52, "cran": 52, "project": [52, 71, 81, 82], "web": 52, "pdf": 52, "conveni": 52, "amat": 52, "No": [52, 73], "edgemark": 52, "oppos": 52, "matric": 52, "cmu": 53, "phil": 53, "io": [53, 69, 79], "guarante": 53, "your": [53, 70], "adher": [53, 69], "random_st": [54, 55, 56, 63, 64, 65], "interven": 54, "simultanen": 54, "perturb": 54, "gaussian_noise_funct": [54, 55, 56, 75], "That": [54, 58], "nois": [54, 75], "node_mean_lim": [55, 56], "node_std_lim": [55, 56], "edge_funct": [55, 56], "callabl": [55, 56, 64, 69], "edge_weight_lim": [55, 56], "parametr": 55, "uniformli": [55, 56, 75], "limit": 55, "weight": [55, 56, 58, 64, 74, 75], "fashion": [55, 68, 70], "x_i": 55, "sum_": 55, "w_j": 55, "f_j": 55, "x_j": 55, "epsilon_i": 55, "sim": 55, "mu_i": 55, "sigma_i": 55, "lower": [55, 56], "upper": [55, 56, 74], "bound": [55, 56], "std": [55, 56, 75], "iid": [55, 56], "transform": [55, 56], "nonlinear": [55, 56], "lambda": [55, 56], "ident": [55, 56, 58], "parent_funct": [55, 56, 75], "linear_gaussian": [55, 56], "n_nodes_with_s_nod": 56, "n_invariances_to_tri": 56, "multi": 56, "underli": [56, 63, 64, 73, 76], "particular": 56, "across": [56, 58, 64, 69, 73], "split": 56, "try": [56, 69], "make_graph_linear_gaussian": [56, 81], "determin": 56, "n_": 56, "randomli": [56, 75], "remain": 56, "At": 56, "keep": [56, 68], "g1": 57, "g2": 57, "link": [58, 69, 79], "experiment": [58, 69, 78], "featur": [58, 69, 70, 79, 80, 81, 82], "meant": 58, "caution": [58, 70], "multidigraph": 58, "mention": 58, "below": [58, 69, 70], "match": 58, "entir": 58, "add_edge_typ": [58, 70], "edge_subgraph": 58, "cach": [58, 69], "few": [58, 73], "wherea": 58, "__contains__": 58, "__getitem__": 58, "__iter__": 58, "__len__": 58, "hold": 58, "itself": [58, 69], "behav": 58, "idiom": 58, "loop": 58, "nbr": 58, "datadict": 58, "adjacencyview": 58, "clear_edge_typ": 58, "clear": 58, "shallow": 58, "share": [58, 69], "deepcopi": 58, "docstr": [58, 69], "peopl": 58, "might": [58, 70], "nbunch": 58, "degreeview": 58, "report": [58, 66], "incid": 58, "sum": 58, "deg_dict": 58, "request": [58, 70], "ddict": 58, "quietli": 58, "out": [58, 68, 70], "get_edge_data": 58, "doesn": 58, "edge_dict": 58, "graph_attr_dict_factori": 58, "keyerror": 58, "edge_ind": 58, "identifi": [58, 69], "technic": [58, 63, 69], "control": 58, "nbunch_it": 58, "membership": 58, "niter": 58, "sequenc": 58, "number_of_edge_typ": 58, "number_of_edg": [58, 70], "count": 58, "nedg": 58, "size": 58, "todo": [58, 75], "expect": [58, 70], "subclass": 58, "onc": 58, "attempt": 58, "contrast": 58, "deep": 58, "librari": [58, 69, 79], "transfer": 58, "to_undirect": 58, "choic": [58, 73], "desir": 58, "unless": [58, 73], "uc_label": 59, "g_copi": 59, "minim": [60, 62, 69, 81], "testminsep": 60, "line": [60, 62], "6": [60, 66, 81], "neq": 60, "r_x": 60, "r_y": 60, "deem": [60, 62], "necessari": [60, 62], "moral": 60, "caus": 60, "candid": 60, "later": [60, 62], "largest": [60, 62], "vertic": [60, 61, 62], "is_minimal_m_sep": 60, "els": 60, "van": [60, 61, 62], "der": [60, 61, 62], "zander": [60, 61, 62], "li\u015bkiewicz": [60, 61, 62], "textor": [60, 61, 62], "adjust": [60, 61, 62], "criteria": [60, 61, 62], "framework": [60, 61, 62], "vol": [60, 61, 62], "270": [60, 61, 62], "pp": [60, 61, 62], "2018": [60, 61, 62], "12": [60, 61, 62], "006": [60, 61, 62], "testsep": [61, 62], "further": 61, "breadth": 61, "runtim": [61, 62], "boolean": 61, "findsep": 62, "math": 62, "findminsep": 62, "anterior": 62, "var_arr": [63, 65], "n_time": [63, 64, 65], "n_realiz": [63, 64], "var_nam": 63, "var": [63, 64, 65], "arraylik": [63, 64, 65, 68], "n_variabl": [63, 64], "vector": [63, 69], "auto": 63, "regress": 63, "3rd": 63, "dimens": 63, "autoregress": [63, 65], "realiz": [63, 64], "state": [63, 64], "node_nam": 63, "multivari": 63, "p_time_self": 64, "p_time_var": 64, "p_contemporan": 64, "weight_dist": 64, "_continuous_distn": 64, "norm_gen": 64, "probabl": [64, 69], "contemporan": 64, "instantan": 64, "simulate_data_from_var": 64, "var_model": 64, "never": 64, "worri": 64, "about": [64, 70], "situat": 64, "instantaen": 64, "network": 64, "x_df": 65, "dataset": [65, 69, 75], "right": [65, 68], "fid": 66, "show_path": 66, "debug": 66, "help": 66, "triag": 66, "bug": 66, "sy": 66, "stdout": 66, "develop": [66, 70, 81, 82], "submit": 66, "platform": 66, "linux": 66, "15": 66, "1067": 66, "aw": 66, "x86_64": 66, "glibc2": 66, "feb": 66, "37": 66, "gcc": 66, "usr": 66, "bin": 66, "cpu": 66, "36": 66, "core": [66, 78], "68": [66, 81], "gb": 66, "openbla": 66, "17": [66, 81], "thread": 66, "sklearn": 66, "backend": 66, "macosx": 66, "Not": 66, "version": [66, 69, 70, 73, 79], "info": 66, "joblib": [66, 69], "squar": 67, "rankdir": 67, "plaintext": 67, "dot": 67, "languag": 67, "center": 68, "aspect_ratio": 68, "3333333333333333": 68, "left": 68, "top": [68, 70], "bottom": 68, "factor": 68, "plot": 68, "around": [68, 70], "ratio": 68, "width": 68, "height": 68, "lai": 68, "histor": 68, "hope": 69, "tacit": 69, "convent": 69, "contributor": [69, 70], "aim": 69, "describ": 69, "redund": 69, "begin": 69, "didn": 69, "elsewher": 69, "1d": 69, "whose": 69, "often": 69, "public": [69, 70], "larg": [69, 74], "formal": 69, "maintain": [69, 70, 74], "backward": 69, "compat": 69, "privat": 69, "assur": 69, "stabl": [69, 70], "__call__": 69, "embed": 69, "etc": [69, 70], "__doc__": 69, "pep257": 69, "numpydoc": 69, "give": [69, 77], "basic": [69, 70], "doctest": 69, "directori": 69, "exemplifi": 69, "referenc": 69, "sometim": 69, "built": 69, "alongsid": 69, "descript": [69, 70], "tool": [69, 70], "usabl": 69, "subject": 69, "futur": 69, "deprec": [69, 70], "polici": 69, "letter": 69, "readthedoc": 69, "facilit": 69, "parallel": 69, "toward": 69, "effici": [69, 79, 80, 81, 82], "delai": 69, "n_featur": 69, "n_sampl": 69, "shorthand": 69, "distinctli": 69, "noun": 69, "langl": 69, "rangl": 69, "off": [69, 73], "sigma_map": 69, "symmetric_difference_map": 69, "composit": 70, "encourag": 70, "pull": 70, "contribut": [70, 74, 81, 82], "exhaust": 70, "veri": 70, "earli": 70, "best": 70, "goal": 70, "converg": 70, "releas": 70, "trait": 70, "major": [70, 73, 79, 80, 81, 82], "mark": 70, "alpha": [70, 78], "drastic": 70, "robust": 70, "commun": [70, 74], "low": 70, "curv": 70, "transit": 70, "lie": 70, "hand": 70, "summar": 70, "implicitli": 70, "focus": 70, "design": 70, "lightweight": 70, "sole": 70, "instal": 70, "histori": 70, "yourself": 70, "interest": 70, "solv": 70, "improv": [70, 81, 82], "overal": 70, "hesit": 70, "reach": 70, "who": [70, 81, 82], "codebas": 70, "pip": 71, "pypi": 71, "poetri": 71, "recommend": 71, "repositori": 71, "git": 71, "cd": 71, "heavili": 73, "reli": 73, "account": 73, "cover": 73, "concept": [73, 77, 78], "glossari": [73, 78], "ye": 73, "augmentedpag": 73, "analag": 73, "stationarytimeseriesgraph": 73, "stationarytimeseriesmixededgegraph": [73, 81], "stationarytimeseriescpdag": 73, "sure": 73, "past": 73, "moment": 73, "embodi": 73, "stationar": 73, "propag": 73, "turn": 73, "set_stationar": 73, "modif": 73, "subtl": 73, "impact": 73, "mec": 73, "timeseriesmixededgegraph": 73, "light": 74, "quit": 74, "de": 74, "facto": 74, "offer": 74, "interpret": 74, "triangular": 74, "fill": 74, "against": 74, "plan": 75, "yet": 75, "drop": 75, "varialbl": 75, "roadmap": 75, "simulatan": 75, "nest": 75, "citat": 75, "FOR": 75, "sel": 75, "ones": 75, "extra": 75, "invariant_domain": 75, "domain_gaussian_noise_funct": 75, "faith": 76, "abl": 77, "everyth": 77, "multidomain": [78, 81], "simul": 78, "export": [78, 81], "java": 78, "enhanc": [79, 80, 81, 82], "tip": 79, "subscrib": 79, "notifi": 79, "aryan": 81, "roi": 81, "71": 81, "minimal_m_separ": 81, "bf": 81, "jaron": 81, "lee": 81, "53": 81, "balltre": 81, "48": 81, "46": 81, "uncovered_pd_path": 81, "42": 81, "adam": [81, 82], "li": [81, 82], "possible_ancestor": 81, "possible_descend": 81, "discriminating_path": 81, "pds_path": 81, "wrapper": 81, "acyclif": 81, "julien": 81, "siebert": 81, "26": 81, "29": 81, "49": 81, "go": 81, "causallearn": 81, "51": 81, "60": 81, "anank": 81, "63": 81, "commit": 81, "hook": 81, "75": 81, "make_graph_multidomain": 81, "77": 81, "78": 81, "thank": [81, 82], "everyon": [81, 82], "mainten": [81, 82], "incept": [81, 82]}, "objects": {"": [[0, 0, 0, "-", "pywhy_graphs"]], "pywhy_graphs": [[13, 1, 1, "", "ADMG"], [14, 1, 1, "", "AugmentedGraph"], [15, 1, 1, "", "AugmentedPAG"], [16, 1, 1, "", "CPDAG"], [17, 1, 1, "", "PAG"], [72, 0, 0, "-", "algorithms"], [73, 0, 0, "-", "classes"], [74, 0, 0, "-", "export"], [75, 0, 0, "-", "functional"], [76, 0, 0, "-", "simulate"], [66, 4, 1, "", "sys_info"]], "pywhy_graphs.ADMG": [[13, 2, 1, "", "bidirected_edge_name"], [13, 2, 1, "", "bidirected_edges"], [13, 3, 1, "", "c_components"], [13, 2, 1, "", "directed_edge_name"], [13, 2, 1, "", "directed_edges"], [13, 3, 1, "", "sub_bidirected_graph"], [13, 3, 1, "", "sub_directed_graph"], [13, 3, 1, "", "sub_undirected_graph"], [13, 2, 1, "", "undirected_edge_name"], [13, 2, 1, "", "undirected_edges"]], "pywhy_graphs.CPDAG": [[16, 3, 1, "", "add_edge"], [16, 3, 1, "", "add_edges_from"], [16, 2, 1, "", "directed_edge_name"], [16, 2, 1, "", "directed_edges"], [16, 3, 1, "", "orient_uncertain_edge"], [16, 3, 1, "", "possible_children"], [16, 3, 1, "", "possible_parents"], [16, 3, 1, "", "sub_directed_graph"], [16, 3, 1, "", "sub_undirected_graph"], [16, 2, 1, "", "undirected_edge_name"], [16, 2, 1, "", "undirected_edges"]], "pywhy_graphs.PAG": [[17, 3, 1, "", "add_edge"], [17, 3, 1, "", "add_edges_from"], [17, 3, 1, "", "children"], [17, 2, 1, "", "circle_edge_name"], [17, 2, 1, "", "circle_edges"], [17, 3, 1, "", "orient_uncertain_edge"], [17, 3, 1, "", "parents"], [17, 3, 1, "", "possible_children"], [17, 3, 1, "", "possible_parents"], [17, 3, 1, "", "sub_circle_graph"]], "pywhy_graphs.algorithms": [[18, 4, 1, "", "acyclification"], [19, 4, 1, "", "add_all_snode_combinations"], [20, 4, 1, "", "compute_invariant_domains_per_node"], [21, 4, 1, "", "discriminating_path"], [22, 4, 1, "", "find_connected_pairs"], [23, 4, 1, "", "inducing_path"], [24, 4, 1, "", "is_definite_noncollider"], [25, 4, 1, "", "is_valid_mec_graph"], [26, 4, 1, "", "pds"], [27, 4, 1, "", "pds_path"], [28, 4, 1, "", "pds_t"], [29, 4, 1, "", "pds_t_path"], [30, 4, 1, "", "possible_ancestors"], [31, 4, 1, "", "possible_descendants"], [32, 4, 1, "", "uncovered_pd_path"]], "pywhy_graphs.classes": [[73, 0, 0, "-", "timeseries"]], "pywhy_graphs.classes.timeseries": [[33, 1, 1, "", "StationaryTimeSeriesCPDAG"], [34, 1, 1, "", "StationaryTimeSeriesDiGraph"], [35, 1, 1, "", "StationaryTimeSeriesGraph"], [36, 1, 1, "", "StationaryTimeSeriesMixedEdgeGraph"], [37, 1, 1, "", "StationaryTimeSeriesPAG"], [38, 1, 1, "", "TimeSeriesDiGraph"], [39, 1, 1, "", "TimeSeriesGraph"], [40, 1, 1, "", "TimeSeriesMixedEdgeGraph"], [41, 4, 1, "", "complete_ts_graph"], [42, 4, 1, "", "empty_ts_graph"], [43, 4, 1, "", "get_summary_graph"], [44, 4, 1, "", "has_homologous_edges"], [45, 4, 1, "", "nodes_in_time_order"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[33, 3, 1, "", "add_edge"], [33, 3, 1, "", "add_edges_from"], [33, 2, 1, "", "directed_edge_name"], [33, 2, 1, "", "directed_edges"], [33, 3, 1, "", "orient_uncertain_edge"], [33, 3, 1, "", "possible_children"], [33, 3, 1, "", "possible_parents"], [33, 3, 1, "", "sub_directed_graph"], [33, 3, 1, "", "sub_undirected_graph"], [33, 2, 1, "", "undirected_edge_name"], [33, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[37, 2, 1, "", "bidirected_edge_name"], [37, 2, 1, "", "bidirected_edges"], [37, 2, 1, "", "circle_edge_name"], [37, 2, 1, "", "circle_edges"], [37, 2, 1, "", "directed_edge_name"], [37, 2, 1, "", "directed_edges"], [37, 3, 1, "", "orient_uncertain_edge"], [37, 3, 1, "", "possible_children"], [37, 3, 1, "", "possible_parents"], [37, 3, 1, "", "sub_bidirected_graph"], [37, 3, 1, "", "sub_circle_graph"], [37, 3, 1, "", "sub_directed_graph"], [37, 3, 1, "", "sub_undirected_graph"], [37, 2, 1, "", "undirected_edge_name"], [37, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[40, 3, 1, "", "add_edge"], [40, 3, 1, "", "add_edges_from"], [40, 3, 1, "", "add_homologous_edges"], [40, 3, 1, "", "copy"], [40, 5, 1, "", "node_attr_dict_factory"], [40, 5, 1, "", "node_dict_factory"], [40, 3, 1, "", "remove_edge"], [40, 3, 1, "", "remove_edges_from"], [40, 3, 1, "", "remove_homologous_edges"]], "pywhy_graphs.export": [[46, 4, 1, "", "clearn_to_graph"], [47, 4, 1, "", "graph_to_clearn"], [48, 4, 1, "", "graph_to_numpy"], [49, 4, 1, "", "graph_to_pcalg"], [50, 4, 1, "", "graph_to_tetrad"], [51, 4, 1, "", "numpy_to_graph"], [52, 4, 1, "", "pcalg_to_graph"], [53, 4, 1, "", "tetrad_to_graph"]], "pywhy_graphs.functional": [[54, 4, 1, "", "apply_linear_soft_intervention"], [55, 4, 1, "", "make_graph_linear_gaussian"], [56, 4, 1, "", "make_graph_multidomain"], [57, 4, 1, "", "set_node_attributes_with_G"]], "pywhy_graphs.networkx": [[58, 1, 1, "", "MixedEdgeGraph"], [59, 4, 1, "", "bidirected_to_unobserved_confounder"], [60, 4, 1, "", "is_minimal_m_separator"], [61, 4, 1, "", "m_separated"], [62, 4, 1, "", "minimal_m_separator"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[58, 3, 1, "", "__contains__"], [58, 3, 1, "", "__getitem__"], [58, 3, 1, "", "__iter__"], [58, 3, 1, "", "__len__"], [58, 3, 1, "", "add_edge"], [58, 3, 1, "", "add_edges_from"], [58, 2, 1, "", "adj"], [58, 3, 1, "", "clear_edge_types"], [58, 3, 1, "", "copy"], [58, 3, 1, "", "degree"], [58, 3, 1, "", "edges"], [58, 3, 1, "", "get_edge_data"], [58, 3, 1, "", "get_graphs"], [58, 5, 1, "", "graph_attr_dict_factory"], [58, 3, 1, "", "has_edge"], [58, 3, 1, "", "has_node"], [58, 3, 1, "", "is_directed"], [58, 3, 1, "", "is_multigraph"], [58, 2, 1, "", "name"], [58, 3, 1, "", "nbunch_iter"], [58, 5, 1, "", "node_attr_dict_factory"], [58, 5, 1, "", "node_dict_factory"], [58, 3, 1, "", "number_of_edge_types"], [58, 3, 1, "", "number_of_edges"], [58, 3, 1, "", "number_of_nodes"], [58, 3, 1, "", "order"], [58, 3, 1, "", "remove_edge"], [58, 3, 1, "", "remove_edges_from"], [58, 3, 1, "", "size"], [58, 3, 1, "", "subgraph"], [58, 3, 1, "", "to_directed"], [58, 3, 1, "", "to_undirected"], [58, 3, 1, "", "update"]], "pywhy_graphs.simulate": [[63, 4, 1, "", "simulate_data_from_var"], [64, 4, 1, "", "simulate_linear_var_process"], [65, 4, 1, "", "simulate_var_process_from_summary_graph"]], "pywhy_graphs.viz": [[67, 4, 1, "", "draw"], [68, 4, 1, "", "timeseries_layout"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 69, 70], "pywhy_graph": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 76], "class": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73], "causal": [0, 1, 2, 4, 10, 72, 73, 74, 75, 76, 77], "graph": [0, 1, 2, 3, 4, 7, 9, 10, 11, 70, 72, 73, 74, 75, 77], "algorithm": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 72], "mix": [0, 4, 7], "edg": [0, 7], "convers": 0, "between": [0, 3], "other": 0, "packag": [0, 74], "": [0, 81, 82], "networkx": [0, 1, 6, 58, 59, 60, 61, 62, 70, 77], "experiment": [0, 74], "function": [0, 54, 55, 56, 57, 75], "timeseri": [0, 11, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 73], "simul": [0, 4, 63, 64, 65, 76], "graphic": [0, 75, 76], "model": [0, 4, 75, 76], "convert": 0, "visual": [0, 1, 9, 10, 77], "util": 0, "debug": 0, "exampl": [1, 3, 6, 13, 16, 17, 38, 58, 61, 67, 68, 77], "galleri": [1, 77], "mixededgegraph": [1, 6, 7, 58, 77], "introduct": [1, 2, 3, 4, 77], "an": [3, 4], "induc": 3, "path": 3, "how": [3, 4, 70, 77], "find": 3, "them": [3, 4], "construct": [3, 7], "adjac": 3, "node": [3, 7], "trivial": 3, "have": 3, "non": 3, "The": 3, "role": 3, "collid": 3, "refer": [3, 4], "us": [4, 13, 16, 17, 38, 58, 61, 67, 68, 73, 77], "structur": 4, "some": 4, "data": 4, "direct": 4, "ayclic": 4, "dag": 4, "also": 4, "known": 4, "bayesian": 4, "network": 4, "acycl": [4, 72], "admg": [4, 13], "complet": 4, "partial": 4, "cpdag": [4, 16], "ancestr": 4, "pag": [4, 17], "comput": [5, 8, 12], "time": [5, 8, 12, 72, 73], "differ": 7, "type": [7, 73], "properti": 7, "oper": 7, "kei": 7, "draw": [9, 11, 67], "set": [9, 11], "layout": [9, 11], "comparison": 9, "augmentedgraph": 14, "augmentedpag": 15, "acyclif": 18, "add_all_snode_combin": 19, "compute_invariant_domains_per_nod": 20, "discriminating_path": 21, "find_connected_pair": 22, "inducing_path": 23, "is_definite_noncollid": 24, "is_valid_mec_graph": 25, "pd": 26, "pds_path": 27, "pds_t": 28, "pds_t_path": 29, "possible_ancestor": 30, "possible_descend": 31, "uncovered_pd_path": 32, "stationarytimeseriescpdag": 33, "stationarytimeseriesdigraph": 34, "stationarytimeseriesgraph": 35, "stationarytimeseriesmixededgegraph": 36, "stationarytimeseriespag": 37, "timeseriesdigraph": 38, "timeseriesgraph": 39, "timeseriesmixededgegraph": 40, "complete_ts_graph": 41, "empty_ts_graph": 42, "get_summary_graph": 43, "has_homologous_edg": 44, "nodes_in_time_ord": 45, "export": [46, 47, 48, 49, 50, 51, 52, 53, 74], "clearn_to_graph": 46, "graph_to_clearn": 47, "graph_to_numpi": 48, "graph_to_pcalg": 49, "graph_to_tetrad": 50, "numpy_to_graph": 51, "pcalg_to_graph": 52, "tetrad_to_graph": 53, "apply_linear_soft_intervent": 54, "make_graph_linear_gaussian": 55, "make_graph_multidomain": 56, "set_node_attributes_with_g": 57, "bidirected_to_unobserved_confound": 59, "is_minimal_m_separ": 60, "m_separ": 61, "minimal_m_separ": 62, "simulate_data_from_var": 63, "simulate_linear_var_process": 64, "simulate_var_process_from_summary_graph": 65, "sys_info": 66, "viz": [67, 68], "timeseries_layout": 68, "glossari": 69, "common": 69, "term": 69, "element": 69, "gener": 69, "concept": 69, "pywhi": [70, 72, 73, 74, 77], "stabil": 70, "do": 70, "we": 70, "compar": 70, "content": 70, "get": 70, "start": 70, "team": 70, "indic": 70, "tabl": 70, "instal": 71, "core": 72, "markov": 72, "equival": 72, "seri": [72, 73], "handl": 72, "which": 73, "should": 73, "i": 73, "alpha": 73, "import": 74, "anoth": 74, "learn": 74, "numpi": 74, "graphviz": 74, "dagitti": 74, "pcalg": 74, "from": 74, "r": 74, "tetrad": 74, "java": 74, "linear": 75, "multidomain": 75, "select": 75, "diagram": 75, "modul": 76, "tutori": 77, "user": 78, "guid": 78, "releas": 79, "histori": 79, "what": [81, 82], "new": [81, 82], "version": [81, 82], "0": [81, 82], "1": 81, "changelog": [81, 82], "code": [81, 82], "document": [81, 82], "contributor": [81, 82], "2": 82}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "pywhy_graphs.classes: Causal graph classes": [[0, "pywhy-graphs-classes-causal-graph-classes"]], "pywhy_graphs.algorithms: Algorithms for Mixed-Edge Graphs": [[0, "pywhy-graphs-algorithms-algorithms-for-mixed-edge-graphs"]], "Conversions between other package\u2019s causal graphs": [[0, "conversions-between-other-package-s-causal-graphs"]], "NetworkX Experimental Functionality": [[0, "networkx-experimental-functionality"]], "pywhy_graphs.classes.timeseries: Timeseries": [[0, "pywhy-graphs-classes-timeseries-timeseries"]], "pywhy_graphs.simulate: Causal graphical model simulations": [[0, "pywhy-graphs-simulate-causal-graphical-model-simulations"], [76, "pywhy-graphs-simulate-causal-graphical-model-simulations"]], "Converting graphs to functional models": [[0, "converting-graphs-to-functional-models"]], "Visualization of causal graphs": [[0, "visualization-of-causal-graphs"], [1, "visualization-of-causal-graphs"], [10, "visualization-of-causal-graphs"], [77, "visualization-of-causal-graphs"]], "Utilities for debugging": [[0, "utilities-for-debugging"]], "Simulation": [[0, "simulation"]], "Examples Gallery": [[1, "examples-gallery"], [77, "examples-gallery"]], "Networkx MixedEdgeGraph Examples": [[1, "networkx-mixededgegraph-examples"], [6, "networkx-mixededgegraph-examples"], [77, "networkx-mixededgegraph-examples"]], "Introduction to causal graphs": [[1, "introduction-to-causal-graphs"], [2, "introduction-to-causal-graphs"], [77, "introduction-to-causal-graphs"]], "An introduction to Inducing Paths and how to find them": [[3, "an-introduction-to-inducing-paths-and-how-to-find-them"]], "Construct an example graph": [[3, "construct-an-example-graph"]], "Adjacent nodes trivially have an inducing path": [[3, "adjacent-nodes-trivially-have-an-inducing-path"]], "Inducing paths between non-adjacent nodes": [[3, "inducing-paths-between-non-adjacent-nodes"]], "The role of colliders": [[3, "the-role-of-colliders"]], "References": [[3, "references"], [4, "references"]], "An introduction to causal graphs and how to use them": [[4, "an-introduction-to-causal-graphs-and-how-to-use-them"]], "Structural Causal Models: Simulating some data": [[4, "structural-causal-models-simulating-some-data"]], "Causal Directed Ayclic Graphs (DAG): Also known as Causal Bayesian Networks": [[4, "causal-directed-ayclic-graphs-dag-also-known-as-causal-bayesian-networks"]], "Acyclic Directed Mixed Graphs (ADMG)": [[4, "acyclic-directed-mixed-graphs-admg"]], "Completed Partially Directed Ayclic Graph (CPDAG)": [[4, "completed-partially-directed-ayclic-graph-cpdag"]], "Partial Ancestral Graph (PAG)": [[4, "partial-ancestral-graph-pag"]], "Computation times": [[5, "computation-times"], [8, "computation-times"], [12, "computation-times"]], "MixedEdgeGraph - Graph with different types of edges": [[7, "mixededgegraph-graph-with-different-types-of-edges"]], "Construct a MixedEdgeGraph": [[7, "construct-a-mixededgegraph"]], "Mixed Edge Graph Properties": [[7, "mixed-edge-graph-properties"]], "Mixed Edge Graph Operations on Nodes": [[7, "mixed-edge-graph-operations-on-nodes"]], "Mixed Edge Graph Operations on Edges": [[7, "mixed-edge-graph-operations-on-edges"]], "Mixed Edge Graph Key Differences": [[7, "mixed-edge-graph-key-differences"]], "Drawing graphs and setting their layout for visual comparison": [[9, "drawing-graphs-and-setting-their-layout-for-visual-comparison"]], "Drawing timeseries graphs and setting their layout": [[11, "drawing-timeseries-graphs-and-setting-their-layout"]], "pywhy_graphs.ADMG": [[13, "pywhy-graphs-admg"]], "Examples using pywhy_graphs.ADMG": [[13, "examples-using-pywhy-graphs-admg"]], "pywhy_graphs.AugmentedGraph": [[14, "pywhy-graphs-augmentedgraph"]], "pywhy_graphs.AugmentedPAG": [[15, "pywhy-graphs-augmentedpag"]], "pywhy_graphs.CPDAG": [[16, "pywhy-graphs-cpdag"]], "Examples using pywhy_graphs.CPDAG": [[16, "examples-using-pywhy-graphs-cpdag"]], "pywhy_graphs.PAG": [[17, "pywhy-graphs-pag"]], "Examples using pywhy_graphs.PAG": [[17, "examples-using-pywhy-graphs-pag"]], "pywhy_graphs.algorithms.acyclification": [[18, "pywhy-graphs-algorithms-acyclification"]], "pywhy_graphs.algorithms.add_all_snode_combinations": [[19, "pywhy-graphs-algorithms-add-all-snode-combinations"]], "pywhy_graphs.algorithms.compute_invariant_domains_per_node": [[20, "pywhy-graphs-algorithms-compute-invariant-domains-per-node"]], "pywhy_graphs.algorithms.discriminating_path": [[21, "pywhy-graphs-algorithms-discriminating-path"]], "pywhy_graphs.algorithms.find_connected_pairs": [[22, "pywhy-graphs-algorithms-find-connected-pairs"]], "pywhy_graphs.algorithms.inducing_path": [[23, "pywhy-graphs-algorithms-inducing-path"]], "pywhy_graphs.algorithms.is_definite_noncollider": [[24, "pywhy-graphs-algorithms-is-definite-noncollider"]], "pywhy_graphs.algorithms.is_valid_mec_graph": [[25, "pywhy-graphs-algorithms-is-valid-mec-graph"]], "pywhy_graphs.algorithms.pds": [[26, "pywhy-graphs-algorithms-pds"]], "pywhy_graphs.algorithms.pds_path": [[27, "pywhy-graphs-algorithms-pds-path"]], "pywhy_graphs.algorithms.pds_t": [[28, "pywhy-graphs-algorithms-pds-t"]], "pywhy_graphs.algorithms.pds_t_path": [[29, "pywhy-graphs-algorithms-pds-t-path"]], "pywhy_graphs.algorithms.possible_ancestors": [[30, "pywhy-graphs-algorithms-possible-ancestors"]], "pywhy_graphs.algorithms.possible_descendants": [[31, "pywhy-graphs-algorithms-possible-descendants"]], "pywhy_graphs.algorithms.uncovered_pd_path": [[32, "pywhy-graphs-algorithms-uncovered-pd-path"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[33, "pywhy-graphs-classes-timeseries-stationarytimeseriescpdag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph": [[34, "pywhy-graphs-classes-timeseries-stationarytimeseriesdigraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph": [[35, "pywhy-graphs-classes-timeseries-stationarytimeseriesgraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph": [[36, "pywhy-graphs-classes-timeseries-stationarytimeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[37, "pywhy-graphs-classes-timeseries-stationarytimeseriespag"]], "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[38, "pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "Examples using pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[38, "examples-using-pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesGraph": [[39, "pywhy-graphs-classes-timeseries-timeseriesgraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[40, "pywhy-graphs-classes-timeseries-timeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.complete_ts_graph": [[41, "pywhy-graphs-classes-timeseries-complete-ts-graph"]], "pywhy_graphs.classes.timeseries.empty_ts_graph": [[42, "pywhy-graphs-classes-timeseries-empty-ts-graph"]], "pywhy_graphs.classes.timeseries.get_summary_graph": [[43, "pywhy-graphs-classes-timeseries-get-summary-graph"]], "pywhy_graphs.classes.timeseries.has_homologous_edges": [[44, "pywhy-graphs-classes-timeseries-has-homologous-edges"]], "pywhy_graphs.classes.timeseries.nodes_in_time_order": [[45, "pywhy-graphs-classes-timeseries-nodes-in-time-order"]], "pywhy_graphs.export.clearn_to_graph": [[46, "pywhy-graphs-export-clearn-to-graph"]], "pywhy_graphs.export.graph_to_clearn": [[47, "pywhy-graphs-export-graph-to-clearn"]], "pywhy_graphs.export.graph_to_numpy": [[48, "pywhy-graphs-export-graph-to-numpy"]], "pywhy_graphs.export.graph_to_pcalg": [[49, "pywhy-graphs-export-graph-to-pcalg"]], "pywhy_graphs.export.graph_to_tetrad": [[50, "pywhy-graphs-export-graph-to-tetrad"]], "pywhy_graphs.export.numpy_to_graph": [[51, "pywhy-graphs-export-numpy-to-graph"]], "pywhy_graphs.export.pcalg_to_graph": [[52, "pywhy-graphs-export-pcalg-to-graph"]], "pywhy_graphs.export.tetrad_to_graph": [[53, "pywhy-graphs-export-tetrad-to-graph"]], "pywhy_graphs.functional.apply_linear_soft_intervention": [[54, "pywhy-graphs-functional-apply-linear-soft-intervention"]], "pywhy_graphs.functional.make_graph_linear_gaussian": [[55, "pywhy-graphs-functional-make-graph-linear-gaussian"]], "pywhy_graphs.functional.make_graph_multidomain": [[56, "pywhy-graphs-functional-make-graph-multidomain"]], "pywhy_graphs.functional.set_node_attributes_with_G": [[57, "pywhy-graphs-functional-set-node-attributes-with-g"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[58, "pywhy-graphs-networkx-mixededgegraph"]], "Examples using pywhy_graphs.networkx.MixedEdgeGraph": [[58, "examples-using-pywhy-graphs-networkx-mixededgegraph"]], "pywhy_graphs.networkx.bidirected_to_unobserved_confounder": [[59, "pywhy-graphs-networkx-bidirected-to-unobserved-confounder"]], "pywhy_graphs.networkx.is_minimal_m_separator": [[60, "pywhy-graphs-networkx-is-minimal-m-separator"]], "pywhy_graphs.networkx.m_separated": [[61, "pywhy-graphs-networkx-m-separated"]], "Examples using pywhy_graphs.networkx.m_separated": [[61, "examples-using-pywhy-graphs-networkx-m-separated"]], "pywhy_graphs.networkx.minimal_m_separator": [[62, "pywhy-graphs-networkx-minimal-m-separator"]], "pywhy_graphs.simulate.simulate_data_from_var": [[63, "pywhy-graphs-simulate-simulate-data-from-var"]], "pywhy_graphs.simulate.simulate_linear_var_process": [[64, "pywhy-graphs-simulate-simulate-linear-var-process"]], "pywhy_graphs.simulate.simulate_var_process_from_summary_graph": [[65, "pywhy-graphs-simulate-simulate-var-process-from-summary-graph"]], "pywhy_graphs.sys_info": [[66, "pywhy-graphs-sys-info"]], "pywhy_graphs.viz.draw": [[67, "pywhy-graphs-viz-draw"]], "Examples using pywhy_graphs.viz.draw": [[67, "examples-using-pywhy-graphs-viz-draw"]], "pywhy_graphs.viz.timeseries_layout": [[68, "pywhy-graphs-viz-timeseries-layout"]], "Examples using pywhy_graphs.viz.timeseries_layout": [[68, "examples-using-pywhy-graphs-viz-timeseries-layout"]], "Glossary of Common Terms and API Elements": [[69, "glossary-of-common-terms-and-api-elements"]], "General Concepts": [[69, "general-concepts"]], "pywhy-graphs": [[70, "pywhy-graphs"]], "API Stability": [[70, "api-stability"]], "How do we compare with NetworkX?": [[70, "how-do-we-compare-with-networkx"]], "Contents": [[70, "contents"]], "Getting started:": [[70, null]], "Team": [[70, "team"]], "Indices and tables": [[70, "indices-and-tables"]], "Installation": [[71, "installation"]], "Causal Graph Algorithms in PyWhy": [[72, "module-pywhy_graphs.algorithms"]], "Core Algorithms": [[72, "core-algorithms"]], "Algorithms for Markov Equivalence Classes": [[72, "algorithms-for-markov-equivalence-classes"]], "Algorithms for Time-Series Graphs": [[72, "algorithms-for-time-series-graphs"]], "Algorithms for handling acyclicity": [[72, "algorithms-for-handling-acyclicity"]], "Causal Graphs in PyWhy": [[73, "module-pywhy_graphs.classes"]], "Which graph class should I use?": [[73, "which-graph-class-should-i-use"]], "pywhy_graphs.classes: Causal graph types": [[73, "pywhy-graphs-classes-causal-graph-types"]], "pywhy_graphs.classes.timeseries: Causal graph types for time-series (alpha)": [[73, "module-pywhy_graphs.classes.timeseries"]], "Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package": [[74, "module-pywhy_graphs.export"]], "Causal-Learn": [[74, "causal-learn"]], "Numpy (graphviz and dagitty)": [[74, "numpy-graphviz-and-dagitty"]], "PCAlg from R (Experimental)": [[74, "pcalg-from-r-experimental"]], "Tetrad from Java": [[74, "tetrad-from-java"]], "Functional Causal Graphical Models": [[75, "module-pywhy_graphs.functional"]], "Linear": [[75, "linear"]], "Linear functional graphs": [[75, "linear-functional-graphs"]], "Multidomain": [[75, "multidomain"]], "Linear functional selection diagrams": [[75, "linear-functional-selection-diagrams"]], "Simulation module": [[76, "simulation-module"]], "How to use pywhy-graphs with examples and tutorials": [[77, "how-to-use-pywhy-graphs-with-examples-and-tutorials"]], "User Guide": [[78, "user-guide"]], "Release History": [[79, "release-history"]], "What\u2019s new?": [[81, "what-s-new"], [82, "what-s-new"]], "Version 0.1": [[81, "version-0-1"]], "Changelog": [[81, "changelog"], [82, "changelog"]], "Code and Documentation Contributors": [[81, "code-and-documentation-contributors"], [82, "code-and-documentation-contributors"]], "Version 0.2": [[82, "version-0-2"]]}, "indexentries": {"module": [[0, "module-pywhy_graphs"], [72, "module-pywhy_graphs.algorithms"], [73, "module-pywhy_graphs.classes"], [73, "module-pywhy_graphs.classes.timeseries"], [74, "module-pywhy_graphs.export"], [75, "module-pywhy_graphs.functional"], [76, "module-pywhy_graphs.simulate"]], "pywhy_graphs": [[0, "module-pywhy_graphs"]], "admg (class in pywhy_graphs)": [[13, "pywhy_graphs.ADMG"]], "bidirected_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.bidirected_edges"]], "c_components() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.c_components"]], "directed_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.directed_edge_name"]], "directed_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.directed_edges"]], "sub_bidirected_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_bidirected_graph"]], "sub_directed_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.admg method)": [[13, "pywhy_graphs.ADMG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.admg property)": [[13, "pywhy_graphs.ADMG.undirected_edges"]], "augmentedgraph (class in pywhy_graphs)": [[14, "pywhy_graphs.AugmentedGraph"]], "augmentedpag (class in pywhy_graphs)": [[15, "pywhy_graphs.AugmentedPAG"]], "cpdag (class in pywhy_graphs)": [[16, "pywhy_graphs.CPDAG"]], "add_edge() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.possible_children"]], "possible_parents() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.cpdag method)": [[16, "pywhy_graphs.CPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.cpdag property)": [[16, "pywhy_graphs.CPDAG.undirected_edges"]], "pag (class in pywhy_graphs)": [[17, "pywhy_graphs.PAG"]], "add_edge() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.add_edge"]], "add_edges_from() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.add_edges_from"]], "children() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.children"]], "circle_edge_name (pywhy_graphs.pag property)": [[17, "pywhy_graphs.PAG.circle_edge_name"]], "circle_edges (pywhy_graphs.pag property)": [[17, "pywhy_graphs.PAG.circle_edges"]], "orient_uncertain_edge() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.orient_uncertain_edge"]], "parents() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.parents"]], "possible_children() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.possible_children"]], "possible_parents() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.possible_parents"]], "sub_circle_graph() (pywhy_graphs.pag method)": [[17, "pywhy_graphs.PAG.sub_circle_graph"]], "acyclification() (in module pywhy_graphs.algorithms)": [[18, "pywhy_graphs.algorithms.acyclification"]], "add_all_snode_combinations() (in module pywhy_graphs.algorithms)": [[19, "pywhy_graphs.algorithms.add_all_snode_combinations"]], "compute_invariant_domains_per_node() (in module pywhy_graphs.algorithms)": [[20, "pywhy_graphs.algorithms.compute_invariant_domains_per_node"]], "discriminating_path() (in module pywhy_graphs.algorithms)": [[21, "pywhy_graphs.algorithms.discriminating_path"]], "find_connected_pairs() (in module pywhy_graphs.algorithms)": [[22, "pywhy_graphs.algorithms.find_connected_pairs"]], "inducing_path() (in module pywhy_graphs.algorithms)": [[23, "pywhy_graphs.algorithms.inducing_path"]], "is_definite_noncollider() (in module pywhy_graphs.algorithms)": [[24, "pywhy_graphs.algorithms.is_definite_noncollider"]], "is_valid_mec_graph() (in module pywhy_graphs.algorithms)": [[25, "pywhy_graphs.algorithms.is_valid_mec_graph"]], "pds() (in module pywhy_graphs.algorithms)": [[26, "pywhy_graphs.algorithms.pds"]], "pds_path() (in module pywhy_graphs.algorithms)": [[27, "pywhy_graphs.algorithms.pds_path"]], "pds_t() (in module pywhy_graphs.algorithms)": [[28, "pywhy_graphs.algorithms.pds_t"]], "pds_t_path() (in module pywhy_graphs.algorithms)": [[29, "pywhy_graphs.algorithms.pds_t_path"]], "possible_ancestors() (in module pywhy_graphs.algorithms)": [[30, "pywhy_graphs.algorithms.possible_ancestors"]], "possible_descendants() (in module pywhy_graphs.algorithms)": [[31, "pywhy_graphs.algorithms.possible_descendants"]], "uncovered_pd_path() (in module pywhy_graphs.algorithms)": [[32, "pywhy_graphs.algorithms.uncovered_pd_path"]], "stationarytimeseriescpdag (class in pywhy_graphs.classes.timeseries)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG"]], "add_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edges"]], "stationarytimeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[34, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph"]], "stationarytimeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph"]], "stationarytimeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph"]], "stationarytimeseriespag (class in pywhy_graphs.classes.timeseries)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG"]], "bidirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edges"]], "circle_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edge_name"]], "circle_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edges"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_parents"]], "sub_bidirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_bidirected_graph"]], "sub_circle_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_circle_graph"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[37, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edges"]], "timeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph"]], "timeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesGraph"]], "timeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph"]], "add_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edges_from"]], "add_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_homologous_edges"]], "copy() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.copy"]], "node_attr_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_dict_factory"]], "remove_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edges_from"]], "remove_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[40, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_homologous_edges"]], "complete_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[41, "pywhy_graphs.classes.timeseries.complete_ts_graph"]], "empty_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[42, "pywhy_graphs.classes.timeseries.empty_ts_graph"]], "get_summary_graph() (in module pywhy_graphs.classes.timeseries)": [[43, "pywhy_graphs.classes.timeseries.get_summary_graph"]], "has_homologous_edges() (in module pywhy_graphs.classes.timeseries)": [[44, "pywhy_graphs.classes.timeseries.has_homologous_edges"]], "nodes_in_time_order() (in module pywhy_graphs.classes.timeseries)": [[45, "pywhy_graphs.classes.timeseries.nodes_in_time_order"]], "clearn_to_graph() (in module pywhy_graphs.export)": [[46, "pywhy_graphs.export.clearn_to_graph"]], "graph_to_clearn() (in module pywhy_graphs.export)": [[47, "pywhy_graphs.export.graph_to_clearn"]], "graph_to_numpy() (in module pywhy_graphs.export)": [[48, "pywhy_graphs.export.graph_to_numpy"]], "graph_to_pcalg() (in module pywhy_graphs.export)": [[49, "pywhy_graphs.export.graph_to_pcalg"]], "graph_to_tetrad() (in module pywhy_graphs.export)": [[50, "pywhy_graphs.export.graph_to_tetrad"]], "numpy_to_graph() (in module pywhy_graphs.export)": [[51, "pywhy_graphs.export.numpy_to_graph"]], "pcalg_to_graph() (in module pywhy_graphs.export)": [[52, "pywhy_graphs.export.pcalg_to_graph"]], "tetrad_to_graph() (in module pywhy_graphs.export)": [[53, "pywhy_graphs.export.tetrad_to_graph"]], "apply_linear_soft_intervention() (in module pywhy_graphs.functional)": [[54, "pywhy_graphs.functional.apply_linear_soft_intervention"]], "make_graph_linear_gaussian() (in module pywhy_graphs.functional)": [[55, "pywhy_graphs.functional.make_graph_linear_gaussian"]], "make_graph_multidomain() (in module pywhy_graphs.functional)": [[56, "pywhy_graphs.functional.make_graph_multidomain"]], "set_node_attributes_with_g() (in module pywhy_graphs.functional)": [[57, "pywhy_graphs.functional.set_node_attributes_with_G"]], "mixededgegraph (class in pywhy_graphs.networkx)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph"]], "__contains__() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.__contains__"]], "__getitem__() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.__getitem__"]], "__iter__() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.__iter__"]], "__len__() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.__len__"]], "add_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.add_edges_from"]], "adj (pywhy_graphs.networkx.mixededgegraph property)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.adj"]], "clear_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.clear_edge_types"]], "copy() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.copy"]], "degree() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.degree"]], "edges() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.edges"]], "get_edge_data() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.get_edge_data"]], "get_graphs() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.get_graphs"]], "graph_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.graph_attr_dict_factory"]], "has_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.has_edge"]], "has_node() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.has_node"]], "is_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.is_directed"]], "is_multigraph() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.is_multigraph"]], "name (pywhy_graphs.networkx.mixededgegraph property)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.name"]], "nbunch_iter() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.nbunch_iter"]], "node_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.node_dict_factory"]], "number_of_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edge_types"]], "number_of_edges() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edges"]], "number_of_nodes() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_nodes"]], "order() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.order"]], "remove_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edges_from"]], "size() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.size"]], "subgraph() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.subgraph"]], "to_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.to_directed"]], "to_undirected() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.to_undirected"]], "update() (pywhy_graphs.networkx.mixededgegraph method)": [[58, "pywhy_graphs.networkx.MixedEdgeGraph.update"]], "bidirected_to_unobserved_confounder() (in module pywhy_graphs.networkx)": [[59, "pywhy_graphs.networkx.bidirected_to_unobserved_confounder"]], "is_minimal_m_separator() (in module pywhy_graphs.networkx)": [[60, "pywhy_graphs.networkx.is_minimal_m_separator"]], "m_separated() (in module pywhy_graphs.networkx)": [[61, "pywhy_graphs.networkx.m_separated"]], "minimal_m_separator() (in module pywhy_graphs.networkx)": [[62, "pywhy_graphs.networkx.minimal_m_separator"]], "simulate_data_from_var() (in module pywhy_graphs.simulate)": [[63, "pywhy_graphs.simulate.simulate_data_from_var"]], "simulate_linear_var_process() (in module pywhy_graphs.simulate)": [[64, "pywhy_graphs.simulate.simulate_linear_var_process"]], "simulate_var_process_from_summary_graph() (in module pywhy_graphs.simulate)": [[65, "pywhy_graphs.simulate.simulate_var_process_from_summary_graph"]], "sys_info() (in module pywhy_graphs)": [[66, "pywhy_graphs.sys_info"]], "draw() (in module pywhy_graphs.viz)": [[67, "pywhy_graphs.viz.draw"]], "timeseries_layout() (in module pywhy_graphs.viz)": [[68, "pywhy_graphs.viz.timeseries_layout"]], "1d": [[69, "term-1d"]], "1d array": [[69, "term-1d-array"]], "2d": [[69, "term-2d"]], "2d array": [[69, "term-2d-array"]], "api": [[69, "term-API"]], "f-node": [[69, "term-F-node"]], "markov equivalence class": [[69, "term-Markov-equivalence-class"]], "scm": [[69, "term-SCM"]], "structural causal model": [[69, "term-Structural-Causal-Model"]], "c components": [[69, "term-0"]], "c-components": [[69, "term-c-components"]], "c_components": [[69, "term-c_components"]], "callable": [[69, "term-callable"]], "docstring": [[69, "term-docstring"]], "equivalence class": [[69, "term-equivalence-class"]], "examples": [[69, "term-examples"]], "experimental": [[69, "term-experimental"]], "gallery": [[69, "term-gallery"]], "joblib": [[69, "term-joblib"]], "lag": [[69, "term-lag"]], "n_features": [[69, "term-n_features"]], "n_samples": [[69, "term-n_samples"]], "node": [[69, "term-node"]], "np": [[69, "term-np"]], "nx": [[69, "term-nx"]], "pair": [[69, "term-pair"]], "pd": [[69, "term-pd"]], "sample": [[69, "term-sample"]], "samples": [[69, "term-samples"]], "sigma_map": [[69, "term-sigma_map"]], "symmetric_difference_map": [[69, "term-symmetric_difference_map"]], "tsnode": [[69, "term-tsnode"]], "variable": [[69, "term-variable"]], "pywhy_graphs.algorithms": [[72, "module-pywhy_graphs.algorithms"]], "pywhy_graphs.classes": [[73, "module-pywhy_graphs.classes"]], "pywhy_graphs.classes.timeseries": [[73, "module-pywhy_graphs.classes.timeseries"]], "pywhy_graphs.export": [[74, "module-pywhy_graphs.export"]], "pywhy_graphs.functional": [[75, "module-pywhy_graphs.functional"]], "pywhy_graphs.simulate": [[76, "module-pywhy_graphs.simulate"]]}})