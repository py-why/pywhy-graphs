Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/intro/checking_validity_of_a_pag", "auto_examples/intro/index", "auto_examples/intro/inducing_path", "auto_examples/intro/intro_causal_graphs", "auto_examples/intro/sg_execution_times", "auto_examples/mixededge/index", "auto_examples/mixededge/plot_mixed_edge_graph", "auto_examples/mixededge/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout", "auto_examples/visualization/index", "auto_examples/visualization/plot_timeseries_graphs", "auto_examples/visualization/sg_execution_times", "generated/pywhy_graphs.ADMG", "generated/pywhy_graphs.AugmentedGraph", "generated/pywhy_graphs.AugmentedPAG", "generated/pywhy_graphs.CPDAG", "generated/pywhy_graphs.PAG", "generated/pywhy_graphs.algorithms.acyclification", "generated/pywhy_graphs.algorithms.add_all_snode_combinations", "generated/pywhy_graphs.algorithms.all_semi_directed_paths", "generated/pywhy_graphs.algorithms.check_pag_definition", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node", "generated/pywhy_graphs.algorithms.dag_to_cpdag", "generated/pywhy_graphs.algorithms.dag_to_mag", "generated/pywhy_graphs.algorithms.discriminating_path", "generated/pywhy_graphs.algorithms.find_connected_pairs", "generated/pywhy_graphs.algorithms.has_adc", "generated/pywhy_graphs.algorithms.inducing_path", "generated/pywhy_graphs.algorithms.is_definite_noncollider", "generated/pywhy_graphs.algorithms.is_semi_directed_path", "generated/pywhy_graphs.algorithms.is_valid_mec_graph", "generated/pywhy_graphs.algorithms.label_edges", "generated/pywhy_graphs.algorithms.mag_to_pag", "generated/pywhy_graphs.algorithms.order_edges", "generated/pywhy_graphs.algorithms.pag_to_mag", "generated/pywhy_graphs.algorithms.pdag_to_cpdag", "generated/pywhy_graphs.algorithms.pdag_to_dag", "generated/pywhy_graphs.algorithms.pds", "generated/pywhy_graphs.algorithms.pds_path", "generated/pywhy_graphs.algorithms.pds_t", "generated/pywhy_graphs.algorithms.pds_t_path", "generated/pywhy_graphs.algorithms.possible_ancestors", "generated/pywhy_graphs.algorithms.possible_descendants", "generated/pywhy_graphs.algorithms.semi_directed_paths.all_semi_directed_paths", "generated/pywhy_graphs.algorithms.semi_directed_paths.is_semi_directed_path", "generated/pywhy_graphs.algorithms.uncovered_pd_path", "generated/pywhy_graphs.algorithms.valid_mag", "generated/pywhy_graphs.algorithms.valid_pag", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph", "generated/pywhy_graphs.classes.timeseries.get_summary_graph", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order", "generated/pywhy_graphs.export.clearn_to_graph", "generated/pywhy_graphs.export.graph_to_clearn", "generated/pywhy_graphs.export.graph_to_numpy", "generated/pywhy_graphs.export.graph_to_pcalg", "generated/pywhy_graphs.export.graph_to_tetrad", "generated/pywhy_graphs.export.numpy_to_graph", "generated/pywhy_graphs.export.pcalg_to_graph", "generated/pywhy_graphs.export.tetrad_to_graph", "generated/pywhy_graphs.functional.apply_linear_soft_intervention", "generated/pywhy_graphs.functional.discrete.add_cpd_for_node", "generated/pywhy_graphs.functional.discrete.make_random_discrete_graph", "generated/pywhy_graphs.functional.make_graph_linear_gaussian", "generated/pywhy_graphs.functional.make_graph_multidomain", "generated/pywhy_graphs.functional.set_node_attributes_with_G", "generated/pywhy_graphs.networkx.MixedEdgeGraph", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "generated/pywhy_graphs.networkx.is_minimal_m_separator", "generated/pywhy_graphs.networkx.m_separated", "generated/pywhy_graphs.networkx.minimal_m_separator", "generated/pywhy_graphs.simulate.simulate_data_from_var", "generated/pywhy_graphs.simulate.simulate_linear_var_process", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "generated/pywhy_graphs.sys_info", "generated/pywhy_graphs.viz.draw", "generated/pywhy_graphs.viz.timeseries_layout", "glossary", "index", "installation", "reference/algorithms/index", "reference/classes/index", "reference/export/index", "reference/functional/index", "reference/simulation/index", "sg_execution_times", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1", "whats_new/v0.2"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/intro/checking_validity_of_a_pag.rst", "auto_examples/intro/index.rst", "auto_examples/intro/inducing_path.rst", "auto_examples/intro/intro_causal_graphs.rst", "auto_examples/intro/sg_execution_times.rst", "auto_examples/mixededge/index.rst", "auto_examples/mixededge/plot_mixed_edge_graph.rst", "auto_examples/mixededge/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/plot_timeseries_graphs.rst", "auto_examples/visualization/sg_execution_times.rst", "generated/pywhy_graphs.ADMG.rst", "generated/pywhy_graphs.AugmentedGraph.rst", "generated/pywhy_graphs.AugmentedPAG.rst", "generated/pywhy_graphs.CPDAG.rst", "generated/pywhy_graphs.PAG.rst", "generated/pywhy_graphs.algorithms.acyclification.rst", "generated/pywhy_graphs.algorithms.add_all_snode_combinations.rst", "generated/pywhy_graphs.algorithms.all_semi_directed_paths.rst", "generated/pywhy_graphs.algorithms.check_pag_definition.rst", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node.rst", "generated/pywhy_graphs.algorithms.dag_to_cpdag.rst", "generated/pywhy_graphs.algorithms.dag_to_mag.rst", "generated/pywhy_graphs.algorithms.discriminating_path.rst", "generated/pywhy_graphs.algorithms.find_connected_pairs.rst", "generated/pywhy_graphs.algorithms.has_adc.rst", "generated/pywhy_graphs.algorithms.inducing_path.rst", "generated/pywhy_graphs.algorithms.is_definite_noncollider.rst", "generated/pywhy_graphs.algorithms.is_semi_directed_path.rst", "generated/pywhy_graphs.algorithms.is_valid_mec_graph.rst", "generated/pywhy_graphs.algorithms.label_edges.rst", "generated/pywhy_graphs.algorithms.mag_to_pag.rst", "generated/pywhy_graphs.algorithms.order_edges.rst", "generated/pywhy_graphs.algorithms.pag_to_mag.rst", "generated/pywhy_graphs.algorithms.pdag_to_cpdag.rst", "generated/pywhy_graphs.algorithms.pdag_to_dag.rst", "generated/pywhy_graphs.algorithms.pds.rst", "generated/pywhy_graphs.algorithms.pds_path.rst", "generated/pywhy_graphs.algorithms.pds_t.rst", "generated/pywhy_graphs.algorithms.pds_t_path.rst", "generated/pywhy_graphs.algorithms.possible_ancestors.rst", "generated/pywhy_graphs.algorithms.possible_descendants.rst", "generated/pywhy_graphs.algorithms.semi_directed_paths.all_semi_directed_paths.rst", "generated/pywhy_graphs.algorithms.semi_directed_paths.is_semi_directed_path.rst", "generated/pywhy_graphs.algorithms.uncovered_pd_path.rst", "generated/pywhy_graphs.algorithms.valid_mag.rst", "generated/pywhy_graphs.algorithms.valid_pag.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.get_summary_graph.rst", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges.rst", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order.rst", "generated/pywhy_graphs.export.clearn_to_graph.rst", "generated/pywhy_graphs.export.graph_to_clearn.rst", "generated/pywhy_graphs.export.graph_to_numpy.rst", "generated/pywhy_graphs.export.graph_to_pcalg.rst", "generated/pywhy_graphs.export.graph_to_tetrad.rst", "generated/pywhy_graphs.export.numpy_to_graph.rst", "generated/pywhy_graphs.export.pcalg_to_graph.rst", "generated/pywhy_graphs.export.tetrad_to_graph.rst", "generated/pywhy_graphs.functional.apply_linear_soft_intervention.rst", "generated/pywhy_graphs.functional.discrete.add_cpd_for_node.rst", "generated/pywhy_graphs.functional.discrete.make_random_discrete_graph.rst", "generated/pywhy_graphs.functional.make_graph_linear_gaussian.rst", "generated/pywhy_graphs.functional.make_graph_multidomain.rst", "generated/pywhy_graphs.functional.set_node_attributes_with_G.rst", "generated/pywhy_graphs.networkx.MixedEdgeGraph.rst", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder.rst", "generated/pywhy_graphs.networkx.is_minimal_m_separator.rst", "generated/pywhy_graphs.networkx.m_separated.rst", "generated/pywhy_graphs.networkx.minimal_m_separator.rst", "generated/pywhy_graphs.simulate.simulate_data_from_var.rst", "generated/pywhy_graphs.simulate.simulate_linear_var_process.rst", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph.rst", "generated/pywhy_graphs.sys_info.rst", "generated/pywhy_graphs.viz.draw.rst", "generated/pywhy_graphs.viz.timeseries_layout.rst", "glossary.rst", "index.rst", "installation.md", "reference/algorithms/index.rst", "reference/classes/index.rst", "reference/export/index.rst", "reference/functional/index.rst", "reference/simulation/index.rst", "sg_execution_times.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst", "whats_new/v0.2.rst"], "titles": ["API", "Examples Gallery", "On PAGs and their validity", "Introduction to causal graphs", "An introduction to Inducing Paths and how to find them", "An introduction to causal graphs and how to use them", "Computation times", "Networkx MixedEdgeGraph Examples", "MixedEdgeGraph - Graph with different types of edges", "Computation times", "Computation times", "Drawing graphs and setting their layout for visual comparison", "Visualization of causal graphs", "Drawing timeseries graphs and setting their layout", "Computation times", "pywhy_graphs.ADMG", "pywhy_graphs.AugmentedGraph", "pywhy_graphs.AugmentedPAG", "pywhy_graphs.CPDAG", "pywhy_graphs.PAG", "<span class=\"section-number\">3.4.1. </span>pywhy_graphs.algorithms.acyclification", "pywhy_graphs.algorithms.add_all_snode_combinations", "pywhy_graphs.algorithms.all_semi_directed_paths", "<span class=\"section-number\">3.1.9. </span>pywhy_graphs.algorithms.check_pag_definition", "pywhy_graphs.algorithms.compute_invariant_domains_per_node", "pywhy_graphs.algorithms.dag_to_cpdag", "pywhy_graphs.algorithms.dag_to_mag", "<span class=\"section-number\">3.1.4. </span>pywhy_graphs.algorithms.discriminating_path", "pywhy_graphs.algorithms.find_connected_pairs", "pywhy_graphs.algorithms.has_adc", "pywhy_graphs.algorithms.inducing_path", "<span class=\"section-number\">3.1.5. </span>pywhy_graphs.algorithms.is_definite_noncollider", "pywhy_graphs.algorithms.is_semi_directed_path", "<span class=\"section-number\">3.1.1. </span>pywhy_graphs.algorithms.is_valid_mec_graph", "pywhy_graphs.algorithms.label_edges", "<span class=\"section-number\">3.1.7. </span>pywhy_graphs.algorithms.mag_to_pag", "pywhy_graphs.algorithms.order_edges", "<span class=\"section-number\">3.1.8. </span>pywhy_graphs.algorithms.pag_to_mag", "pywhy_graphs.algorithms.pdag_to_cpdag", "pywhy_graphs.algorithms.pdag_to_dag", "<span class=\"section-number\">3.2.1. </span>pywhy_graphs.algorithms.pds", "<span class=\"section-number\">3.2.2. </span>pywhy_graphs.algorithms.pds_path", "<span class=\"section-number\">3.3.1. </span>pywhy_graphs.algorithms.pds_t", "<span class=\"section-number\">3.3.2. </span>pywhy_graphs.algorithms.pds_t_path", "<span class=\"section-number\">3.1.2. </span>pywhy_graphs.algorithms.possible_ancestors", "<span class=\"section-number\">3.1.3. </span>pywhy_graphs.algorithms.possible_descendants", "<span class=\"section-number\">4.1. </span>pywhy_graphs.algorithms.semi_directed_paths.all_semi_directed_paths", "<span class=\"section-number\">4.2. </span>pywhy_graphs.algorithms.semi_directed_paths.is_semi_directed_path", "<span class=\"section-number\">3.2.3. </span>pywhy_graphs.algorithms.uncovered_pd_path", "pywhy_graphs.algorithms.valid_mag", "<span class=\"section-number\">3.1.6. </span>pywhy_graphs.algorithms.valid_pag", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.TimeSeriesGraph", "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.complete_ts_graph", "pywhy_graphs.classes.timeseries.empty_ts_graph", "pywhy_graphs.classes.timeseries.get_summary_graph", "pywhy_graphs.classes.timeseries.has_homologous_edges", "pywhy_graphs.classes.timeseries.nodes_in_time_order", "<span class=\"section-number\">6.1.2. </span>pywhy_graphs.export.clearn_to_graph", "<span class=\"section-number\">6.1.1. </span>pywhy_graphs.export.graph_to_clearn", "<span class=\"section-number\">6.2.1. </span>pywhy_graphs.export.graph_to_numpy", "<span class=\"section-number\">6.3.1. </span>pywhy_graphs.export.graph_to_pcalg", "<span class=\"section-number\">6.4.1. </span>pywhy_graphs.export.graph_to_tetrad", "<span class=\"section-number\">6.2.2. </span>pywhy_graphs.export.numpy_to_graph", "<span class=\"section-number\">6.3.2. </span>pywhy_graphs.export.pcalg_to_graph", "<span class=\"section-number\">6.4.2. </span>pywhy_graphs.export.tetrad_to_graph", "<span class=\"section-number\">2.5.2. </span>pywhy_graphs.functional.apply_linear_soft_intervention", "<span class=\"section-number\">2.2.1.2. </span>pywhy_graphs.functional.discrete.add_cpd_for_node", "<span class=\"section-number\">2.2.1.1. </span>pywhy_graphs.functional.discrete.make_random_discrete_graph", "<span class=\"section-number\">2.5.1. </span>pywhy_graphs.functional.make_graph_linear_gaussian", "<span class=\"section-number\">2.7.1. </span>pywhy_graphs.functional.make_graph_multidomain", "pywhy_graphs.functional.set_node_attributes_with_G", "pywhy_graphs.networkx.MixedEdgeGraph", "<span class=\"section-number\">3.1.10. </span>pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "<span class=\"section-number\">3.1.12. </span>pywhy_graphs.networkx.is_minimal_m_separator", "<span class=\"section-number\">3.1.11. </span>pywhy_graphs.networkx.m_separated", "<span class=\"section-number\">3.1.13. </span>pywhy_graphs.networkx.minimal_m_separator", "<span class=\"section-number\">5.1.2. </span>pywhy_graphs.simulate.simulate_data_from_var", "<span class=\"section-number\">5.1.1. </span>pywhy_graphs.simulate.simulate_linear_var_process", "<span class=\"section-number\">5.1.3. </span>pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "pywhy_graphs.sys_info", "pywhy_graphs.viz.draw", "pywhy_graphs.viz.timeseries_layout", "<span class=\"section-number\">7. </span>Glossary of Common Terms and API Elements", "<strong>pywhy-graphs</strong>", "Installation", "<span class=\"section-number\">3. </span>Causal Graph Algorithms in PyWhy", "<span class=\"section-number\">1. </span>Causal Graphs in PyWhy", "<span class=\"section-number\">6. </span>Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package", "<span class=\"section-number\">2. </span>Functional Causal Graphical Models", "<span class=\"section-number\">5. </span>Simulation module", "Computation times", "How to use pywhy-graphs with examples and tutorials", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?", "What\u2019s new?"], "terms": {"thi": [0, 1, 2, 4, 5, 7, 8, 11, 13, 17, 18, 19, 20, 22, 23, 24, 32, 33, 41, 42, 43, 46, 47, 48, 51, 53, 57, 58, 62, 66, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 93, 94, 95, 96, 98, 100], "i": [0, 1, 2, 4, 5, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 62, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99], "applic": 0, "program": 0, "interfac": [0, 89, 90, 94], "refer": [0, 16, 17, 20, 22, 30, 34, 36, 39, 40, 46, 48, 50, 70, 78, 80, 81, 82, 89, 90, 93, 95], "camelcas": 0, "name": [0, 8, 11, 15, 16, 17, 18, 19, 20, 51, 54, 55, 64, 69, 70, 78, 79, 80, 81, 82, 83, 87, 89, 93], "underscore_cas": 0, "pywhi": [0, 16, 17, 66, 67, 68, 71, 89, 91, 95, 99, 100, 102, 103], "group": 0, "themat": 0, "analysi": 0, "stage": [0, 76, 90], "These": [0, 5, 40, 89, 95, 103], "ar": [0, 2, 4, 5, 8, 11, 15, 16, 17, 18, 19, 22, 23, 24, 28, 30, 33, 34, 36, 40, 44, 45, 46, 48, 50, 51, 52, 55, 58, 61, 62, 64, 66, 67, 69, 70, 74, 75, 76, 78, 79, 80, 82, 83, 84, 89, 90, 92, 93, 95, 100, 103], "structur": [0, 15, 18, 19, 34, 36, 39, 51, 53, 56, 57, 58, 74, 76, 78, 89, 92, 93, 94, 95, 96], "scm": [0, 2, 5, 18, 19, 51, 89, 93], "variou": [0, 5, 11, 93, 102], "encount": [0, 94], "literatur": [0, 5], "tradit": [0, 5, 15, 93], "oper": [0, 20], "over": [0, 8, 18, 19, 42, 43, 51, 52, 55, 58, 73, 78, 81, 83, 90, 93, 95], "onli": [0, 4, 5, 8, 18, 19, 22, 32, 46, 47, 48, 49, 51, 55, 58, 66, 78, 81, 89, 93, 94, 95], "one": [0, 2, 4, 5, 8, 11, 16, 19, 21, 24, 27, 29, 32, 33, 47, 48, 52, 64, 66, 76, 78, 83, 84, 93, 94, 95], "type": [0, 1, 2, 7, 9, 15, 16, 17, 18, 19, 51, 54, 58, 59, 64, 67, 69, 70, 71, 72, 78, 84, 89, 90, 94, 95, 97, 98, 99], "equival": [0, 2, 4, 5, 17, 18, 19, 23, 34, 36, 39, 50, 51, 89, 93, 99], "gener": [0, 1, 2, 4, 5, 8, 11, 13, 15, 18, 19, 22, 46, 51, 73, 74, 76, 78, 83, 84, 87, 93, 95, 96, 98, 99, 102, 103], "consist": [0, 4, 34, 39, 42, 43, 52, 76, 83, 90, 93, 103], "more": [0, 2, 4, 5, 11, 16, 19, 32, 47, 76, 78, 84, 87, 89, 90, 93, 94], "than": [0, 19, 32, 42, 43, 47, 58, 76, 78, 93, 94], "common": [0, 2, 5, 66, 90, 92, 93, 99], "us": [0, 1, 2, 3, 6, 7, 8, 11, 13, 20, 22, 24, 35, 37, 46, 48, 51, 53, 57, 58, 74, 77, 86, 89, 90, 91, 94, 95, 96, 97, 99], "varieti": 0, "differ": [0, 1, 2, 5, 7, 9, 11, 13, 15, 16, 17, 18, 19, 51, 55, 78, 80, 82, 84, 89, 90, 93, 95, 97, 98], "With": 0, "markov": [0, 5, 17, 18, 19, 51, 89, 93, 99], "dag": [0, 4, 15, 18, 19, 23, 25, 26, 34, 36, 37, 39, 51, 55, 64, 69, 70, 71, 74, 75, 76, 79, 81, 84, 85, 90, 93, 94, 103], "markovian": [0, 5, 18, 19, 51, 93], "set": [0, 1, 2, 4, 5, 8, 12, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 30, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 56, 66, 67, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 93, 95, 97, 98], "we": [0, 2, 4, 5, 8, 11, 13, 19, 30, 48, 58, 66, 75, 76, 80, 83, 84, 89, 92, 93, 94, 95, 96, 98, 102, 103], "obtain": 0, "potenti": [0, 48], "direct": [0, 2, 4, 8, 15, 16, 17, 18, 19, 20, 22, 23, 25, 29, 32, 33, 34, 36, 38, 39, 40, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 61, 66, 78, 79, 80, 81, 82, 87, 90, 93, 95, 99, 103], "acycl": [0, 4, 15, 18, 25, 34, 36, 38, 39, 40, 51, 84, 90, 93, 95, 99, 102], "pdag": [0, 38, 39, 103], "which": [0, 4, 5, 8, 13, 18, 19, 27, 32, 37, 40, 41, 42, 43, 47, 48, 50, 51, 52, 58, 64, 71, 73, 74, 75, 76, 78, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 95, 96, 99], "mai": [0, 15, 18, 19, 22, 31, 46, 52, 76, 78, 80, 81, 82, 84, 89, 93, 95], "complet": [0, 2, 4, 18, 22, 30, 35, 38, 40, 46, 48, 50, 51, 53, 59, 78, 80, 81, 82, 83, 93], "want": [0, 2, 8, 19, 78, 93, 95], "extens": [0, 34, 39, 103], "e": [0, 2, 5, 8, 11, 13, 20, 22, 24, 32, 40, 46, 47, 48, 53, 70, 78, 81, 82, 84, 86, 88, 89, 90, 91, 93, 95], "some": [0, 4, 11, 13, 40, 78, 90, 93, 95, 98], "describ": [0, 2, 39, 89], "here": [0, 5, 8, 70, 78, 94, 95, 98, 102, 103], "Or": [0, 5], "perhap": 0, "its": [0, 8, 52, 73, 89, 93, 94, 95], "correspond": [0, 8, 15, 17, 18, 19, 58, 66, 78, 85, 89, 93, 95], "learn": [0, 4, 5, 17, 18, 19, 20, 34, 35, 36, 39, 40, 51, 64, 86, 90, 93, 95, 98, 99, 102], "implement": [0, 8, 39, 41, 42, 43, 78, 80, 81, 82, 89, 90, 93, 94, 102, 103], "infer": [0, 5, 17, 24, 40, 90, 95], "procedur": [0, 20], "encod": [0, 2, 5, 23, 64, 93, 95], "object": [0, 2, 5, 8, 11, 13, 18, 19, 51, 53, 58, 64, 78, 84, 89, 93], "submodul": [0, 90, 92, 95, 102], "those": [0, 2, 4, 30, 78, 84], "data": [0, 15, 16, 17, 18, 19, 51, 52, 53, 58, 75, 76, 78, 83, 84, 89, 92, 93, 94, 95, 96], "current": [0, 24, 41, 42, 43, 52, 90, 93, 94, 95], "doe": [0, 19, 22, 32, 33, 46, 47, 48, 78, 81, 90, 95], "support": [0, 52, 61, 66, 78, 90, 91, 93, 94, 95, 102, 103], "crucial": 0, "repres": [0, 2, 5, 8, 15, 16, 17, 18, 19, 23, 32, 47, 66, 67, 69, 70, 76, 78, 79, 80, 89, 90, 93, 94, 99], "latent": [0, 2, 4, 5, 15, 17, 18, 19, 30, 40, 48, 50, 51, 84, 89, 93, 95], "confound": [0, 2, 4, 5, 8, 15, 18, 19, 30, 48, 50, 51, 79, 84, 89, 93, 95], "select": [0, 2, 4, 5, 15, 19, 30, 40, 48, 50, 76, 93, 99], "bia": [0, 2, 4, 5, 15, 19, 30, 48, 50, 93], "The": [0, 2, 5, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95], "follow": [0, 19, 23, 40, 66, 69, 70, 78, 89, 91, 93, 94, 95], "intend": 0, "pr": 0, "eventu": [0, 78, 90], "thei": [0, 5, 8, 11, 16, 17, 18, 19, 51, 58, 66, 74, 76, 78, 90, 93, 94, 95], "includ": [0, 24, 52, 53, 78, 80, 82, 83, 84, 85, 86, 89, 93, 102, 103], "temporari": 0, "bridg": 0, "welcom": [0, 94], "feedback": 0, "specif": [0, 2, 8, 24, 66, 76, 77, 78, 80, 82, 88, 89, 90, 94, 99], "time": [0, 2, 4, 5, 8, 11, 13, 22, 42, 43, 46, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 73, 83, 84, 85, 88, 89, 99, 102], "seri": [0, 5, 13, 52, 53, 54, 56, 57, 58, 59, 61, 62, 83, 84, 85, 88, 89, 99, 102], "also": [0, 36, 66, 74, 76, 78, 88, 89, 90, 92, 93, 95], "have": [0, 5, 8, 19, 21, 31, 33, 62, 66, 74, 75, 76, 78, 79, 81, 83, 90, 93, 94, 95], "like": [0, 2, 8, 19, 53, 66, 67, 69, 70, 78, 86, 90, 93, 94, 95], "stationari": [0, 51, 52, 53, 54, 55, 58, 62, 83, 84, 85, 93], "For": [0, 2, 4, 5, 8, 11, 13, 16, 17, 18, 19, 22, 23, 29, 34, 46, 51, 52, 55, 75, 76, 78, 83, 87, 89, 90, 93, 95], "explicitli": [0, 78, 95], "them": [0, 1, 3, 6, 15, 18, 19, 33, 78, 81, 87, 89, 97, 98], "assist": 0, "start": [0, 27, 32, 41, 42, 43, 44, 45, 47, 48, 63, 64, 70, 83, 85, 96], "from": [0, 2, 4, 5, 6, 9, 10, 11, 13, 14, 17, 18, 19, 22, 25, 27, 32, 35, 37, 40, 46, 47, 48, 50, 51, 55, 58, 59, 61, 62, 63, 66, 70, 71, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 96, 97, 99, 102], "an": [0, 1, 2, 3, 6, 8, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24, 29, 30, 33, 35, 40, 48, 50, 51, 52, 53, 55, 58, 59, 66, 69, 70, 73, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 102, 103], "linear": [0, 72, 75, 76, 84, 99, 102], "equat": 0, "gaussian": [0, 72, 75, 76, 95], "sem": 0, "compar": [0, 5, 8, 11, 13, 19, 41, 42, 43, 78, 93], "becaus": [0, 4, 5, 8, 19, 32, 47, 66, 76, 80, 82, 90, 93, 94], "can": [0, 2, 4, 5, 8, 11, 13, 15, 18, 19, 21, 22, 24, 28, 46, 48, 51, 52, 58, 66, 78, 81, 83, 84, 86, 87, 90, 93, 94, 95], "wrap": [0, 81, 95], "graphviz": [0, 5, 11, 13, 87, 99], "pygraphviz": [0, 52, 86, 93], "perform": [0, 81], "modular": 0, "node": [0, 2, 5, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 58, 62, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 93, 94, 99, 102], "modul": [0, 78, 86, 89, 90, 99], "simpl": [1, 19, 89, 90, 93, 95, 98], "demonstr": [1, 7, 8, 11, 13, 98], "how": [1, 3, 6, 7, 8, 11, 13, 15, 18, 19, 21, 24, 66, 67, 78, 81, 87, 89, 93, 95, 97], "note": [1, 5, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 30, 32, 33, 40, 41, 42, 43, 46, 47, 48, 51, 52, 58, 62, 66, 67, 70, 71, 76, 78, 79, 81, 83, 84, 85, 88, 89, 93, 95, 98, 100], "wip": [1, 7, 98], "api": [1, 7, 8, 53, 78, 93, 95, 98, 99, 100, 101, 102, 103], "intent": [1, 7, 98], "ad": [1, 4, 5, 7, 8, 16, 17, 18, 19, 21, 51, 52, 58, 78, 79, 93, 95, 98, 102], "edg": [1, 2, 4, 5, 7, 9, 11, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 32, 33, 34, 36, 37, 40, 41, 47, 48, 49, 51, 52, 53, 54, 55, 58, 62, 66, 67, 70, 75, 76, 78, 79, 80, 81, 82, 84, 87, 89, 90, 92, 93, 94, 95, 97, 98, 102, 103], "induc": [1, 2, 3, 5, 6, 15, 18, 23, 30, 49, 51, 74, 78, 87, 89, 93, 97, 98, 102], "path": [1, 2, 3, 5, 6, 15, 22, 23, 27, 30, 31, 32, 40, 41, 42, 43, 46, 47, 48, 49, 78, 80, 81, 86, 87, 89, 97, 98, 99, 102, 103], "find": [1, 3, 6, 15, 27, 28, 36, 40, 78, 82, 87, 90, 97, 98, 102, 103], "On": [1, 3, 4, 5, 6, 15, 19, 30, 48, 50, 78, 87, 97, 98], "pag": [1, 3, 6, 11, 13, 15, 16, 17, 23, 27, 31, 33, 35, 37, 40, 41, 44, 45, 48, 50, 53, 64, 67, 69, 70, 71, 78, 87, 90, 93, 97, 98, 102, 103], "valid": [1, 3, 4, 6, 15, 19, 23, 26, 33, 49, 50, 52, 74, 78, 82, 87, 93, 97, 98, 103], "draw": [1, 2, 4, 5, 12, 14, 15, 18, 19, 56, 78, 88, 97, 98, 102], "layout": [1, 12, 14, 15, 18, 19, 56, 78, 87, 88, 97, 98, 102], "comparison": [1, 12, 13, 14, 15, 18, 19, 78, 87, 97, 98], "timeseri": [1, 12, 14, 87, 88, 97, 98, 99, 102], "download": [1, 2, 4, 5, 8, 11, 13, 98], "all": [1, 2, 4, 5, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 35, 36, 37, 40, 46, 48, 51, 52, 53, 58, 62, 73, 74, 75, 76, 78, 79, 80, 82, 89, 90, 93, 94, 95, 97, 98, 100, 103], "python": [1, 2, 4, 5, 8, 11, 13, 18, 19, 51, 58, 78, 86, 89, 90, 91, 98, 103], "sourc": [1, 2, 4, 5, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 98], "code": [1, 2, 4, 5, 8, 11, 13, 70, 89, 98], "auto_examples_python": [1, 98], "zip": [1, 2, 4, 5, 8, 11, 13, 98], "jupyt": [1, 2, 4, 5, 8, 11, 13, 98], "notebook": [1, 2, 4, 5, 8, 11, 13, 98], "auto_examples_jupyt": [1, 98], "sphinx": [1, 2, 4, 5, 8, 11, 13, 89, 98], "go": [2, 4, 5, 8, 11, 13, 102], "end": [2, 4, 5, 8, 11, 13, 22, 41, 42, 43, 46, 64, 66, 70], "full": [2, 4, 5, 8, 11, 13, 34, 78, 84, 95], "exampl": [2, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 29, 51, 52, 55, 58, 66, 76, 83, 86, 89, 90, 93, 95, 97, 103], "A": [2, 4, 5, 8, 10, 11, 15, 18, 19, 20, 22, 23, 27, 29, 30, 31, 32, 33, 36, 38, 39, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 73, 74, 78, 79, 81, 85, 88, 89, 93], "partial": [2, 18, 19, 20, 23, 38, 39, 51, 90, 93], "ancestr": [2, 19, 20, 23, 49, 80, 81, 82, 90, 93], "mix": [2, 4, 15, 19, 23, 32, 47, 49, 54, 58, 78, 80, 81, 82, 87, 90, 92, 93, 94, 102, 103], "singl": [2, 18, 19, 22, 46, 51, 54, 58, 78, 89, 90, 93, 95], "causal": [2, 4, 6, 8, 15, 16, 17, 18, 19, 20, 30, 48, 50, 51, 54, 55, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 97, 99, 102], "relationship": [2, 5, 15, 18, 19, 51, 89, 93, 99], "between": [2, 5, 15, 18, 19, 22, 23, 27, 30, 33, 40, 43, 46, 48, 49, 51, 58, 64, 66, 75, 76, 78, 80, 81, 82, 89, 90, 93, 94, 95, 102, 103], "sever": 2, "defin": [2, 5, 8, 23, 26, 30, 35, 37, 40, 41, 42, 43, 48, 49, 52, 66, 67, 73, 74, 75, 78, 89, 93, 95], "class": [2, 4, 5, 8, 15, 16, 17, 18, 19, 23, 34, 36, 39, 66, 78, 89, 90, 99, 102], "mag": [2, 4, 26, 35, 37, 49, 50, 70, 103], "account": [2, 93], "possibl": [2, 5, 15, 19, 21, 24, 36, 44, 45, 73, 74, 76, 93, 95], "unobserv": [2, 5, 8, 18, 51, 79, 93], "underli": [2, 76, 83, 84, 93, 96], "anoth": [2, 19, 93, 99], "wai": [2, 8, 19, 78, 93, 94, 95], "understand": [2, 5], "condit": [2, 4, 5, 23, 30, 73, 74, 81, 83, 89, 95], "independ": [2, 5, 23, 78, 83, 84, 89], "constraint": [2, 5, 18, 19, 20, 51, 93], "stem": [2, 5, 93], "sinc": [2, 4, 5, 8, 66, 78, 95, 102, 103], "do": [2, 4, 5, 19, 33, 78, 89, 93, 95], "lead": 2, "uniqu": [2, 5, 52, 66, 93, 95], "essenc": 2, "same": [2, 5, 8, 11, 13, 15, 18, 19, 23, 24, 51, 58, 66, 78, 84, 89, 93, 95], "model": [2, 16, 17, 18, 19, 51, 53, 75, 76, 84, 89, 93, 99, 102], "displai": 2, "mark": [2, 90], "tail": [2, 5, 19, 48, 66, 70, 93, 94], "arrowhead": [2, 5, 18, 19, 48, 51, 55, 70, 93, 94], "share": [2, 78, 89], "member": [2, 4], "circl": [2, 5, 17, 19, 48, 55, 66, 70, 87, 93, 94, 102], "endpoint": [2, 4, 5, 17, 19, 27, 32, 43, 47, 48, 64, 66, 93, 94], "That": [2, 32, 47, 72, 78], "circular": [2, 17, 19, 40, 53, 93], "o": [2, 5, 19, 22, 31, 32, 37, 46, 47, 48, 66, 70, 81, 82, 93, 94], "both": [2, 17, 19, 48, 58, 78, 89, 93, 95], "within": [2, 48, 74, 78, 89, 90, 93, 95], "detail": [2, 4, 5, 17, 30, 34, 76, 89, 90], "found": [2, 4, 22, 27, 46, 48, 78, 80, 82, 86], "1": [2, 4, 5, 8, 9, 11, 13, 16, 17, 20, 22, 23, 26, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 48, 49, 50, 52, 53, 56, 57, 58, 66, 70, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 100], "import": [2, 4, 5, 8, 11, 13, 86, 89, 90, 95, 99, 102], "pywhy_graph": [2, 4, 5, 8, 11, 13, 89, 90, 99, 102, 103], "viz": [2, 4, 5, 11, 13, 102], "try": [2, 76, 89], "dodiscov": [2, 5, 86], "fci": [2, 5, 19, 35, 48, 93], "make_context": 2, "ci": [2, 23], "oracl": 2, "util": [2, 5], "dummy_sampl": 2, "except": [2, 8, 21, 24, 58, 78], "importerror": 2, "rais": [2, 21, 24, 33, 58, 78, 94], "packag": [2, 66, 70, 90, 99], "requir": [2, 4, 11, 19, 34, 89, 93], "convert": [2, 8, 20, 25, 26, 35, 37, 38, 50, 64, 66, 67, 68, 69, 70, 71, 75, 76, 79, 83, 95, 102, 103], "construct": [2, 5, 24, 33, 35, 37, 69, 71, 76, 95], "easi": 2, "task": 2, "librari": [2, 78, 89, 100], "provid": [2, 8, 23, 35, 49, 50, 58, 78, 89, 90, 92, 93, 94, 95, 96], "separ": [2, 5, 19, 30, 40, 41, 42, 43, 52, 66, 80, 81, 82, 93, 102], "purpos": 2, "true": [2, 4, 5, 8, 11, 13, 20, 30, 32, 47, 51, 52, 53, 55, 58, 59, 62, 75, 76, 78, 80, 81, 86, 89, 93], "definit": [2, 4, 15, 18, 19, 31, 41, 48, 89, 93], "contain": [2, 4, 17, 18, 19, 29, 30, 32, 33, 41, 47, 51, 58, 62, 66, 78, 80, 81, 82, 89, 90, 95], "bidirect": [2, 4, 5, 8, 15, 16, 17, 18, 19, 20, 29, 51, 55, 66, 79, 80, 81, 82, 89, 90, 93, 95], "undirect": [2, 5, 11, 15, 16, 17, 18, 19, 51, 52, 55, 57, 61, 66, 78, 80, 81, 82, 93, 102], "cicl": 2, "To": [2, 4, 48, 62, 74, 76, 78, 83, 84, 90, 91, 95, 98], "illustr": [2, 4, 90], "figur": [2, 4, 39], "4": [2, 5, 36, 41, 80, 82, 86, 88, 89, 93, 95], "add_edg": [2, 4, 5, 8, 18, 19, 51, 58, 78, 90], "": [2, 4, 5, 17, 18, 19, 21, 22, 23, 24, 26, 30, 32, 37, 40, 46, 47, 49, 51, 52, 58, 70, 76, 78, 89, 90, 93, 99, 100], "directed_edge_nam": [2, 4, 15, 16, 17, 18, 19, 51, 55, 79, 80, 81, 82, 93], "g": [2, 4, 5, 8, 11, 13, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 58, 59, 61, 62, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 88, 90, 95], "l": [2, 4, 23, 26, 30, 49], "psh": 2, "circle_edge_nam": [2, 5, 17, 19, 55, 93], "final": [2, 4, 13, 78, 84, 93, 95], "look": [2, 5, 13, 90, 95, 98], "dot_graph": [2, 4, 5], "render": [2, 4, 5, 11, 13, 89], "outfil": [2, 4, 5, 11, 13], "valid_pag": 2, "png": [2, 4, 5, 11, 13], "view": [2, 4, 5, 11, 13, 58, 78, 95], "must": [2, 8, 18, 19, 43, 48, 51, 53, 58, 64, 74, 76, 78, 83, 87, 93, 95], "verifi": 2, "turn": [2, 37, 93], "check": [2, 22, 23, 27, 29, 30, 31, 33, 46, 48, 49, 50, 52, 62, 71, 78, 80, 81, 84, 93, 103], "theorem": [2, 37, 50], "2": [2, 4, 5, 6, 8, 13, 14, 17, 18, 19, 24, 34, 36, 37, 39, 40, 50, 51, 52, 58, 66, 70, 75, 76, 78, 83, 86, 89, 93, 94, 95, 97, 100], "method": [2, 5, 78, 89, 92, 93, 94], "simpli": [2, 18, 19, 51, 55, 84, 89, 95], "return": [2, 4, 5, 8, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 59, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 95], "print": [2, 4, 5, 8, 11, 13, 66, 86], "conditioningsetselect": 2, "pd": [2, 5, 41, 42, 43, 48, 89, 102], "context": [2, 5, 90, 95], "observed_vari": 2, "latent_vari": 2, "state_vari": 2, "init_graph": 2, "networkx": [2, 5, 8, 11, 13, 15, 16, 17, 18, 19, 22, 32, 46, 47, 51, 52, 54, 58, 59, 75, 76, 86, 89, 91, 93, 94, 95, 102], "0x7ff48fc424d0": 2, "included_edg": 2, "0x7ff48fc42bd0": 2, "excluded_edg": 2, "0x7ff48fc43010": 2, "num_distribut": 2, "obs_distribut": 2, "intervention_target": 2, "symmetric_diff_map": 2, "sigma_map": [2, 89], "f_node": [2, 17], "num_domain": 2, "domain_map": 2, "s_node": 2, "If": [2, 4, 5, 8, 17, 18, 19, 24, 31, 40, 48, 51, 52, 55, 58, 62, 73, 76, 78, 80, 82, 83, 86, 90, 93, 95], "test": [2, 4, 80, 94, 96, 102, 103], "whether": [2, 20, 23, 27, 29, 31, 32, 33, 47, 48, 49, 50, 52, 62, 73, 74, 78, 93], "algorithm": [2, 4, 5, 18, 19, 51, 80, 81, 82, 90, 93, 96, 99, 102, 103], "work": [2, 4, 53, 78, 80, 81, 89, 90, 93], "correctli": 2, "chang": [2, 48, 76, 78, 80, 82, 89, 90, 93, 95, 100, 101, 102, 103], "By": [2, 4, 8, 15, 16, 17, 18, 19, 27, 40, 48, 51, 53, 58, 73, 76, 78, 83, 85, 87, 89, 93], "remov": [2, 5, 8, 24, 58, 76, 78, 80, 82, 93, 103], "represent": [2, 8, 78, 81, 87, 90, 95], "multipl": [2, 15, 66, 78, 83, 93, 94], "In": [2, 4, 5, 11, 13, 19, 20, 48, 52, 62, 66, 76, 78, 83, 84, 90, 93, 95, 103], "case": [2, 11, 13, 19, 48, 62, 83, 93, 95], "sai": [2, 5], "directli": [2, 18, 19, 51, 53, 57, 58, 78, 93, 95], "caus": [2, 80], "howev": [2, 4, 5, 15, 48, 83, 84, 89, 90, 93, 95], "determin": [2, 50, 76], "logic": 2, "rule": [2, 4, 5, 19, 30, 37, 48, 50, 93], "One": [2, 5, 11, 13, 18, 51, 69, 70, 71, 89, 90, 93], "would": [2, 5, 8, 19, 52, 66, 82, 83, 88, 93], "abl": [2, 98], "adjac": [2, 8, 23, 27, 30, 31, 32, 40, 41, 47, 48, 49, 66, 67, 70, 78], "due": [2, 15, 18, 40, 89, 93, 95], "As": [2, 4, 8], "result": [2, 5, 8, 19, 22, 39, 46, 84, 93, 95], "longer": [2, 5], "remove_edg": [2, 8, 58, 78], "fals": [2, 4, 5, 8, 48, 52, 58, 61, 73, 74, 78, 80, 86, 93], "0x7ff48fc5f3d0": 2, "0x7ff48fc5f390": 2, "0x7ff48fc5f050": 2, "jiji": [2, 4, 5, 30, 48, 50], "zhang": [2, 4, 5, 30, 37, 48, 50], "orient": [2, 4, 5, 18, 19, 27, 30, 48, 50, 51, 55, 89, 93], "discoveri": [2, 4, 5, 17, 20, 30, 48, 50, 93, 96], "presenc": [2, 4, 5, 8, 15, 20, 30, 48, 50, 93, 103], "artifici": [2, 4, 5, 20, 30, 48, 50, 80, 81, 82], "intellig": [2, 4, 5, 20, 30, 48, 50, 80, 81, 82], "172": [2, 4, 5, 30, 48, 50], "16": [2, 4, 5, 30, 48, 50, 102], "1873": [2, 4, 5, 30, 48, 50], "1896": [2, 4, 5, 30, 48, 50], "2008": [2, 4, 5, 30, 48, 50], "url": [2, 4, 5, 17, 20, 30, 40, 48, 50], "http": [2, 4, 5, 11, 17, 20, 30, 40, 48, 50, 70, 71, 78, 87, 89, 91], "www": [2, 4, 5, 17, 30, 48, 50], "sciencedirect": [2, 4, 5, 30, 48, 50], "com": [2, 4, 5, 30, 48, 50], "scienc": [2, 4, 5, 17, 30, 48, 50], "articl": [2, 4, 5, 30, 48, 50], "pii": [2, 4, 5, 30, 48, 50], "s0004370208001008": [2, 4, 5, 30, 48, 50], "doi": [2, 4, 5, 17, 30, 40, 48, 50, 80, 81, 82], "org": [2, 4, 5, 11, 17, 30, 40, 48, 50, 70, 78, 87, 91], "10": [2, 4, 5, 11, 13, 17, 30, 40, 48, 50, 66, 73, 80, 81, 82, 102], "1016": [2, 4, 5, 30, 48, 50, 80, 81, 82], "j": [2, 4, 5, 28, 30, 48, 50, 66, 75, 80, 81, 82], "artint": [2, 4, 5, 30, 48, 50, 80, 81, 82], "08": [2, 4, 5, 30, 48, 50, 86], "001": [2, 4, 5, 30, 48, 50], "total": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 36, 52, 76, 78, 93, 97], "run": [2, 4, 5, 8, 11, 13, 86, 91], "script": [2, 4, 5, 8, 11, 13, 89], "0": [2, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 40, 52, 62, 63, 66, 70, 73, 74, 75, 76, 83, 84, 86, 88, 89, 90, 93, 94, 95, 97, 100], "minut": [2, 4, 5, 8, 11, 13], "029": [2, 6, 97], "second": [2, 4, 5, 8, 11, 13, 78, 81, 89, 93], "estim": [2, 4, 5, 8, 11, 13, 89], "memori": [2, 4, 5, 8, 11, 13, 86, 89], "usag": [2, 4, 5, 8, 11, 13, 89, 90], "167": 2, "mb": [2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 97], "checking_validity_of_a_pag": [2, 6, 97], "ipynb": [2, 4, 5, 8, 11, 13], "py": [2, 4, 5, 6, 8, 9, 11, 13, 14, 91, 97], "galleri": [2, 4, 5, 8, 11, 13, 89, 97], "p": [4, 5, 27, 74, 89, 95], "call": [4, 11, 13, 17, 20, 22, 41, 42, 43, 46, 82, 89, 93], "rel": [4, 48, 90], "where": [4, 5, 8, 16, 17, 18, 19, 27, 32, 33, 47, 51, 52, 58, 66, 75, 78, 84, 89, 90, 93, 95], "everi": [4, 5, 8, 23, 27, 40, 48, 81, 93, 95], "vertex": [4, 27], "either": [4, 5, 17, 20, 34, 66, 67, 76, 78, 89, 95], "ancestor": [4, 30, 44], "x": [4, 5, 8, 11, 13, 16, 17, 18, 19, 40, 42, 43, 51, 52, 55, 66, 75, 76, 80, 81, 82, 83, 87, 89, 93, 95], "y": [4, 5, 8, 11, 13, 16, 17, 18, 19, 40, 51, 52, 55, 66, 76, 80, 81, 82, 87, 89, 93, 95], "other": [4, 5, 8, 11, 13, 19, 33, 66, 76, 78, 89, 93, 94, 95], "word": 4, "two": [4, 5, 8, 15, 18, 19, 23, 30, 43, 48, 49, 66, 76, 78, 79, 89, 90, 93, 95, 102], "cannot": [4, 30, 48, 80, 95], "d": [4, 5, 18, 19, 30, 32, 40, 41, 42, 43, 47, 51, 52, 58, 78, 93, 95], "seper": 4, "make": [4, 5, 20, 58], "activ": [4, 30], "regardless": [4, 30, 78], "what": [4, 5, 19, 20, 30, 76, 93, 100], "variabl": [4, 5, 8, 17, 30, 40, 48, 52, 59, 60, 74, 75, 76, 79, 83, 84, 88, 89, 93, 95], "admg": [4, 11, 13, 16, 18, 19, 49, 51, 64, 66, 69, 71, 81, 90, 93], "x4": 4, "x1": [4, 13], "x2": [4, 13], "x5": 4, "x6": 4, "x3": [4, 13], "l2": 4, "l1": 4, "paper": 4, "see": [4, 5, 11, 13, 16, 17, 30, 34, 50, 56, 57, 66, 67, 70, 71, 76, 78, 84, 87, 89, 90, 93], "inducing_path": [4, 6, 97], "given": [4, 5, 18, 19, 21, 24, 32, 39, 47, 48, 51, 52, 58, 73, 74, 76, 78, 81, 93, 95], "need": [4, 5, 48, 52, 90, 93, 98], "satisfi": 4, "function": [4, 5, 8, 11, 13, 19, 22, 32, 33, 46, 47, 48, 50, 52, 56, 57, 59, 62, 78, 80, 86, 89, 90, 92, 93, 94, 96, 99, 102, 103], "enough": 4, "pair": [4, 15, 16, 17, 18, 19, 23, 28, 32, 33, 47, 49, 51, 52, 54, 66, 78, 89, 93, 95], "c": [4, 5, 15, 22, 27, 29, 32, 46, 47, 48, 89], "skeleton": 4, "sens": [4, 33, 93], "among": [4, 42, 43, 53, 76, 78, 81, 84, 89, 93], "ii": 4, "primit": 4, "add": [4, 5, 8, 15, 16, 18, 19, 21, 51, 52, 54, 58, 73, 78, 90, 91, 93, 95, 102], "now": [4, 5, 8, 85, 95], "ha": [4, 5, 8, 17, 18, 19, 23, 27, 29, 40, 49, 50, 51, 58, 66, 78, 80, 81, 82, 84, 89, 90, 93, 95, 102, 103], "downstream": 4, "effect": [4, 13, 18, 19, 51, 58, 78, 84, 95, 98], "descend": [4, 45], "open": [4, 5, 90], "up": [4, 5, 52, 93], "still": [4, 5, 76, 89], "avail": [4, 91], "should": [4, 8, 18, 19, 51, 53, 57, 58, 78, 89, 90, 95, 99], "diego": [4, 40], "colombo": [4, 40], "marlo": [4, 40], "h": [4, 40], "maathui": [4, 40], "marku": [4, 40], "kalisch": [4, 40], "thoma": [4, 40], "richardson": [4, 40], "high": [4, 40, 74], "dimension": [4, 40, 89, 95], "annal": [4, 40], "statist": [4, 16, 40], "40": [4, 40, 80, 81, 82], "294": [4, 40], "321": [4, 40], "2012": [4, 40], "1214": [4, 40], "11": [4, 39, 40], "aos940": [4, 40], "995": [4, 6, 97], "165": [4, 6, 11, 13, 14, 97], "graphic": [5, 16, 75, 89, 99], "attach": [5, 95], "notion": 5, "each": [5, 8, 11, 13, 16, 17, 18, 19, 32, 33, 47, 51, 54, 58, 73, 74, 76, 78, 83, 86, 87, 88, 89, 93, 95], "miss": [5, 76, 84], "review": 5, "fundament": [5, 90], "nx": [5, 8, 11, 53, 61, 74, 78, 85, 89, 90, 93], "numpi": [5, 52, 66, 67, 69, 74, 86, 89, 93, 99, 102], "np": [5, 64, 66, 89], "panda": [5, 83, 85, 86, 89], "dowhi": [5, 86], "gcm": 5, "set_random_se": 5, "scipi": [5, 52, 84, 86, 93], "stat": [5, 84], "pywhy_nx": [5, 20, 64, 87, 90], "mathemat": 5, "tupl": [5, 8, 16, 17, 18, 19, 27, 28, 30, 42, 43, 48, 51, 52, 58, 62, 65, 76, 78, 89, 93, 95], "v": [5, 8, 18, 19, 22, 27, 40, 46, 48, 51, 55, 58, 62, 78, 81, 82, 89], "u": [5, 11, 13, 18, 19, 27, 40, 48, 51, 55, 58, 62, 75, 78, 89, 90, 95], "f": [5, 8, 16, 17, 89, 93, 95], "endogen": [5, 89], "observ": [5, 83, 85, 89, 95], "exogen": [5, 72, 73, 89, 95], "distribut": [5, 17, 73, 75, 76, 84, 89], "taken": [5, 48, 78], "togeth": 5, "four": [5, 78], "mechan": [5, 76], "problem": [5, 17], "almost": [5, 23, 29, 49, 103], "alwai": [5, 30, 52, 74, 80, 82, 89, 90, 93, 95], "argument": [5, 11, 13, 15, 16, 17, 18, 19, 48, 51, 52, 54, 55, 58, 78, 86, 89, 93, 95, 102], "parent": [5, 18, 19, 27, 51, 55, 73, 74, 75, 76, 89, 95], "ani": [5, 8, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 33, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 55, 58, 59, 62, 64, 65, 66, 69, 70, 72, 74, 76, 78, 83, 87, 89, 93, 95], "even": [5, 82], "though": 5, "typic": [5, 8, 48], "unknown": [5, 17], "ground": 5, "truth": 5, "evalu": 5, "build": [5, 90], "our": [5, 90, 95], "intuit": [5, 30, 48], "random": [5, 16, 17, 72, 73, 74, 75, 76, 83, 84, 85, 88, 95], "seed": [5, 72, 75, 76, 85], "reproduc": [5, 78], "12345": 5, "rng": [5, 95], "randomst": [5, 72], "mycustommodel": 5, "predictionmodel": 5, "def": 5, "__init__": 5, "self": 5, "coeffici": 5, "fit": [5, 89], "noth": 5, "know": [5, 93], "pass": [5, 11, 13, 18, 19, 48, 51, 55, 83, 86, 95], "predict": [5, 40], "clone": [5, 91], "don": [5, 78], "t": [5, 52, 53, 63, 78, 83, 88, 89, 93], "realli": 5, "actual": [5, 58, 78, 94], "1234": 5, "xy": [5, 11], "z": [5, 8, 11, 40, 52, 66, 80, 81, 82, 93, 95], "w": [5, 11], "_________": 5, "digraph": [5, 8, 11, 15, 16, 17, 18, 19, 34, 36, 51, 54, 55, 59, 60, 61, 73, 74, 75, 76, 78, 79, 87, 90, 93], "causal_model": 5, "probabilisticcausalmodel": 5, "set_causal_mechan": 5, "scipydistribut": 5, "binom": [5, 76], "5": [5, 6, 9, 13, 22, 34, 46, 84, 86, 88, 95, 97], "n": [5, 10, 18, 19, 22, 46, 51, 55, 75, 78, 95], "9": [5, 40, 52, 91, 93, 102], "additivenoisemodel": 5, "prediction_model": 5, "noise_model": 5, "8": [5, 80, 86, 103], "paramet": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93], "anyth": [5, 89, 95], "ensur": [5, 81], "fcm": 5, "correct": [5, 18, 19, 51, 55, 78], "local": [5, 86, 95], "hash": 5, "get": [5, 8, 11, 13, 75, 76, 78], "inconsist": [5, 24, 76, 89], "error": [5, 21, 33, 78, 94], "modifi": [5, 22, 46, 75, 76, 77, 83, 93], "afterward": 5, "without": [5, 11, 13, 15, 19, 20, 53, 58, 78, 84, 89, 93], "updat": [5, 18, 19, 51, 58, 78], "empti": [5, 30, 52, 80, 81, 82, 93, 95], "small": 5, "workaround": 5, "pre": [5, 66, 67, 102], "datafram": [5, 83, 85], "column": [5, 64, 69, 70, 83, 88], "sampl": [5, 37, 73, 74, 75, 76, 85, 89, 102], "draw_sampl": 5, "num_sampl": 5, "500": [5, 83], "head": 5, "col": 5, "show": [5, 8, 11, 86], "collid": [5, 27, 30, 31, 37, 40, 81], "collis": 5, "arrow": [5, 94], "00": [5, 6, 9, 10, 14, 97], "100": [5, 103], "819": 5, "94it": 5, "3": [5, 6, 8, 13, 17, 18, 19, 27, 41, 51, 58, 70, 76, 78, 82, 86, 88, 91, 93, 94, 103], "dtype": 5, "0x7ff3af1c6190": 5, "suffici": [5, 18, 50, 51, 93], "assumpt": [5, 18, 19, 51, 53, 93, 95], "queri": [5, 8, 52, 78, 93], "list": [5, 17, 27, 28, 30, 32, 36, 47, 48, 52, 54, 58, 59, 64, 65, 69, 70, 74, 75, 76, 78, 83, 88, 89, 90, 93, 95, 102, 103], "predecessor": [5, 95], "children": [5, 18, 19, 51, 55, 89, 95], "successor": 5, "explor": [5, 27, 95], "statement": [5, 23, 89], "impli": [5, 18, 51, 70, 76, 93], "d_separ": [5, 81], "home": 5, "circleci": 5, "project": [5, 70, 91, 102, 103], "intro": [5, 6, 97], "intro_causal_graph": [5, 6, 11, 13, 97], "140": 5, "deprecationwarn": 5, "deprec": [5, 89, 90], "v3": 5, "pleas": [5, 78, 90, 94], "is_d_separ": [5, 81], "143": 5, "semi": [5, 19, 22, 32, 46, 47, 93, 99, 103], "possibli": [5, 40, 41, 42, 43, 61, 75, 76, 78, 95, 99, 103], "depict": [5, 52, 93], "just": [5, 8, 15, 16, 17, 18, 19, 51, 55, 85, 91, 93, 94, 95], "set_nodes_as_latent_confound": [5, 11], "anymor": 5, "form": [5, 23, 31, 32, 33, 40, 47, 84, 92, 93, 94], "cluster": 5, "compon": [5, 15, 20, 41, 76, 89], "short": 5, "c_compon": [5, 15, 89], "m": [5, 20, 80, 81, 82, 95, 102], "similarli": [5, 78, 80, 93, 95], "m_separ": [5, 102], "bidirected_edge_nam": [5, 15, 16, 17, 19, 55, 79, 80, 81, 82, 93], "after": [5, 24, 48, 50], "besid": [5, 48, 78], "commonli": 5, "base": [5, 18, 19, 20, 24, 36, 51, 75, 78, 90, 93, 103], "seek": 5, "reconstruct": 5, "part": [5, 22, 46, 89], "next": [5, 13, 93, 95], "section": [5, 95], "briefli": 5, "overview": [5, 98], "usual": [5, 89, 90], "so": [5, 11, 19, 74, 78, 80, 89, 90, 93, 94, 95], "github": [5, 71, 90], "why": [5, 91], "_": [5, 89], "repo": 5, "relev": [5, 52, 74, 78, 86, 89, 90, 93, 95], "assum": [5, 58, 83, 85, 90, 93, 95, 96], "uncertain": [5, 31, 40], "via": [5, 8, 18, 19, 51, 55, 58, 78, 91], "ll": 5, "earlier": 5, "learnt": 5, "variant": 5, "pc": [5, 18, 51, 93], "let": [5, 11, 13], "add_edges_from": [5, 11, 13, 18, 19, 51, 58, 78], "undirected_edge_nam": [5, 11, 15, 16, 17, 18, 19, 51, 55, 80, 81, 82, 93], "unshield": [5, 37, 48], "present": [5, 8, 15, 18, 19, 20, 23, 29, 66, 80, 81, 82, 88, 93], "origin": [5, 17, 50, 58, 78, 95], "orient_uncertain_edg": [5, 11, 18, 19, 51, 55], "allow": [5, 8, 16, 18, 19, 40, 51, 53, 66, 81, 84, 89, 93, 94, 95], "complex": [5, 19, 93, 95], "judea": [5, 16, 17], "pearl": [5, 16, 17], "reason": 5, "cambridg": 5, "univers": 5, "press": [5, 20, 40], "usa": 5, "2nd": 5, "edit": 5, "2009": 5, "isbn": [5, 40], "052189560x": 5, "peter": [5, 20, 40], "spirt": [5, 40], "clark": [5, 40], "glymour": [5, 40], "richard": [5, 40], "schein": [5, 40], "causat": [5, 40], "search": [5, 22, 40, 41, 42, 43, 46, 48, 81], "volum": [5, 20, 40], "81": [5, 40], "mit": [5, 40], "01": [5, 6, 9, 14, 40, 97], "1993": [5, 16, 40], "978": [5, 40], "4612": [5, 40], "7650": [5, 40], "1007": [5, 40], "2748": [5, 40], "335": [5, 6, 97], "252": [5, 6, 8, 9, 97], "04": 6, "358": 6, "execut": [6, 9, 10, 14, 86, 97], "file": [6, 9, 10, 14, 68, 71, 86, 94, 97], "auto_exampl": [6, 9, 10, 14], "mem": [6, 9, 10, 14, 97], "introduct": [6, 15, 18, 19, 78, 81, 87, 97], "graph": [6, 7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 96, 97, 99, 100, 102, 103], "02": [6, 97], "166": [6, 97], "compris": [8, 78, 89], "user": [8, 16, 78, 86, 89, 90, 95], "arbitrari": [8, 78], "intern": [8, 15, 16, 18, 33, 51, 55, 90, 93], "semant": 8, "normal": [8, 74, 75], "appropri": 8, "relat": [8, 11, 13, 15, 89, 90, 93], "matplotlib": [8, 86], "pyplot": 8, "plt": 8, "pg": 8, "compos": 8, "directed_g": 8, "bidirected_g": 8, "add_nodes_from": [8, 78], "edge_typ": [8, 18, 19, 51, 54, 58, 78, 90, 93], "iv": 8, "po": [8, 11, 13, 87, 88], "spring_layout": [8, 11], "visual": [8, 13, 14, 15, 18, 19, 78, 87, 97], "fig": 8, "ax": 8, "subplot": 8, "draw_networkx": 8, "get_graph": [8, 78, 90], "set_titl": 8, "instrument": 8, "tight_layout": 8, "block": 8, "is_direct": [8, 78], "multigraph": [8, 78], "is_multigraph": [8, 78], "bidirected_edg": [8, 15, 19, 55, 93], "0x7ff3dc14ba50": 8, "0x7ff3d92d90d0": 8, "similar": [8, 19, 22, 32, 46, 47, 73, 78, 89, 90, 93], "default": [8, 13, 15, 16, 17, 18, 19, 21, 24, 27, 30, 33, 40, 41, 42, 43, 48, 51, 52, 53, 54, 58, 59, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95], "store": [8, 11, 13, 15, 18, 19, 64, 71, 78, 92, 93, 94], "insid": [8, 102], "assert": [8, 90], "order": [8, 11, 18, 19, 22, 36, 46, 51, 52, 53, 55, 63, 64, 69, 70, 78, 83, 88, 93, 95], "len": [8, 78], "number_of_nod": [8, 78], "new": [8, 78, 90, 95, 100], "has_nod": [8, 78], "add_nod": 8, "remove_nod": 8, "per": [8, 84], "specifi": [8, 11, 18, 19, 51, 58, 76, 78, 79, 84, 90, 93, 95], "when": [8, 18, 19, 24, 48, 51, 58, 78, 80, 84, 86, 89, 90, 95, 100], "you": [8, 19, 76, 78, 83, 90, 91, 93, 94, 98], "well": [8, 36, 78, 95], "has_edg": [8, 62, 78, 90], "standard": [8, 94], "adj": [8, 78], "degre": [8, 78], "instead": [8, 78, 83], "moreov": [8, 75, 76, 78], "neighbor": [8, 78], "uni": 8, "counterpart": 8, "mani": [8, 78, 90], "connect": [8, 16, 18, 20, 28, 48, 51, 52, 55, 76, 78, 79, 81, 84, 93], "iter": [8, 15, 18, 19, 51, 53, 55, 63, 78, 93], "through": [8, 78, 89, 95], "item": [8, 78], "dictionari": [8, 11, 13, 18, 19, 51, 58, 78, 88, 90, 95], "171": [8, 9, 97], "plot_mixed_edge_graph": [8, 9, 97], "mixededg": [9, 97], "mixededgegraph": [9, 15, 16, 18, 19, 20, 58, 64, 79, 85, 87, 90, 93, 97, 102], "000": 10, "choos": [11, 13, 24], "place": [11, 13, 20, 75, 76, 79], "fix": [11, 76, 100, 101, 102, 103], "easili": 11, "creat": [11, 13, 25, 52, 59, 76, 78, 90, 93], "posit": [11, 13, 87, 88, 102], "label": [11, 18, 19, 34, 51, 58, 78, 79, 87, 102], "altern": 11, "own": [11, 94], "manual": [11, 71, 78], "softwar": [11, 13, 90], "dagitti": [11, 99], "arrai": [11, 13, 52, 64, 66, 67, 69, 70, 83, 88, 89, 93, 94, 102], "15471958": 11, "42925134": 11, "7990356": 11, "90151211": 11, "36916753": 11, "62354034": 11, "6548282": 11, "09580111": 11, "92997669": 11, "cpdag": [11, 13, 19, 25, 33, 38, 39, 51, 64, 67, 69, 70, 71, 93, 102, 103], "dummi": [11, 13], "borrow": [11, 13], "pos_g": [11, 13], "k": [11, 58, 78], "inspect": [11, 13], "notic": [11, 13], "kei": [11, 13, 15, 16, 18, 19, 51, 52, 54, 58, 78, 87, 88, 89, 93, 95], "coordin": [11, 13, 87], "valu": [11, 13, 15, 16, 18, 19, 51, 52, 54, 58, 66, 67, 73, 74, 76, 78, 87, 89, 93, 94, 95], "dot_g": [11, 13], "dot_admg": 11, "dot_cpdag": 11, "dot_pag": 11, "engin": [11, 13, 90], "neato": [11, 13], "leverag": [11, 95], "inform": [11, 16, 17, 67, 78, 84, 86, 87, 89, 95], "document": [11, 56, 57, 70, 71, 78, 87, 89, 90, 92, 93], "doc": [11, 78, 87, 89], "405": [11, 14, 97], "draw_and_compare_graphs_with_same_layout": [11, 14, 97], "rather": [13, 19, 78, 93, 95], "messi": 13, "output": [13, 66, 68, 83, 86, 93, 95], "stationarytimeseriesdigraph": [13, 53, 59, 60, 84, 93], "timeseries_layout": 13, "max_lag": [13, 52, 53, 54, 56, 57, 58, 59, 60, 83, 84, 85, 93], "ts_edg": 13, "first": [13, 16, 22, 46, 48, 50, 76, 78, 80, 81, 89, 91, 93, 95], "default_g": 13, "nice": 13, "variable_ord": [13, 88], "scale": [13, 88], "7": [13, 82, 86], "33333333": 13, "977": [13, 14, 97], "plot_timeseries_graph": [13, 14, 97], "382": 14, "incoming_directed_edg": [15, 16, 17, 18, 19, 51, 55, 93], "none": [15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 40, 41, 42, 43, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95], "incoming_bidirected_edg": [15, 16, 17, 19, 55, 93], "incoming_undirected_edg": [15, 16, 17, 18, 19, 51, 55, 93], "str": [15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 31, 33, 40, 41, 42, 43, 44, 45, 46, 48, 51, 54, 55, 58, 59, 62, 64, 65, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 87, 93], "attr": [15, 16, 17, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 78, 87, 93], "constitut": [15, 50, 89, 93], "did": [15, 93], "while": [15, 89, 90, 93], "input": [15, 16, 17, 18, 19, 51, 52, 74, 75, 78, 92, 93, 95], "option": [15, 16, 17, 18, 19, 21, 22, 24, 27, 33, 40, 41, 42, 43, 46, 48, 51, 52, 53, 54, 58, 59, 64, 72, 73, 74, 75, 76, 78, 83, 84, 85, 87, 88, 93], "initi": [15, 16, 17, 18, 19, 51, 52, 78, 83, 85, 93], "accept": [15, 16, 17, 18, 19, 51, 93], "keyword": [15, 16, 18, 19, 51, 52, 54, 58, 78, 90, 93, 95, 102], "attribut": [15, 16, 18, 19, 24, 34, 51, 52, 54, 58, 74, 75, 76, 77, 78, 87, 89, 93, 95], "subgraph": [15, 16, 17, 18, 19, 40, 51, 58, 78, 93], "underneath": [15, 18, 19, 93], "hood": [15, 18, 19, 93], "non": [15, 18, 23, 27, 30, 31, 33, 49, 53, 66, 78, 80, 81, 93, 95], "stand": [15, 18, 89, 93], "indic": [15, 17, 18, 19, 23, 29, 49, 50, 52, 66, 89, 93, 95], "access": [15, 18, 19, 51, 58, 78, 89, 93], "sub_directed_graph": [15, 18, 19, 51, 55, 93], "Their": [15, 18, 19, 93], "format": [15, 18, 19, 52, 68, 71, 93, 94], "directed_edg": [15, 18, 19, 51, 55, 93], "sub_bidirected_graph": [15, 19, 55, 93], "sub_undirected_graph": [15, 18, 19, 51, 55, 93], "undirected_edg": [15, 18, 19, 51, 55, 93], "cycl": [15, 18, 20, 23, 29, 33, 49, 84, 90, 93, 103], "exist": [15, 16, 18, 22, 30, 46, 58, 73, 74, 75, 76, 78, 80, 82, 90, 93, 96], "beyond": [15, 93], "properti": [15, 18, 19, 51, 55, 78, 93], "map": [15, 16, 17, 18, 19, 51, 55, 66, 67, 78, 89, 90, 93, 94, 95], "edgeview": [15, 18, 19, 51, 55, 78], "trivial": [15, 48], "themself": 15, "comp": 15, "sub": [15, 18, 19, 20, 51, 55, 78], "augment": [16, 17, 21, 24, 80, 93, 95], "diagram": [16, 17, 76, 99], "intervent": [16, 17, 72, 89, 93, 102], "were": [16, 79], "introduc": 16, "hard": 16, "soft": [16, 17, 72], "explicit": [16, 89], "tbd": 16, "guid": [16, 89, 90], "exactli": [16, 17, 58], "index": [16, 17, 52, 64, 70, 90, 93], "number": [16, 17, 18, 19, 21, 22, 24, 28, 46, 51, 58, 73, 74, 76, 78, 81, 82, 83, 84, 85, 89, 93, 95], "appli": [16, 17, 20, 50, 72, 73, 75, 89], "rightarrow": [16, 17, 66, 76, 95], "regular": [16, 17, 76], "aspect": [16, 90], "proceed": [16, 17, 20], "49th": 16, "session": 16, "institut": 16, "page": [16, 26, 90, 100], "399": 16, "401": 16, "incoming_circle_edg": [17, 19, 55, 93], "been": [17, 50, 80], "It": [17, 23, 41, 78, 88, 89, 95], "handl": [17, 21, 24, 66, 78, 99], "target": [17, 22, 46, 72, 77, 89, 93], "integ": [17, 22, 46, 74, 78, 89, 95], "sigma": 17, "special": [17, 19, 48, 89, 93], "known": [17, 90, 93, 95], "domain": [17, 21, 24, 28, 76], "environ": 17, "amin": 17, "jaber": 17, "murat": 17, "kocaoglu": 17, "karthikeyan": 17, "shanmugam": 17, "elia": 17, "bareinboim": 17, "character": [17, 93], "advanc": 17, "neural": 17, "process": [17, 83, 84, 85, 93, 95], "system": [17, 86, 95], "33": 17, "9551": 17, "9561": 17, "2020": [17, 20, 86], "2019": [17, 80, 81, 82], "fusion": 17, "nation": 17, "academi": 17, "113": 17, "27": 17, "7345": 17, "7352": 17, "juli": 17, "2016": 17, "publish": 17, "pna": 17, "content": 17, "1073": 17, "1510507113": 17, "uncertainti": [18, 19, 20, 51, 93], "b": [18, 29, 32, 47, 51, 70, 80, 81, 82, 93], "implicit": [18, 19, 51, 93], "score": [18, 51, 93], "ge": [18, 51, 93], "approach": [18, 19, 51, 90, 93, 102], "suspect": [18, 51, 93], "directino": [18, 93], "u_of_edg": [18, 19, 51, 58, 62, 78], "v_of_edg": [18, 19, 51, 58, 62, 78], "automat": [18, 19, 51, 52, 58, 78, 93], "alreadi": [18, 19, 48, 51, 58, 78, 83, 89, 95], "u_for_edg": [18, 19, 51, 58, 78], "v_for_edg": [18, 19, 51, 58, 78], "string": [18, 19, 51, 58, 78, 87, 89, 95], "hashabl": [18, 19, 51, 58, 78], "assign": [18, 19, 51, 58, 69, 70, 74, 78, 95], "collect": [18, 19, 51, 58, 78], "ebunch_to_add": [18, 19, 51, 58, 78], "twice": [18, 19, 51, 58, 78], "duplic": [18, 19, 51, 58, 78], "ebunch": [18, 19, 51, 58, 78], "take": [18, 19, 41, 51, 58, 75, 76, 78, 90, 92, 93, 95], "preced": [18, 19, 51, 58, 78, 95], "int": [18, 19, 21, 22, 24, 27, 28, 30, 31, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 69, 70, 72, 74, 75, 76, 78, 83, 84, 85, 88, 93], "float": [18, 19, 22, 24, 27, 30, 31, 40, 41, 42, 43, 44, 45, 46, 48, 51, 55, 58, 59, 62, 64, 65, 69, 70, 72, 73, 74, 75, 76, 78, 83, 84, 88], "point": [18, 19, 20, 22, 46, 51, 52, 53, 55, 58, 62, 79, 83, 84, 85, 88, 89, 93, 95], "possible_children": [18, 19, 51, 55], "consid": [18, 19, 22, 46, 48, 51, 55, 58, 85, 89, 95], "possible_par": [18, 19, 51, 55], "term": [19, 93, 95, 99], "essenti": [19, 93], "extend": [19, 93], "sub_circle_graph": [19, 55, 93], "circle_edg": [19, 55, 93], "exponenti": [19, 93], "increas": [19, 93], "occur": [19, 72, 83, 93], "main": [19, 78, 93], "complic": [19, 90, 93], "aris": [19, 93], "combin": [19, 93, 95], "abov": [19, 83, 93, 95], "certain": [19, 48, 90, 93], "kind": [19, 78, 93], "matter": [19, 93], "loss": [19, 93], "deal": [19, 93], "flip": [19, 93], "discuss": [19, 93, 95], "dictat": [19, 93], "sort": [19, 36, 93, 95], "There": [19, 71, 78, 93], "opposit": [19, 93], "qualifi": 19, "yield": [19, 78], "directed_edge_typ": 20, "bidirected_edge_typ": 20, "copi": [20, 58, 70, 78], "bool": [20, 23, 27, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 61, 62, 73, 74, 78, 80, 81, 86, 93], "acyclifi": 20, "cyclic": [20, 61, 102], "aci": 20, "replac": [20, 78, 80], "strongli": 20, "fulli": [20, 79, 95], "Then": [20, 50, 66, 76, 91, 95], "sc": 20, "made": 20, "jori": 20, "mooij": 20, "tom": 20, "claassen": 20, "jona": 20, "david": [20, 34, 36, 39], "sontag": 20, "editor": 20, "36th": 20, "confer": 20, "uai": 20, "124": 20, "machin": [20, 34, 36, 39], "research": [20, 34, 36, 39, 90], "1159": 20, "1168": 20, "pmlr": 20, "03": 20, "06": [20, 97], "aug": 20, "mlr": 20, "v124": 20, "mooij20a": 20, "html": [20, 78], "n_domain": [21, 24, 76], "on_error": [21, 33], "augmentedgraph": [21, 24, 93, 102], "ignor": [21, 24, 30, 33, 58, 78], "warn": [21, 24, 71, 78, 89], "cutoff": [22, 46], "depth": [22, 46], "stop": [22, 46], "length": [22, 40, 41, 42, 43, 46, 64, 69, 70, 83, 89], "veri": [22, 32, 46, 47, 90], "simple_path": [22, 32, 46, 47], "all_simple_path": [22, 46], "larg": [22, 46, 89, 94], "long": [22, 46], "runtim": [22, 46, 81, 82], "has_path": [22, 46], "befor": [22, 46, 48, 95], "r": [22, 46, 70, 80, 82, 95, 99], "sedgewick": [22, 46], "addison": [22, 46], "weslei": [22, 46], "profession": [22, 46], "3rd": [22, 46, 83], "ed": [22, 46], "2001": [22, 46], "step": 23, "involv": 23, "is_valid": [23, 49, 50], "boolean": [23, 29, 49, 50, 81], "all_poss_snod": 24, "comput": [24, 39, 41, 42, 43, 48, 61, 75, 76, 78, 95], "invari": [24, 76, 95], "proce": 24, "domain_id": [24, 95], "1877": 26, "max_path_length": [27, 40, 41, 42, 43, 48], "discrimin": 27, "least": 27, "maximum": [27, 28, 40, 41, 42, 43, 48, 52, 53, 54, 59, 84, 85, 93], "distanc": [27, 48], "1000": [27, 40, 41, 42, 43, 48, 83, 84, 85], "explored_nod": 27, "disc_path": 27, "found_discriminating_path": 27, "wa": [27, 33, 80, 82], "max_numb": 28, "id": [28, 95], "connected_pair": 28, "adc": 29, "adc_pres": 29, "node_x": [30, 40, 41, 42, 43], "node_i": [30, 40, 41, 42, 43], "destin": 30, "otherwis": [30, 78, 82], "therefor": [30, 66, 84, 90, 94, 95], "along": [30, 40], "henc": [30, 48, 95], "node1": 31, "node2": 31, "node3": 31, "noncollid": 31, "is_noncollid": 31, "nonempti": [32, 47], "sequenc": [32, 47, 78], "appear": [32, 47, 48, 78], "onc": [32, 47, 78], "toward": [32, 47, 89], "is_simple_path": [32, 47], "most": [33, 89, 90, 93], "compliant": [33, 93], "constrain": 33, "compel": 34, "revers": 34, "maxwel": [34, 36, 39], "chicker": [34, 36, 39], "bayesian": [34, 36, 39], "network": [34, 36, 39, 84], "journal": [34, 36, 39], "445": [34, 36, 39], "498": [34, 36, 39], "2002": [34, 36, 39], "provabl": 35, "tractabl": 35, "featur": [35, 78, 89, 90, 100, 101, 102, 103], "thu": [35, 91], "produc": 35, "topolog": [36, 95], "accord": [36, 66, 67], "obei": 36, "meek": 37, "dsep": 40, "characterist": 40, "subpath": 40, "tripl": 40, "triangl": 40, "meet": 40, "fact": 40, "shield": 40, "smaller": [41, 42, 43], "subset": [41, 42, 43, 76], "intersect": 41, "biconnect": 41, "restrict": [41, 42, 43], "stationarytimeseriespag": [42, 43, 93], "pdst": 42, "pds_t_set": [42, 43], "lag": [42, 43, 52, 53, 54, 58, 59, 62, 63, 83, 84, 85, 88, 89, 93], "being": [42, 43, 78, 89, 95], "less": [42, 43, 58, 89], "max": [42, 43, 52, 58, 62, 63, 88, 93], "pdst_path": 43, "addit": [43, 48, 72, 75, 84, 86, 87, 90, 93, 95], "first_nod": 48, "second_nod": 48, "force_circl": 48, "forbid_nod": 48, "uncov": [48, 102], "explan": 48, "could": [48, 52, 93], "mean": [48, 75, 76, 78, 93, 95], "previou": [48, 83], "travers": 48, "forbidden": 48, "immedi": 48, "third": 48, "come": 48, "r5": 48, "prevent": 48, "maxim": 49, "bi": 49, "said": [50, 95], "establish": 50, "back": 50, "reconvert": 50, "incoming_graph_data": [52, 53, 56, 57, 93], "check_time_direct": [52, 93], "repeat": [52, 93], "themselv": [52, 93], "cross": [52, 93], "product": [52, 93], "to_networkx_graph": [52, 93], "dict": [52, 74, 78, 87, 88, 93], "2d": [52, 88, 89, 93], "spars": [52, 93], "matrix": [52, 66, 89, 93], "direction": [52, 53, 93], "properli": [52, 93], "delet": [52, 76, 84, 93], "depend": [52, 83, 86, 91, 93], "enabl": [53, 93, 95], "forward": [53, 93], "serv": [53, 93], "layer": [53, 93, 95], "imbu": [56, 57, 58, 93, 95], "basetimeseriesgraph": [56, 57, 93], "add_homologous_edg": 58, "homolog": [58, 62, 93], "tsnode": [58, 62, 89, 93], "absolut": 58, "equal": [58, 74, 83], "preserv": [58, 89], "as_view": [58, 78], "read": [58, 78, 89], "to_direct": [58, 78], "node_attr_dict_factori": [58, 78], "alia": [58, 78], "tsdict": 58, "node_dict_factori": [58, 78], "networkxerror": [58, 78], "remove_edges_from": [58, 78], "Will": [58, 78, 86], "fail": [58, 78, 82], "silent": [58, 78], "remove_homologous_edg": 58, "include_contemporan": 59, "create_us": [59, 60], "analog": [59, 93], "_description_": 59, "func": [59, 95], "include_self_loop": 61, "summari": [61, 85], "timeseriesdigraph": [61, 93], "summary_g": 61, "_must_": 62, "timeseriesgraph": [63, 88, 93], "arr": [64, 66, 69, 70], "ndarrai": [64, 65, 83], "arr_idx": [64, 69, 70], "graph_typ": [64, 69, 71], "shape": [64, 66, 67, 69, 70, 83, 84, 85, 87, 89], "n_node": [64, 66, 67, 69, 70, 84, 85], "row": [64, 69, 70, 88, 89], "causal_graph": [66, 67], "instanc": [66, 67, 68, 71, 83, 89], "numpy_graph": [66, 67], "ijth": 66, "entri": [66, 89, 95], "zero": 66, "symmetr": [66, 89], "jith": 66, "20": 66, "edge_to_value_map": [66, 69], "pcalg": [66, 67, 70, 99, 102], "numer": [66, 78, 90], "treat": [66, 78], "leftrightarrow": [66, 95], "element": [66, 93, 99], "21": [66, 86, 102], "issu": [66, 90, 94], "nodelist": 66, "bow_graph": 66, "numpy_to_graph": 66, "pcalg_to_graph": 67, "filenam": [68, 71], "tetrad": [68, 71, 99, 102], "text": [68, 71, 75, 94], "write": [68, 86], "enumer": [69, 70, 94], "amat_typ": 70, "pcalgpagendpoint": 70, "amattyp": 70, "cran": 70, "web": 70, "pdf": 70, "conveni": 70, "amat": 70, "No": [70, 93], "edgemark": 70, "oppos": 70, "matric": 70, "cmu": 71, "phil": 71, "io": [71, 89, 100], "guarante": 71, "your": [71, 90], "adher": [71, 89], "random_st": [72, 73, 74, 75, 76, 83, 84, 85], "interven": 72, "simultanen": 72, "perturb": 72, "gaussian_noise_funct": [72, 75, 76, 95], "nois": [72, 73, 74, 95], "cpd": [73, 95], "tabularcpd": [73, 74, 95], "noise_ratio": [73, 74, 95], "overwrit": [73, 74], "probabl": [73, 74, 84, 89, 95], "wrapper": [73, 102], "around": [73, 88, 90, 95], "bayesiannetwork": 73, "add_cpd": 73, "tabl": [73, 95], "state": [73, 83, 84, 95], "associ": [73, 78, 89, 95], "ratio": [73, 74, 88], "uniform": [73, 74, 95], "90": 73, "cardinality_lim": 74, "weight_lim": 74, "noise_ratio_lim": 74, "cardin": 74, "pgmpy": [74, 95], "parent_funct": [74, 75, 76, 95], "exogenous_funct": [74, 95], "exogenous_distribut": [74, 95], "cpt": [74, 95], "weight": [74, 75, 76, 78, 84, 94, 95], "categori": 74, "choic": [74, 78, 93], "rang": 74, "binari": 74, "sum": [74, 78], "low": [74, 90], "randomgener": 74, "alter": [74, 95], "node_mean_lim": [75, 76], "node_std_lim": [75, 76], "edge_funct": [75, 76], "callabl": [75, 76, 84, 89, 95], "edge_weight_lim": [75, 76], "parametr": 75, "uniformli": [75, 76, 95], "limit": 75, "fashion": [75, 88, 90], "x_i": 75, "sum_": 75, "w_j": 75, "f_j": 75, "x_j": 75, "epsilon_i": 75, "sim": 75, "mu_i": 75, "sigma_i": 75, "lower": [75, 76], "upper": [75, 76, 94], "bound": [75, 76], "std": [75, 76, 95], "iid": [75, 76], "transform": [75, 76], "nonlinear": [75, 76, 95], "lambda": [75, 76], "ident": [75, 76, 78], "linear_gaussian": [75, 76, 95], "n_nodes_with_s_nod": 76, "n_invariances_to_tri": 76, "multi": 76, "particular": 76, "across": [76, 78, 84, 89, 93], "split": 76, "make_graph_linear_gaussian": [76, 102], "n_": 76, "randomli": [76, 95], "remain": 76, "At": 76, "keep": [76, 88], "g1": 77, "g2": 77, "link": [78, 89, 100], "experiment": [78, 89, 99], "meant": 78, "caution": [78, 90], "multidigraph": 78, "mention": 78, "below": [78, 89, 90], "match": 78, "entir": 78, "add_edge_typ": [78, 90], "edge_subgraph": 78, "cach": [78, 89], "few": [78, 93], "wherea": 78, "__contains__": 78, "__getitem__": 78, "__iter__": 78, "__len__": 78, "hold": 78, "itself": [78, 89], "behav": 78, "idiom": 78, "loop": 78, "nbr": 78, "datadict": 78, "adjacencyview": 78, "clear_edge_typ": 78, "clear": 78, "shallow": 78, "deepcopi": 78, "docstr": [78, 89], "peopl": 78, "might": [78, 90], "nbunch": 78, "degreeview": 78, "report": [78, 86], "incid": 78, "deg_dict": 78, "request": [78, 90], "ddict": 78, "quietli": 78, "out": [78, 88, 90, 95], "get_edge_data": 78, "doesn": 78, "edge_dict": 78, "graph_attr_dict_factori": 78, "keyerror": 78, "edge_ind": 78, "identifi": [78, 89], "technic": [78, 83, 89], "control": 78, "nbunch_it": 78, "membership": 78, "niter": 78, "number_of_edge_typ": 78, "number_of_edg": [78, 90], "count": 78, "nedg": 78, "size": 78, "todo": [78, 95], "expect": [78, 90], "subclass": 78, "attempt": 78, "contrast": 78, "deep": 78, "transfer": 78, "to_undirect": 78, "desir": 78, "unless": [78, 93], "uc_label": 79, "g_copi": 79, "minim": [80, 82, 89, 102], "testminsep": 80, "line": [80, 82], "6": [80, 86, 97, 102], "neq": 80, "r_x": 80, "r_y": 80, "deem": [80, 82], "necessari": [80, 82], "moral": 80, "candid": 80, "later": [80, 82], "largest": [80, 82], "vertic": [80, 81, 82], "is_minimal_m_sep": 80, "els": 80, "van": [80, 81, 82], "der": [80, 81, 82], "zander": [80, 81, 82], "li\u015bkiewicz": [80, 81, 82], "textor": [80, 81, 82], "adjust": [80, 81, 82], "criteria": [80, 81, 82], "framework": [80, 81, 82], "vol": [80, 81, 82], "270": [80, 81, 82], "pp": [80, 81, 82], "2018": [80, 81, 82], "12": [80, 81, 82], "006": [80, 81, 82], "testsep": [81, 82], "further": 81, "breadth": 81, "findsep": 82, "math": 82, "findminsep": 82, "anterior": 82, "union": 82, "var_arr": [83, 85], "n_time": [83, 84, 85], "n_realiz": [83, 84], "var_nam": 83, "var": [83, 84, 85], "arraylik": [83, 84, 85, 88], "n_variabl": [83, 84], "vector": [83, 89], "auto": 83, "regress": 83, "dimens": 83, "autoregress": [83, 85], "realiz": [83, 84], "node_nam": 83, "multivari": [83, 95], "p_time_self": 84, "p_time_var": 84, "p_contemporan": 84, "weight_dist": 84, "_continuous_distn": 84, "norm_gen": 84, "contemporan": 84, "instantan": 84, "simulate_data_from_var": 84, "var_model": 84, "never": 84, "worri": 84, "about": [84, 90], "situat": 84, "instantaen": 84, "x_df": 85, "dataset": [85, 89, 95], "right": [85, 88], "fid": 86, "show_path": 86, "debug": 86, "help": 86, "triag": 86, "bug": 86, "sy": 86, "stdout": 86, "develop": [86, 90, 102, 103], "submit": 86, "platform": 86, "linux": 86, "15": 86, "1067": 86, "aw": 86, "x86_64": 86, "glibc2": 86, "feb": 86, "37": 86, "gcc": 86, "usr": 86, "bin": 86, "cpu": 86, "36": 86, "core": [86, 99], "68": [86, 102], "gb": 86, "openbla": 86, "17": [86, 102], "thread": 86, "sklearn": 86, "backend": 86, "macosx": 86, "Not": 86, "version": [86, 89, 90, 93, 100], "info": 86, "joblib": [86, 89], "squar": 87, "rankdir": 87, "plaintext": 87, "dot": 87, "languag": 87, "center": 88, "aspect_ratio": 88, "3333333333333333": 88, "left": 88, "top": [88, 90], "bottom": 88, "factor": [88, 95], "plot": 88, "width": 88, "height": 88, "lai": 88, "histor": 88, "hope": 89, "tacit": 89, "convent": 89, "contributor": [89, 90], "aim": 89, "redund": 89, "begin": 89, "didn": 89, "elsewher": 89, "1d": 89, "whose": 89, "often": 89, "public": [89, 90], "formal": 89, "maintain": [89, 90, 94], "backward": 89, "compat": 89, "privat": 89, "assur": 89, "stabl": [89, 90], "__call__": 89, "embed": 89, "etc": [89, 90], "__doc__": 89, "pep257": 89, "numpydoc": 89, "give": [89, 95, 98], "basic": [89, 90], "doctest": 89, "directori": 89, "exemplifi": 89, "referenc": 89, "sometim": 89, "built": 89, "alongsid": 89, "descript": [89, 90], "tool": [89, 90], "usabl": 89, "subject": 89, "futur": [89, 95], "polici": 89, "letter": 89, "readthedoc": 89, "facilit": 89, "parallel": 89, "effici": [89, 100, 101, 102, 103], "delai": 89, "n_featur": 89, "n_sampl": 89, "shorthand": 89, "distinctli": 89, "noun": 89, "langl": 89, "rangl": 89, "off": [89, 93], "symmetric_difference_map": 89, "composit": 90, "encourag": 90, "pull": 90, "contribut": [90, 94, 102, 103], "exhaust": 90, "earli": 90, "best": 90, "goal": 90, "converg": 90, "releas": 90, "trait": 90, "major": [90, 93, 100, 101, 102, 103], "alpha": [90, 99], "drastic": 90, "robust": 90, "commun": [90, 94], "curv": 90, "transit": 90, "lie": 90, "hand": 90, "summar": 90, "implicitli": [90, 95], "focus": 90, "design": 90, "lightweight": 90, "sole": 90, "instal": 90, "histori": 90, "yourself": 90, "interest": 90, "solv": 90, "improv": [90, 102, 103], "overal": 90, "hesit": 90, "reach": 90, "who": [90, 102, 103], "codebas": 90, "close": 91, "pypi": 91, "poetri": [91, 103], "recommend": 91, "repositori": 91, "git": 91, "cd": 91, "heavili": 93, "reli": 93, "cover": 93, "concept": [93, 98, 99], "glossari": [93, 99], "ye": 93, "augmentedpag": 93, "stationarytimeseriesgraph": 93, "stationarytimeseriesmixededgegraph": [93, 102], "stationarytimeseriescpdag": 93, "sure": 93, "past": 93, "moment": 93, "embodi": 93, "stationar": 93, "propag": 93, "set_stationar": 93, "modif": 93, "subtl": 93, "impact": 93, "mec": 93, "timeseriesmixededgegraph": 93, "light": 94, "quit": 94, "de": 94, "facto": 94, "offer": 94, "interpret": 94, "triangular": 94, "fill": 94, "against": [94, 95], "plan": 95, "yet": 95, "drop": 95, "roadmap": 95, "simultan": 95, "gaussin": 95, "child": 95, "affect": 95, "_parent": 95, "leftarrow": 95, "observed_par": 95, "arbitrarili": 95, "simul": [95, 99], "determinist": 95, "stochast": 95, "inher": 95, "natur": 95, "univari": 95, "presum": 95, "parent_1": 95, "parent_2": 95, "treatment": 95, "intervention_funct": 95, "domain_parent_funct": 95, "domain_exogenous_distribut": 95, "smallest": 95, "again": 95, "respect": 95, "unalter": 95, "But": 95, "mathbb": 95, "sample_from_graph": 95, "instanti": 95, "dure": 95, "intricaci": 95, "apriori": 95, "pa_x": 95, "noisi": 95, "hyperparamet": 95, "overridden": 95, "nest": 95, "citat": 95, "FOR": 95, "sel": 95, "ones": 95, "extra": 95, "invariant_domain": 95, "domain_gaussian_noise_funct": 95, "faith": 96, "992": 97, "everyth": 98, "multidomain": [99, 102], "semi_directed_path": 99, "all_semi_directed_path": 99, "is_semi_directed_path": 99, "export": [99, 102], "java": 99, "enhanc": [100, 101, 102, 103], "tip": 100, "subscrib": 100, "notifi": 100, "aryan": [102, 103], "roi": [102, 103], "71": 102, "minimal_m_separ": 102, "bf": 102, "jaron": 102, "lee": 102, "53": 102, "balltre": 102, "48": 102, "46": 102, "uncovered_pd_path": 102, "42": 102, "adam": [102, 103], "li": [102, 103], "possible_ancestor": 102, "possible_descend": 102, "discriminating_path": 102, "pds_path": 102, "acyclif": 102, "julien": 102, "siebert": 102, "26": 102, "29": 102, "49": 102, "causallearn": 102, "51": 102, "60": 102, "anank": 102, "63": 102, "commit": 102, "hook": 102, "75": 102, "make_graph_multidomain": 102, "77": 102, "78": 102, "82": 102, "thank": [102, 103], "everyon": [102, 103], "mainten": [102, 103], "incept": [102, 103], "91": 103, "96": 103, "93": 103, "99": 103, "suit": 103, "101": 103, "pdag_to_cpdag": 103, "pdag_to_dag": 103, "dag_to_cpdag": 103, "102": 103, "setup": 103, "110": 103, "proper": 103, "112": 103}, "objects": {"": [[0, 0, 0, "-", "pywhy_graphs"]], "pywhy_graphs": [[15, 1, 1, "", "ADMG"], [16, 1, 1, "", "AugmentedGraph"], [17, 1, 1, "", "AugmentedPAG"], [18, 1, 1, "", "CPDAG"], [19, 1, 1, "", "PAG"], [92, 0, 0, "-", "algorithms"], [93, 0, 0, "-", "classes"], [94, 0, 0, "-", "export"], [95, 0, 0, "-", "functional"], [96, 0, 0, "-", "simulate"], [86, 4, 1, "", "sys_info"]], "pywhy_graphs.ADMG": [[15, 2, 1, "", "bidirected_edge_name"], [15, 2, 1, "", "bidirected_edges"], [15, 3, 1, "", "c_components"], [15, 2, 1, "", "directed_edge_name"], [15, 2, 1, "", "directed_edges"], [15, 3, 1, "", "sub_bidirected_graph"], [15, 3, 1, "", "sub_directed_graph"], [15, 3, 1, "", "sub_undirected_graph"], [15, 2, 1, "", "undirected_edge_name"], [15, 2, 1, "", "undirected_edges"]], "pywhy_graphs.CPDAG": [[18, 3, 1, "", "add_edge"], [18, 3, 1, "", "add_edges_from"], [18, 2, 1, "", "directed_edge_name"], [18, 2, 1, "", "directed_edges"], [18, 3, 1, "", "orient_uncertain_edge"], [18, 3, 1, "", "possible_children"], [18, 3, 1, "", "possible_parents"], [18, 3, 1, "", "sub_directed_graph"], [18, 3, 1, "", "sub_undirected_graph"], [18, 2, 1, "", "undirected_edge_name"], [18, 2, 1, "", "undirected_edges"]], "pywhy_graphs.PAG": [[19, 3, 1, "", "add_edge"], [19, 3, 1, "", "add_edges_from"], [19, 3, 1, "", "children"], [19, 2, 1, "", "circle_edge_name"], [19, 2, 1, "", "circle_edges"], [19, 3, 1, "", "orient_uncertain_edge"], [19, 3, 1, "", "parents"], [19, 3, 1, "", "possible_children"], [19, 3, 1, "", "possible_parents"], [19, 3, 1, "", "sub_circle_graph"]], "pywhy_graphs.algorithms": [[20, 4, 1, "", "acyclification"], [21, 4, 1, "", "add_all_snode_combinations"], [22, 4, 1, "", "all_semi_directed_paths"], [23, 4, 1, "", "check_pag_definition"], [24, 4, 1, "", "compute_invariant_domains_per_node"], [25, 4, 1, "", "dag_to_cpdag"], [26, 4, 1, "", "dag_to_mag"], [27, 4, 1, "", "discriminating_path"], [28, 4, 1, "", "find_connected_pairs"], [29, 4, 1, "", "has_adc"], [30, 4, 1, "", "inducing_path"], [31, 4, 1, "", "is_definite_noncollider"], [32, 4, 1, "", "is_semi_directed_path"], [33, 4, 1, "", "is_valid_mec_graph"], [34, 4, 1, "", "label_edges"], [35, 4, 1, "", "mag_to_pag"], [36, 4, 1, "", "order_edges"], [37, 4, 1, "", "pag_to_mag"], [38, 4, 1, "", "pdag_to_cpdag"], [39, 4, 1, "", "pdag_to_dag"], [40, 4, 1, "", "pds"], [41, 4, 1, "", "pds_path"], [42, 4, 1, "", "pds_t"], [43, 4, 1, "", "pds_t_path"], [44, 4, 1, "", "possible_ancestors"], [45, 4, 1, "", "possible_descendants"], [92, 0, 0, "-", "semi_directed_paths"], [48, 4, 1, "", "uncovered_pd_path"], [49, 4, 1, "", "valid_mag"], [50, 4, 1, "", "valid_pag"]], "pywhy_graphs.algorithms.semi_directed_paths": [[46, 4, 1, "", "all_semi_directed_paths"], [47, 4, 1, "", "is_semi_directed_path"]], "pywhy_graphs.classes": [[93, 0, 0, "-", "timeseries"]], "pywhy_graphs.classes.timeseries": [[51, 1, 1, "", "StationaryTimeSeriesCPDAG"], [52, 1, 1, "", "StationaryTimeSeriesDiGraph"], [53, 1, 1, "", "StationaryTimeSeriesGraph"], [54, 1, 1, "", "StationaryTimeSeriesMixedEdgeGraph"], [55, 1, 1, "", "StationaryTimeSeriesPAG"], [56, 1, 1, "", "TimeSeriesDiGraph"], [57, 1, 1, "", "TimeSeriesGraph"], [58, 1, 1, "", "TimeSeriesMixedEdgeGraph"], [59, 4, 1, "", "complete_ts_graph"], [60, 4, 1, "", "empty_ts_graph"], [61, 4, 1, "", "get_summary_graph"], [62, 4, 1, "", "has_homologous_edges"], [63, 4, 1, "", "nodes_in_time_order"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[51, 3, 1, "", "add_edge"], [51, 3, 1, "", "add_edges_from"], [51, 2, 1, "", "directed_edge_name"], [51, 2, 1, "", "directed_edges"], [51, 3, 1, "", "orient_uncertain_edge"], [51, 3, 1, "", "possible_children"], [51, 3, 1, "", "possible_parents"], [51, 3, 1, "", "sub_directed_graph"], [51, 3, 1, "", "sub_undirected_graph"], [51, 2, 1, "", "undirected_edge_name"], [51, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[55, 2, 1, "", "bidirected_edge_name"], [55, 2, 1, "", "bidirected_edges"], [55, 2, 1, "", "circle_edge_name"], [55, 2, 1, "", "circle_edges"], [55, 2, 1, "", "directed_edge_name"], [55, 2, 1, "", "directed_edges"], [55, 3, 1, "", "orient_uncertain_edge"], [55, 3, 1, "", "possible_children"], [55, 3, 1, "", "possible_parents"], [55, 3, 1, "", "sub_bidirected_graph"], [55, 3, 1, "", "sub_circle_graph"], [55, 3, 1, "", "sub_directed_graph"], [55, 3, 1, "", "sub_undirected_graph"], [55, 2, 1, "", "undirected_edge_name"], [55, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[58, 3, 1, "", "add_edge"], [58, 3, 1, "", "add_edges_from"], [58, 3, 1, "", "add_homologous_edges"], [58, 3, 1, "", "copy"], [58, 5, 1, "", "node_attr_dict_factory"], [58, 5, 1, "", "node_dict_factory"], [58, 3, 1, "", "remove_edge"], [58, 3, 1, "", "remove_edges_from"], [58, 3, 1, "", "remove_homologous_edges"]], "pywhy_graphs.export": [[64, 4, 1, "", "clearn_to_graph"], [65, 4, 1, "", "graph_to_clearn"], [66, 4, 1, "", "graph_to_numpy"], [67, 4, 1, "", "graph_to_pcalg"], [68, 4, 1, "", "graph_to_tetrad"], [69, 4, 1, "", "numpy_to_graph"], [70, 4, 1, "", "pcalg_to_graph"], [71, 4, 1, "", "tetrad_to_graph"]], "pywhy_graphs.functional": [[72, 4, 1, "", "apply_linear_soft_intervention"], [75, 4, 1, "", "make_graph_linear_gaussian"], [76, 4, 1, "", "make_graph_multidomain"], [77, 4, 1, "", "set_node_attributes_with_G"]], "pywhy_graphs.functional.discrete": [[73, 4, 1, "", "add_cpd_for_node"], [74, 4, 1, "", "make_random_discrete_graph"]], "pywhy_graphs.networkx": [[78, 1, 1, "", "MixedEdgeGraph"], [79, 4, 1, "", "bidirected_to_unobserved_confounder"], [80, 4, 1, "", "is_minimal_m_separator"], [81, 4, 1, "", "m_separated"], [82, 4, 1, "", "minimal_m_separator"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[78, 3, 1, "", "__contains__"], [78, 3, 1, "", "__getitem__"], [78, 3, 1, "", "__iter__"], [78, 3, 1, "", "__len__"], [78, 3, 1, "", "add_edge"], [78, 3, 1, "", "add_edges_from"], [78, 2, 1, "", "adj"], [78, 3, 1, "", "clear_edge_types"], [78, 3, 1, "", "copy"], [78, 3, 1, "", "degree"], [78, 3, 1, "", "edges"], [78, 3, 1, "", "get_edge_data"], [78, 3, 1, "", "get_graphs"], [78, 5, 1, "", "graph_attr_dict_factory"], [78, 3, 1, "", "has_edge"], [78, 3, 1, "", "has_node"], [78, 3, 1, "", "is_directed"], [78, 3, 1, "", "is_multigraph"], [78, 2, 1, "", "name"], [78, 3, 1, "", "nbunch_iter"], [78, 5, 1, "", "node_attr_dict_factory"], [78, 5, 1, "", "node_dict_factory"], [78, 3, 1, "", "number_of_edge_types"], [78, 3, 1, "", "number_of_edges"], [78, 3, 1, "", "number_of_nodes"], [78, 3, 1, "", "order"], [78, 3, 1, "", "remove_edge"], [78, 3, 1, "", "remove_edges_from"], [78, 3, 1, "", "size"], [78, 3, 1, "", "subgraph"], [78, 3, 1, "", "to_directed"], [78, 3, 1, "", "to_undirected"], [78, 3, 1, "", "update"]], "pywhy_graphs.simulate": [[83, 4, 1, "", "simulate_data_from_var"], [84, 4, 1, "", "simulate_linear_var_process"], [85, 4, 1, "", "simulate_var_process_from_summary_graph"]], "pywhy_graphs.viz": [[87, 4, 1, "", "draw"], [88, 4, 1, "", "timeseries_layout"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 89, 90], "pywhy_graph": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "class": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 92, 93], "causal": [0, 1, 3, 5, 12, 92, 93, 94, 95, 96, 98], "graph": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 90, 92, 93, 94, 95, 98], "algorithm": [0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 92], "mix": [0, 5, 8], "edg": [0, 8], "deal": 0, "cpdag": [0, 5, 18], "convers": 0, "between": [0, 4], "other": 0, "packag": [0, 94], "": [0, 95, 102, 103], "networkx": [0, 1, 7, 78, 79, 80, 81, 82, 90, 98], "experiment": [0, 94], "function": [0, 72, 73, 74, 75, 76, 77, 95], "timeseri": [0, 13, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 93], "simul": [0, 5, 83, 84, 85, 96], "graphic": [0, 95, 96], "model": [0, 5, 95, 96], "convert": 0, "visual": [0, 1, 11, 12, 98], "util": 0, "debug": 0, "exampl": [1, 4, 7, 15, 18, 19, 56, 78, 81, 87, 88, 98], "galleri": [1, 98], "mixededgegraph": [1, 7, 8, 78, 98], "introduct": [1, 3, 4, 5, 98], "On": 2, "pag": [2, 5, 19], "valid": 2, "pywhi": [2, 90, 92, 93, 94, 98], "refer": [2, 4, 5], "an": [4, 5], "induc": 4, "path": [4, 92], "how": [4, 5, 90, 98], "find": 4, "them": [4, 5], "construct": [4, 8], "adjac": 4, "node": [4, 8, 95], "trivial": 4, "have": 4, "non": 4, "The": 4, "role": 4, "collid": 4, "us": [5, 15, 18, 19, 56, 78, 81, 87, 88, 93, 98], "structur": 5, "some": 5, "data": 5, "direct": [5, 92], "ayclic": 5, "dag": 5, "also": 5, "known": 5, "bayesian": 5, "network": 5, "acycl": [5, 92], "admg": [5, 15], "complet": 5, "partial": 5, "ancestr": 5, "comput": [6, 9, 10, 14, 97], "time": [6, 9, 10, 14, 92, 93, 97], "differ": 8, "type": [8, 93], "properti": 8, "oper": 8, "kei": 8, "draw": [11, 13, 87], "set": [11, 13], "layout": [11, 13], "comparison": 11, "augmentedgraph": 16, "augmentedpag": 17, "acyclif": 20, "add_all_snode_combin": 21, "all_semi_directed_path": [22, 46], "check_pag_definit": 23, "compute_invariant_domains_per_nod": 24, "dag_to_cpdag": 25, "dag_to_mag": 26, "discriminating_path": 27, "find_connected_pair": 28, "has_adc": 29, "inducing_path": 30, "is_definite_noncollid": 31, "is_semi_directed_path": [32, 47], "is_valid_mec_graph": 33, "label_edg": 34, "mag_to_pag": 35, "order_edg": 36, "pag_to_mag": 37, "pdag_to_cpdag": 38, "pdag_to_dag": 39, "pd": 40, "pds_path": 41, "pds_t": 42, "pds_t_path": 43, "possible_ancestor": 44, "possible_descend": 45, "semi_directed_path": [46, 47], "uncovered_pd_path": 48, "valid_mag": 49, "valid_pag": 50, "stationarytimeseriescpdag": 51, "stationarytimeseriesdigraph": 52, "stationarytimeseriesgraph": 53, "stationarytimeseriesmixededgegraph": 54, "stationarytimeseriespag": 55, "timeseriesdigraph": 56, "timeseriesgraph": 57, "timeseriesmixededgegraph": 58, "complete_ts_graph": 59, "empty_ts_graph": 60, "get_summary_graph": 61, "has_homologous_edg": 62, "nodes_in_time_ord": 63, "export": [64, 65, 66, 67, 68, 69, 70, 71, 94], "clearn_to_graph": 64, "graph_to_clearn": 65, "graph_to_numpi": 66, "graph_to_pcalg": 67, "graph_to_tetrad": 68, "numpy_to_graph": 69, "pcalg_to_graph": 70, "tetrad_to_graph": 71, "apply_linear_soft_intervent": 72, "discret": [73, 74, 95], "add_cpd_for_nod": 73, "make_random_discrete_graph": 74, "make_graph_linear_gaussian": 75, "make_graph_multidomain": 76, "set_node_attributes_with_g": 77, "bidirected_to_unobserved_confound": 79, "is_minimal_m_separ": 80, "m_separ": 81, "minimal_m_separ": 82, "simulate_data_from_var": 83, "simulate_linear_var_process": 84, "simulate_var_process_from_summary_graph": 85, "sys_info": 86, "viz": [87, 88], "timeseries_layout": 88, "glossari": 89, "common": 89, "term": 89, "element": 89, "gener": 89, "concept": 89, "stabil": 90, "do": 90, "we": 90, "compar": 90, "content": 90, "get": 90, "start": 90, "team": 90, "indic": 90, "tabl": 90, "instal": 91, "pip": 91, "from": [91, 94, 95], "sourc": 91, "core": 92, "markov": 92, "equival": 92, "seri": [92, 93], "handl": 92, "semi": 92, "possibli": 92, "which": 93, "should": 93, "i": 93, "alpha": 93, "import": 94, "anoth": 94, "learn": 94, "numpi": 94, "graphviz": 94, "dagitti": 94, "pcalg": 94, "r": 94, "tetrad": 94, "java": 94, "repres": 95, "relationship": 95, "multipl": 95, "distribut": 95, "intervent": 95, "domain": 95, "shift": 95, "sampl": 95, "limit": 95, "specif": 95, "linear": 95, "multidomain": 95, "select": 95, "diagram": 95, "modul": 96, "tutori": 98, "user": 99, "guid": 99, "releas": 100, "histori": 100, "what": [102, 103], "new": [102, 103], "version": [102, 103], "0": [102, 103], "1": 102, "changelog": [102, 103], "code": [102, 103], "document": [102, 103], "contributor": [102, 103], "2": 103}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "pywhy_graphs.classes: Causal graph classes": [[0, "pywhy-graphs-classes-causal-graph-classes"]], "pywhy_graphs.algorithms: Algorithms for Mixed-Edge Graphs": [[0, "pywhy-graphs-algorithms-algorithms-for-mixed-edge-graphs"]], "pywhy_graphs.algorithms: Algorithms for dealing with CPDAGs": [[0, "pywhy-graphs-algorithms-algorithms-for-dealing-with-cpdags"]], "Conversions between other package\u2019s causal graphs": [[0, "conversions-between-other-package-s-causal-graphs"]], "NetworkX Experimental Functionality": [[0, "networkx-experimental-functionality"]], "pywhy_graphs.classes.timeseries: Timeseries": [[0, "pywhy-graphs-classes-timeseries-timeseries"]], "pywhy_graphs.simulate: Causal graphical model simulations": [[0, "pywhy-graphs-simulate-causal-graphical-model-simulations"], [96, "pywhy-graphs-simulate-causal-graphical-model-simulations"]], "Converting graphs to functional models": [[0, "converting-graphs-to-functional-models"]], "Visualization of causal graphs": [[0, "visualization-of-causal-graphs"], [1, "visualization-of-causal-graphs"], [12, "visualization-of-causal-graphs"], [98, "visualization-of-causal-graphs"]], "Utilities for debugging": [[0, "utilities-for-debugging"]], "Simulation": [[0, "simulation"]], "Examples Gallery": [[1, "examples-gallery"], [98, "examples-gallery"]], "Networkx MixedEdgeGraph Examples": [[1, "networkx-mixededgegraph-examples"], [7, "networkx-mixededgegraph-examples"], [98, "networkx-mixededgegraph-examples"]], "Introduction to causal graphs": [[1, "introduction-to-causal-graphs"], [3, "introduction-to-causal-graphs"], [98, "introduction-to-causal-graphs"]], "On PAGs and their validity": [[2, "on-pags-and-their-validity"]], "PAGs in pywhy-graphs": [[2, "pags-in-pywhy-graphs"]], "Validity of a PAG": [[2, "validity-of-a-pag"]], "References": [[2, "references"], [4, "references"], [5, "references"]], "An introduction to Inducing Paths and how to find them": [[4, "an-introduction-to-inducing-paths-and-how-to-find-them"]], "Construct an example graph": [[4, "construct-an-example-graph"]], "Adjacent nodes trivially have an inducing path": [[4, "adjacent-nodes-trivially-have-an-inducing-path"]], "Inducing paths between non-adjacent nodes": [[4, "inducing-paths-between-non-adjacent-nodes"]], "The role of colliders": [[4, "the-role-of-colliders"]], "An introduction to causal graphs and how to use them": [[5, "an-introduction-to-causal-graphs-and-how-to-use-them"]], "Structural Causal Models: Simulating some data": [[5, "structural-causal-models-simulating-some-data"]], "Causal Directed Ayclic Graphs (DAG): Also known as Causal Bayesian Networks": [[5, "causal-directed-ayclic-graphs-dag-also-known-as-causal-bayesian-networks"]], "Acyclic Directed Mixed Graphs (ADMG)": [[5, "acyclic-directed-mixed-graphs-admg"]], "Completed Partially Directed Ayclic Graph (CPDAG)": [[5, "completed-partially-directed-ayclic-graph-cpdag"]], "Partial Ancestral Graph (PAG)": [[5, "partial-ancestral-graph-pag"]], "Computation times": [[6, "computation-times"], [9, "computation-times"], [10, "computation-times"], [14, "computation-times"], [97, "computation-times"]], "MixedEdgeGraph - Graph with different types of edges": [[8, "mixededgegraph-graph-with-different-types-of-edges"]], "Construct a MixedEdgeGraph": [[8, "construct-a-mixededgegraph"]], "Mixed Edge Graph Properties": [[8, "mixed-edge-graph-properties"]], "Mixed Edge Graph Operations on Nodes": [[8, "mixed-edge-graph-operations-on-nodes"]], "Mixed Edge Graph Operations on Edges": [[8, "mixed-edge-graph-operations-on-edges"]], "Mixed Edge Graph Key Differences": [[8, "mixed-edge-graph-key-differences"]], "Drawing graphs and setting their layout for visual comparison": [[11, "drawing-graphs-and-setting-their-layout-for-visual-comparison"]], "Drawing timeseries graphs and setting their layout": [[13, "drawing-timeseries-graphs-and-setting-their-layout"]], "pywhy_graphs.ADMG": [[15, "pywhy-graphs-admg"]], "Examples using pywhy_graphs.ADMG": [[15, "examples-using-pywhy-graphs-admg"]], "pywhy_graphs.AugmentedGraph": [[16, "pywhy-graphs-augmentedgraph"]], "pywhy_graphs.AugmentedPAG": [[17, "pywhy-graphs-augmentedpag"]], "pywhy_graphs.CPDAG": [[18, "pywhy-graphs-cpdag"]], "Examples using pywhy_graphs.CPDAG": [[18, "examples-using-pywhy-graphs-cpdag"]], "pywhy_graphs.PAG": [[19, "pywhy-graphs-pag"]], "Examples using pywhy_graphs.PAG": [[19, "examples-using-pywhy-graphs-pag"]], "pywhy_graphs.algorithms.acyclification": [[20, "pywhy-graphs-algorithms-acyclification"]], "pywhy_graphs.algorithms.add_all_snode_combinations": [[21, "pywhy-graphs-algorithms-add-all-snode-combinations"]], "pywhy_graphs.algorithms.all_semi_directed_paths": [[22, "pywhy-graphs-algorithms-all-semi-directed-paths"]], "pywhy_graphs.algorithms.check_pag_definition": [[23, "pywhy-graphs-algorithms-check-pag-definition"]], "pywhy_graphs.algorithms.compute_invariant_domains_per_node": [[24, "pywhy-graphs-algorithms-compute-invariant-domains-per-node"]], "pywhy_graphs.algorithms.dag_to_cpdag": [[25, "pywhy-graphs-algorithms-dag-to-cpdag"]], "pywhy_graphs.algorithms.dag_to_mag": [[26, "pywhy-graphs-algorithms-dag-to-mag"]], "pywhy_graphs.algorithms.discriminating_path": [[27, "pywhy-graphs-algorithms-discriminating-path"]], "pywhy_graphs.algorithms.find_connected_pairs": [[28, "pywhy-graphs-algorithms-find-connected-pairs"]], "pywhy_graphs.algorithms.has_adc": [[29, "pywhy-graphs-algorithms-has-adc"]], "pywhy_graphs.algorithms.inducing_path": [[30, "pywhy-graphs-algorithms-inducing-path"]], "pywhy_graphs.algorithms.is_definite_noncollider": [[31, "pywhy-graphs-algorithms-is-definite-noncollider"]], "pywhy_graphs.algorithms.is_semi_directed_path": [[32, "pywhy-graphs-algorithms-is-semi-directed-path"]], "pywhy_graphs.algorithms.is_valid_mec_graph": [[33, "pywhy-graphs-algorithms-is-valid-mec-graph"]], "pywhy_graphs.algorithms.label_edges": [[34, "pywhy-graphs-algorithms-label-edges"]], "pywhy_graphs.algorithms.mag_to_pag": [[35, "pywhy-graphs-algorithms-mag-to-pag"]], "pywhy_graphs.algorithms.order_edges": [[36, "pywhy-graphs-algorithms-order-edges"]], "pywhy_graphs.algorithms.pag_to_mag": [[37, "pywhy-graphs-algorithms-pag-to-mag"]], "pywhy_graphs.algorithms.pdag_to_cpdag": [[38, "pywhy-graphs-algorithms-pdag-to-cpdag"]], "pywhy_graphs.algorithms.pdag_to_dag": [[39, "pywhy-graphs-algorithms-pdag-to-dag"]], "pywhy_graphs.algorithms.pds": [[40, "pywhy-graphs-algorithms-pds"]], "pywhy_graphs.algorithms.pds_path": [[41, "pywhy-graphs-algorithms-pds-path"]], "pywhy_graphs.algorithms.pds_t": [[42, "pywhy-graphs-algorithms-pds-t"]], "pywhy_graphs.algorithms.pds_t_path": [[43, "pywhy-graphs-algorithms-pds-t-path"]], "pywhy_graphs.algorithms.possible_ancestors": [[44, "pywhy-graphs-algorithms-possible-ancestors"]], "pywhy_graphs.algorithms.possible_descendants": [[45, "pywhy-graphs-algorithms-possible-descendants"]], "pywhy_graphs.algorithms.semi_directed_paths.all_semi_directed_paths": [[46, "pywhy-graphs-algorithms-semi-directed-paths-all-semi-directed-paths"]], "pywhy_graphs.algorithms.semi_directed_paths.is_semi_directed_path": [[47, "pywhy-graphs-algorithms-semi-directed-paths-is-semi-directed-path"]], "pywhy_graphs.algorithms.uncovered_pd_path": [[48, "pywhy-graphs-algorithms-uncovered-pd-path"]], "pywhy_graphs.algorithms.valid_mag": [[49, "pywhy-graphs-algorithms-valid-mag"]], "pywhy_graphs.algorithms.valid_pag": [[50, "pywhy-graphs-algorithms-valid-pag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[51, "pywhy-graphs-classes-timeseries-stationarytimeseriescpdag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph": [[52, "pywhy-graphs-classes-timeseries-stationarytimeseriesdigraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph": [[53, "pywhy-graphs-classes-timeseries-stationarytimeseriesgraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph": [[54, "pywhy-graphs-classes-timeseries-stationarytimeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[55, "pywhy-graphs-classes-timeseries-stationarytimeseriespag"]], "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[56, "pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "Examples using pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[56, "examples-using-pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesGraph": [[57, "pywhy-graphs-classes-timeseries-timeseriesgraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[58, "pywhy-graphs-classes-timeseries-timeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.complete_ts_graph": [[59, "pywhy-graphs-classes-timeseries-complete-ts-graph"]], "pywhy_graphs.classes.timeseries.empty_ts_graph": [[60, "pywhy-graphs-classes-timeseries-empty-ts-graph"]], "pywhy_graphs.classes.timeseries.get_summary_graph": [[61, "pywhy-graphs-classes-timeseries-get-summary-graph"]], "pywhy_graphs.classes.timeseries.has_homologous_edges": [[62, "pywhy-graphs-classes-timeseries-has-homologous-edges"]], "pywhy_graphs.classes.timeseries.nodes_in_time_order": [[63, "pywhy-graphs-classes-timeseries-nodes-in-time-order"]], "pywhy_graphs.export.clearn_to_graph": [[64, "pywhy-graphs-export-clearn-to-graph"]], "pywhy_graphs.export.graph_to_clearn": [[65, "pywhy-graphs-export-graph-to-clearn"]], "pywhy_graphs.export.graph_to_numpy": [[66, "pywhy-graphs-export-graph-to-numpy"]], "pywhy_graphs.export.graph_to_pcalg": [[67, "pywhy-graphs-export-graph-to-pcalg"]], "pywhy_graphs.export.graph_to_tetrad": [[68, "pywhy-graphs-export-graph-to-tetrad"]], "pywhy_graphs.export.numpy_to_graph": [[69, "pywhy-graphs-export-numpy-to-graph"]], "pywhy_graphs.export.pcalg_to_graph": [[70, "pywhy-graphs-export-pcalg-to-graph"]], "pywhy_graphs.export.tetrad_to_graph": [[71, "pywhy-graphs-export-tetrad-to-graph"]], "pywhy_graphs.functional.apply_linear_soft_intervention": [[72, "pywhy-graphs-functional-apply-linear-soft-intervention"]], "pywhy_graphs.functional.discrete.add_cpd_for_node": [[73, "pywhy-graphs-functional-discrete-add-cpd-for-node"]], "pywhy_graphs.functional.discrete.make_random_discrete_graph": [[74, "pywhy-graphs-functional-discrete-make-random-discrete-graph"]], "pywhy_graphs.functional.make_graph_linear_gaussian": [[75, "pywhy-graphs-functional-make-graph-linear-gaussian"]], "pywhy_graphs.functional.make_graph_multidomain": [[76, "pywhy-graphs-functional-make-graph-multidomain"]], "pywhy_graphs.functional.set_node_attributes_with_G": [[77, "pywhy-graphs-functional-set-node-attributes-with-g"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[78, "pywhy-graphs-networkx-mixededgegraph"]], "Examples using pywhy_graphs.networkx.MixedEdgeGraph": [[78, "examples-using-pywhy-graphs-networkx-mixededgegraph"]], "pywhy_graphs.networkx.bidirected_to_unobserved_confounder": [[79, "pywhy-graphs-networkx-bidirected-to-unobserved-confounder"]], "pywhy_graphs.networkx.is_minimal_m_separator": [[80, "pywhy-graphs-networkx-is-minimal-m-separator"]], "pywhy_graphs.networkx.m_separated": [[81, "pywhy-graphs-networkx-m-separated"]], "Examples using pywhy_graphs.networkx.m_separated": [[81, "examples-using-pywhy-graphs-networkx-m-separated"]], "pywhy_graphs.networkx.minimal_m_separator": [[82, "pywhy-graphs-networkx-minimal-m-separator"]], "pywhy_graphs.simulate.simulate_data_from_var": [[83, "pywhy-graphs-simulate-simulate-data-from-var"]], "pywhy_graphs.simulate.simulate_linear_var_process": [[84, "pywhy-graphs-simulate-simulate-linear-var-process"]], "pywhy_graphs.simulate.simulate_var_process_from_summary_graph": [[85, "pywhy-graphs-simulate-simulate-var-process-from-summary-graph"]], "pywhy_graphs.sys_info": [[86, "pywhy-graphs-sys-info"]], "pywhy_graphs.viz.draw": [[87, "pywhy-graphs-viz-draw"]], "Examples using pywhy_graphs.viz.draw": [[87, "examples-using-pywhy-graphs-viz-draw"]], "pywhy_graphs.viz.timeseries_layout": [[88, "pywhy-graphs-viz-timeseries-layout"]], "Examples using pywhy_graphs.viz.timeseries_layout": [[88, "examples-using-pywhy-graphs-viz-timeseries-layout"]], "Glossary of Common Terms and API Elements": [[89, "glossary-of-common-terms-and-api-elements"]], "General Concepts": [[89, "general-concepts"]], "pywhy-graphs": [[90, "pywhy-graphs"]], "API Stability": [[90, "api-stability"]], "How do we compare with NetworkX?": [[90, "how-do-we-compare-with-networkx"]], "Contents": [[90, "contents"]], "Getting started:": [[90, null]], "Team": [[90, "team"]], "Indices and tables": [[90, "indices-and-tables"]], "Installation": [[91, "installation"]], "Installing with pip": [[91, "installing-with-pip"]], "Installing from source": [[91, "installing-from-source"]], "Causal Graph Algorithms in PyWhy": [[92, "module-pywhy_graphs.algorithms"]], "Core Algorithms": [[92, "core-algorithms"]], "Algorithms for Markov Equivalence Classes": [[92, "algorithms-for-markov-equivalence-classes"]], "Algorithms for Time-Series Graphs": [[92, "algorithms-for-time-series-graphs"]], "Algorithms for handling acyclicity": [[92, "algorithms-for-handling-acyclicity"]], "Semi-directed (possibly-directed) Paths": [[92, "module-pywhy_graphs.algorithms.semi_directed_paths"]], "Causal Graphs in PyWhy": [[93, "module-pywhy_graphs.classes"]], "Which graph class should I use?": [[93, "which-graph-class-should-i-use"]], "pywhy_graphs.classes: Causal graph types": [[93, "pywhy-graphs-classes-causal-graph-types"]], "pywhy_graphs.classes.timeseries: Causal graph types for time-series (alpha)": [[93, "module-pywhy_graphs.classes.timeseries"]], "Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package": [[94, "module-pywhy_graphs.export"]], "Causal-Learn": [[94, "causal-learn"]], "Numpy (graphviz and dagitty)": [[94, "numpy-graphviz-and-dagitty"]], "PCAlg from R (Experimental)": [[94, "pcalg-from-r-experimental"]], "Tetrad from Java": [[94, "tetrad-from-java"]], "Functional Causal Graphical Models": [[95, "module-pywhy_graphs.functional"]], "Representing a node\u2019s functional relationships": [[95, "representing-a-node-s-functional-relationships"]], "Multiple Distributions: Interventions and Domain Shifts": [[95, "multiple-distributions-interventions-and-domain-shifts"]], "Sampling from the graph": [[95, "sampling-from-the-graph"]], "Limitations": [[95, "limitations"]], "Specific Functional Graphs": [[95, "specific-functional-graphs"]], "Discrete functional graphs": [[95, "discrete-functional-graphs"]], "Linear": [[95, "linear"], [95, "id4"]], "Linear functional graphs": [[95, "linear-functional-graphs"]], "Multidomain": [[95, "multidomain"]], "Linear functional selection diagrams": [[95, "linear-functional-selection-diagrams"]], "Simulation module": [[96, "simulation-module"]], "How to use pywhy-graphs with examples and tutorials": [[98, "how-to-use-pywhy-graphs-with-examples-and-tutorials"]], "User Guide": [[99, "user-guide"]], "Release History": [[100, "release-history"]], "What\u2019s new?": [[102, "what-s-new"], [103, "what-s-new"]], "Version 0.1": [[102, "version-0-1"]], "Changelog": [[102, "changelog"], [103, "changelog"]], "Code and Documentation Contributors": [[102, "code-and-documentation-contributors"], [103, "code-and-documentation-contributors"]], "Version 0.2": [[103, "version-0-2"]]}, "indexentries": {"module": [[0, "module-pywhy_graphs"], [92, "module-pywhy_graphs.algorithms"], [92, "module-pywhy_graphs.algorithms.semi_directed_paths"], [93, "module-pywhy_graphs.classes"], [93, "module-pywhy_graphs.classes.timeseries"], [94, "module-pywhy_graphs.export"], [95, "module-pywhy_graphs.functional"], [96, "module-pywhy_graphs.simulate"]], "pywhy_graphs": [[0, "module-pywhy_graphs"]], "admg (class in pywhy_graphs)": [[15, "pywhy_graphs.ADMG"]], "bidirected_edge_name (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.bidirected_edges"]], "c_components() (pywhy_graphs.admg method)": [[15, "pywhy_graphs.ADMG.c_components"]], "directed_edge_name (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.directed_edge_name"]], "directed_edges (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.directed_edges"]], "sub_bidirected_graph() (pywhy_graphs.admg method)": [[15, "pywhy_graphs.ADMG.sub_bidirected_graph"]], "sub_directed_graph() (pywhy_graphs.admg method)": [[15, "pywhy_graphs.ADMG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.admg method)": [[15, "pywhy_graphs.ADMG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.admg property)": [[15, "pywhy_graphs.ADMG.undirected_edges"]], "augmentedgraph (class in pywhy_graphs)": [[16, "pywhy_graphs.AugmentedGraph"]], "augmentedpag (class in pywhy_graphs)": [[17, "pywhy_graphs.AugmentedPAG"]], "cpdag (class in pywhy_graphs)": [[18, "pywhy_graphs.CPDAG"]], "add_edge() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.cpdag property)": [[18, "pywhy_graphs.CPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.cpdag property)": [[18, "pywhy_graphs.CPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.possible_children"]], "possible_parents() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.cpdag method)": [[18, "pywhy_graphs.CPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.cpdag property)": [[18, "pywhy_graphs.CPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.cpdag property)": [[18, "pywhy_graphs.CPDAG.undirected_edges"]], "pag (class in pywhy_graphs)": [[19, "pywhy_graphs.PAG"]], "add_edge() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.add_edge"]], "add_edges_from() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.add_edges_from"]], "children() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.children"]], "circle_edge_name (pywhy_graphs.pag property)": [[19, "pywhy_graphs.PAG.circle_edge_name"]], "circle_edges (pywhy_graphs.pag property)": [[19, "pywhy_graphs.PAG.circle_edges"]], "orient_uncertain_edge() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.orient_uncertain_edge"]], "parents() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.parents"]], "possible_children() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.possible_children"]], "possible_parents() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.possible_parents"]], "sub_circle_graph() (pywhy_graphs.pag method)": [[19, "pywhy_graphs.PAG.sub_circle_graph"]], "acyclification() (in module pywhy_graphs.algorithms)": [[20, "pywhy_graphs.algorithms.acyclification"]], "add_all_snode_combinations() (in module pywhy_graphs.algorithms)": [[21, "pywhy_graphs.algorithms.add_all_snode_combinations"]], "all_semi_directed_paths() (in module pywhy_graphs.algorithms)": [[22, "pywhy_graphs.algorithms.all_semi_directed_paths"]], "check_pag_definition() (in module pywhy_graphs.algorithms)": [[23, "pywhy_graphs.algorithms.check_pag_definition"]], "compute_invariant_domains_per_node() (in module pywhy_graphs.algorithms)": [[24, "pywhy_graphs.algorithms.compute_invariant_domains_per_node"]], "dag_to_cpdag() (in module pywhy_graphs.algorithms)": [[25, "pywhy_graphs.algorithms.dag_to_cpdag"]], "dag_to_mag() (in module pywhy_graphs.algorithms)": [[26, "pywhy_graphs.algorithms.dag_to_mag"]], "discriminating_path() (in module pywhy_graphs.algorithms)": [[27, "pywhy_graphs.algorithms.discriminating_path"]], "find_connected_pairs() (in module pywhy_graphs.algorithms)": [[28, "pywhy_graphs.algorithms.find_connected_pairs"]], "has_adc() (in module pywhy_graphs.algorithms)": [[29, "pywhy_graphs.algorithms.has_adc"]], "inducing_path() (in module pywhy_graphs.algorithms)": [[30, "pywhy_graphs.algorithms.inducing_path"]], "is_definite_noncollider() (in module pywhy_graphs.algorithms)": [[31, "pywhy_graphs.algorithms.is_definite_noncollider"]], "is_semi_directed_path() (in module pywhy_graphs.algorithms)": [[32, "pywhy_graphs.algorithms.is_semi_directed_path"]], "is_valid_mec_graph() (in module pywhy_graphs.algorithms)": [[33, "pywhy_graphs.algorithms.is_valid_mec_graph"]], "label_edges() (in module pywhy_graphs.algorithms)": [[34, "pywhy_graphs.algorithms.label_edges"]], "mag_to_pag() (in module pywhy_graphs.algorithms)": [[35, "pywhy_graphs.algorithms.mag_to_pag"]], "order_edges() (in module pywhy_graphs.algorithms)": [[36, "pywhy_graphs.algorithms.order_edges"]], "pag_to_mag() (in module pywhy_graphs.algorithms)": [[37, "pywhy_graphs.algorithms.pag_to_mag"]], "pdag_to_cpdag() (in module pywhy_graphs.algorithms)": [[38, "pywhy_graphs.algorithms.pdag_to_cpdag"]], "pdag_to_dag() (in module pywhy_graphs.algorithms)": [[39, "pywhy_graphs.algorithms.pdag_to_dag"]], "pds() (in module pywhy_graphs.algorithms)": [[40, "pywhy_graphs.algorithms.pds"]], "pds_path() (in module pywhy_graphs.algorithms)": [[41, "pywhy_graphs.algorithms.pds_path"]], "pds_t() (in module pywhy_graphs.algorithms)": [[42, "pywhy_graphs.algorithms.pds_t"]], "pds_t_path() (in module pywhy_graphs.algorithms)": [[43, "pywhy_graphs.algorithms.pds_t_path"]], "possible_ancestors() (in module pywhy_graphs.algorithms)": [[44, "pywhy_graphs.algorithms.possible_ancestors"]], "possible_descendants() (in module pywhy_graphs.algorithms)": [[45, "pywhy_graphs.algorithms.possible_descendants"]], "all_semi_directed_paths() (in module pywhy_graphs.algorithms.semi_directed_paths)": [[46, "pywhy_graphs.algorithms.semi_directed_paths.all_semi_directed_paths"]], "is_semi_directed_path() (in module pywhy_graphs.algorithms.semi_directed_paths)": [[47, "pywhy_graphs.algorithms.semi_directed_paths.is_semi_directed_path"]], "uncovered_pd_path() (in module pywhy_graphs.algorithms)": [[48, "pywhy_graphs.algorithms.uncovered_pd_path"]], "valid_mag() (in module pywhy_graphs.algorithms)": [[49, "pywhy_graphs.algorithms.valid_mag"]], "valid_pag() (in module pywhy_graphs.algorithms)": [[50, "pywhy_graphs.algorithms.valid_pag"]], "stationarytimeseriescpdag (class in pywhy_graphs.classes.timeseries)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG"]], "add_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[51, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edges"]], "stationarytimeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[52, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph"]], "stationarytimeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[53, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph"]], "stationarytimeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[54, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph"]], "stationarytimeseriespag (class in pywhy_graphs.classes.timeseries)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG"]], "bidirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edges"]], "circle_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edge_name"]], "circle_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edges"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_parents"]], "sub_bidirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_bidirected_graph"]], "sub_circle_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_circle_graph"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[55, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edges"]], "timeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[56, "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph"]], "timeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[57, "pywhy_graphs.classes.timeseries.TimeSeriesGraph"]], "timeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph"]], "add_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edges_from"]], "add_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_homologous_edges"]], "copy() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.copy"]], "node_attr_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_dict_factory"]], "remove_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edges_from"]], "remove_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[58, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_homologous_edges"]], "complete_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[59, "pywhy_graphs.classes.timeseries.complete_ts_graph"]], "empty_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[60, "pywhy_graphs.classes.timeseries.empty_ts_graph"]], "get_summary_graph() (in module pywhy_graphs.classes.timeseries)": [[61, "pywhy_graphs.classes.timeseries.get_summary_graph"]], "has_homologous_edges() (in module pywhy_graphs.classes.timeseries)": [[62, "pywhy_graphs.classes.timeseries.has_homologous_edges"]], "nodes_in_time_order() (in module pywhy_graphs.classes.timeseries)": [[63, "pywhy_graphs.classes.timeseries.nodes_in_time_order"]], "clearn_to_graph() (in module pywhy_graphs.export)": [[64, "pywhy_graphs.export.clearn_to_graph"]], "graph_to_clearn() (in module pywhy_graphs.export)": [[65, "pywhy_graphs.export.graph_to_clearn"]], "graph_to_numpy() (in module pywhy_graphs.export)": [[66, "pywhy_graphs.export.graph_to_numpy"]], "graph_to_pcalg() (in module pywhy_graphs.export)": [[67, "pywhy_graphs.export.graph_to_pcalg"]], "graph_to_tetrad() (in module pywhy_graphs.export)": [[68, "pywhy_graphs.export.graph_to_tetrad"]], "numpy_to_graph() (in module pywhy_graphs.export)": [[69, "pywhy_graphs.export.numpy_to_graph"]], "pcalg_to_graph() (in module pywhy_graphs.export)": [[70, "pywhy_graphs.export.pcalg_to_graph"]], "tetrad_to_graph() (in module pywhy_graphs.export)": [[71, "pywhy_graphs.export.tetrad_to_graph"]], "apply_linear_soft_intervention() (in module pywhy_graphs.functional)": [[72, "pywhy_graphs.functional.apply_linear_soft_intervention"]], "add_cpd_for_node() (in module pywhy_graphs.functional.discrete)": [[73, "pywhy_graphs.functional.discrete.add_cpd_for_node"]], "make_random_discrete_graph() (in module pywhy_graphs.functional.discrete)": [[74, "pywhy_graphs.functional.discrete.make_random_discrete_graph"]], "make_graph_linear_gaussian() (in module pywhy_graphs.functional)": [[75, "pywhy_graphs.functional.make_graph_linear_gaussian"]], "make_graph_multidomain() (in module pywhy_graphs.functional)": [[76, "pywhy_graphs.functional.make_graph_multidomain"]], "set_node_attributes_with_g() (in module pywhy_graphs.functional)": [[77, "pywhy_graphs.functional.set_node_attributes_with_G"]], "mixededgegraph (class in pywhy_graphs.networkx)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph"]], "__contains__() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.__contains__"]], "__getitem__() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.__getitem__"]], "__iter__() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.__iter__"]], "__len__() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.__len__"]], "add_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.add_edges_from"]], "adj (pywhy_graphs.networkx.mixededgegraph property)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.adj"]], "clear_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.clear_edge_types"]], "copy() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.copy"]], "degree() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.degree"]], "edges() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.edges"]], "get_edge_data() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.get_edge_data"]], "get_graphs() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.get_graphs"]], "graph_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.graph_attr_dict_factory"]], "has_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.has_edge"]], "has_node() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.has_node"]], "is_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.is_directed"]], "is_multigraph() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.is_multigraph"]], "name (pywhy_graphs.networkx.mixededgegraph property)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.name"]], "nbunch_iter() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.nbunch_iter"]], "node_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.node_dict_factory"]], "number_of_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edge_types"]], "number_of_edges() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edges"]], "number_of_nodes() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_nodes"]], "order() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.order"]], "remove_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edges_from"]], "size() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.size"]], "subgraph() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.subgraph"]], "to_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.to_directed"]], "to_undirected() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.to_undirected"]], "update() (pywhy_graphs.networkx.mixededgegraph method)": [[78, "pywhy_graphs.networkx.MixedEdgeGraph.update"]], "bidirected_to_unobserved_confounder() (in module pywhy_graphs.networkx)": [[79, "pywhy_graphs.networkx.bidirected_to_unobserved_confounder"]], "is_minimal_m_separator() (in module pywhy_graphs.networkx)": [[80, "pywhy_graphs.networkx.is_minimal_m_separator"]], "m_separated() (in module pywhy_graphs.networkx)": [[81, "pywhy_graphs.networkx.m_separated"]], "minimal_m_separator() (in module pywhy_graphs.networkx)": [[82, "pywhy_graphs.networkx.minimal_m_separator"]], "simulate_data_from_var() (in module pywhy_graphs.simulate)": [[83, "pywhy_graphs.simulate.simulate_data_from_var"]], "simulate_linear_var_process() (in module pywhy_graphs.simulate)": [[84, "pywhy_graphs.simulate.simulate_linear_var_process"]], "simulate_var_process_from_summary_graph() (in module pywhy_graphs.simulate)": [[85, "pywhy_graphs.simulate.simulate_var_process_from_summary_graph"]], "sys_info() (in module pywhy_graphs)": [[86, "pywhy_graphs.sys_info"]], "draw() (in module pywhy_graphs.viz)": [[87, "pywhy_graphs.viz.draw"]], "timeseries_layout() (in module pywhy_graphs.viz)": [[88, "pywhy_graphs.viz.timeseries_layout"]], "1d": [[89, "term-1d"]], "1d array": [[89, "term-1d-array"]], "2d": [[89, "term-2d"]], "2d array": [[89, "term-2d-array"]], "api": [[89, "term-API"]], "f-node": [[89, "term-F-node"]], "markov equivalence class": [[89, "term-Markov-equivalence-class"]], "scm": [[89, "term-SCM"]], "structural causal model": [[89, "term-Structural-Causal-Model"]], "c components": [[89, "term-0"]], "c-components": [[89, "term-c-components"]], "c_components": [[89, "term-c_components"]], "callable": [[89, "term-callable"]], "docstring": [[89, "term-docstring"]], "equivalence class": [[89, "term-equivalence-class"]], "examples": [[89, "term-examples"]], "experimental": [[89, "term-experimental"]], "gallery": [[89, "term-gallery"]], "joblib": [[89, "term-joblib"]], "lag": [[89, "term-lag"]], "n_features": [[89, "term-n_features"]], "n_samples": [[89, "term-n_samples"]], "node": [[89, "term-node"]], "np": [[89, "term-np"]], "nx": [[89, "term-nx"]], "pair": [[89, "term-pair"]], "pd": [[89, "term-pd"]], "sample": [[89, "term-sample"]], "samples": [[89, "term-samples"]], "sigma_map": [[89, "term-sigma_map"]], "symmetric_difference_map": [[89, "term-symmetric_difference_map"]], "tsnode": [[89, "term-tsnode"]], "variable": [[89, "term-variable"]], "pywhy_graphs.algorithms": [[92, "module-pywhy_graphs.algorithms"]], "pywhy_graphs.algorithms.semi_directed_paths": [[92, "module-pywhy_graphs.algorithms.semi_directed_paths"]], "pywhy_graphs.classes": [[93, "module-pywhy_graphs.classes"]], "pywhy_graphs.classes.timeseries": [[93, "module-pywhy_graphs.classes.timeseries"]], "pywhy_graphs.export": [[94, "module-pywhy_graphs.export"]], "pywhy_graphs.functional": [[95, "module-pywhy_graphs.functional"]], "pywhy_graphs.simulate": [[96, "module-pywhy_graphs.simulate"]]}})