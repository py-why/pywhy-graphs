Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/intro/index", "auto_examples/intro/intro_causal_graphs", "auto_examples/intro/sg_execution_times", "auto_examples/mixededge/index", "auto_examples/mixededge/plot_mixed_edge_graph", "auto_examples/mixededge/sg_execution_times", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout", "auto_examples/visualization/index", "auto_examples/visualization/plot_timeseries_graphs", "auto_examples/visualization/sg_execution_times", "generated/pywhy_graphs.ADMG", "generated/pywhy_graphs.AugmentedGraph", "generated/pywhy_graphs.AugmentedPAG", "generated/pywhy_graphs.CPDAG", "generated/pywhy_graphs.PAG", "generated/pywhy_graphs.algorithms.acyclification", "generated/pywhy_graphs.algorithms.add_all_snode_combinations", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node", "generated/pywhy_graphs.algorithms.discriminating_path", "generated/pywhy_graphs.algorithms.find_connected_pairs", "generated/pywhy_graphs.algorithms.is_definite_noncollider", "generated/pywhy_graphs.algorithms.is_valid_mec_graph", "generated/pywhy_graphs.algorithms.pds", "generated/pywhy_graphs.algorithms.pds_path", "generated/pywhy_graphs.algorithms.pds_t", "generated/pywhy_graphs.algorithms.pds_t_path", "generated/pywhy_graphs.algorithms.possible_ancestors", "generated/pywhy_graphs.algorithms.possible_descendants", "generated/pywhy_graphs.algorithms.uncovered_pd_path", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph", "generated/pywhy_graphs.classes.timeseries.get_summary_graph", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order", "generated/pywhy_graphs.export.clearn_to_graph", "generated/pywhy_graphs.export.graph_to_clearn", "generated/pywhy_graphs.export.graph_to_numpy", "generated/pywhy_graphs.export.graph_to_pcalg", "generated/pywhy_graphs.export.graph_to_tetrad", "generated/pywhy_graphs.export.numpy_to_graph", "generated/pywhy_graphs.export.pcalg_to_graph", "generated/pywhy_graphs.export.tetrad_to_graph", "generated/pywhy_graphs.functional.apply_linear_soft_intervention", "generated/pywhy_graphs.functional.make_graph_linear_gaussian", "generated/pywhy_graphs.functional.make_graph_multidomain", "generated/pywhy_graphs.functional.set_node_attributes_with_G", "generated/pywhy_graphs.networkx.MixedEdgeGraph", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "generated/pywhy_graphs.networkx.is_minimal_m_separator", "generated/pywhy_graphs.networkx.m_separated", "generated/pywhy_graphs.networkx.minimal_m_separator", "generated/pywhy_graphs.simulate.simulate_data_from_var", "generated/pywhy_graphs.simulate.simulate_linear_var_process", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "generated/pywhy_graphs.sys_info", "generated/pywhy_graphs.viz.draw", "generated/pywhy_graphs.viz.timeseries_layout", "glossary", "index", "installation", "reference/algorithms/index", "reference/classes/index", "reference/export/index", "reference/functional/index", "reference/simulation/index", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/intro/index.rst", "auto_examples/intro/intro_causal_graphs.rst", "auto_examples/intro/sg_execution_times.rst", "auto_examples/mixededge/index.rst", "auto_examples/mixededge/plot_mixed_edge_graph.rst", "auto_examples/mixededge/sg_execution_times.rst", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/plot_timeseries_graphs.rst", "auto_examples/visualization/sg_execution_times.rst", "generated/pywhy_graphs.ADMG.rst", "generated/pywhy_graphs.AugmentedGraph.rst", "generated/pywhy_graphs.AugmentedPAG.rst", "generated/pywhy_graphs.CPDAG.rst", "generated/pywhy_graphs.PAG.rst", "generated/pywhy_graphs.algorithms.acyclification.rst", "generated/pywhy_graphs.algorithms.add_all_snode_combinations.rst", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node.rst", "generated/pywhy_graphs.algorithms.discriminating_path.rst", "generated/pywhy_graphs.algorithms.find_connected_pairs.rst", "generated/pywhy_graphs.algorithms.is_definite_noncollider.rst", "generated/pywhy_graphs.algorithms.is_valid_mec_graph.rst", "generated/pywhy_graphs.algorithms.pds.rst", "generated/pywhy_graphs.algorithms.pds_path.rst", "generated/pywhy_graphs.algorithms.pds_t.rst", "generated/pywhy_graphs.algorithms.pds_t_path.rst", "generated/pywhy_graphs.algorithms.possible_ancestors.rst", "generated/pywhy_graphs.algorithms.possible_descendants.rst", "generated/pywhy_graphs.algorithms.uncovered_pd_path.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.get_summary_graph.rst", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges.rst", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order.rst", "generated/pywhy_graphs.export.clearn_to_graph.rst", "generated/pywhy_graphs.export.graph_to_clearn.rst", "generated/pywhy_graphs.export.graph_to_numpy.rst", "generated/pywhy_graphs.export.graph_to_pcalg.rst", "generated/pywhy_graphs.export.graph_to_tetrad.rst", "generated/pywhy_graphs.export.numpy_to_graph.rst", "generated/pywhy_graphs.export.pcalg_to_graph.rst", "generated/pywhy_graphs.export.tetrad_to_graph.rst", "generated/pywhy_graphs.functional.apply_linear_soft_intervention.rst", "generated/pywhy_graphs.functional.make_graph_linear_gaussian.rst", "generated/pywhy_graphs.functional.make_graph_multidomain.rst", "generated/pywhy_graphs.functional.set_node_attributes_with_G.rst", "generated/pywhy_graphs.networkx.MixedEdgeGraph.rst", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder.rst", "generated/pywhy_graphs.networkx.is_minimal_m_separator.rst", "generated/pywhy_graphs.networkx.m_separated.rst", "generated/pywhy_graphs.networkx.minimal_m_separator.rst", "generated/pywhy_graphs.simulate.simulate_data_from_var.rst", "generated/pywhy_graphs.simulate.simulate_linear_var_process.rst", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph.rst", "generated/pywhy_graphs.sys_info.rst", "generated/pywhy_graphs.viz.draw.rst", "generated/pywhy_graphs.viz.timeseries_layout.rst", "glossary.rst", "index.rst", "installation.md", "reference/algorithms/index.rst", "reference/classes/index.rst", "reference/export/index.rst", "reference/functional/index.rst", "reference/simulation/index.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API", "Examples Gallery", "Introduction to causal graphs", "An introduction to causal graphs and how to use them", "Computation times", "Networkx MixedEdgeGraph Examples", "MixedEdgeGraph - Graph with different types of edges", "Computation times", "Drawing graphs and setting their layout for visual comparison", "Visualization of causal graphs", "Drawing timeseries graphs and setting their layout", "Computation times", "pywhy_graphs.ADMG", "pywhy_graphs.AugmentedGraph", "pywhy_graphs.AugmentedPAG", "pywhy_graphs.CPDAG", "pywhy_graphs.PAG", "<span class=\"section-number\">3.4.1. </span>pywhy_graphs.algorithms.acyclification", "pywhy_graphs.algorithms.add_all_snode_combinations", "pywhy_graphs.algorithms.compute_invariant_domains_per_node", "<span class=\"section-number\">3.1.4. </span>pywhy_graphs.algorithms.discriminating_path", "pywhy_graphs.algorithms.find_connected_pairs", "<span class=\"section-number\">3.1.5. </span>pywhy_graphs.algorithms.is_definite_noncollider", "<span class=\"section-number\">3.1.1. </span>pywhy_graphs.algorithms.is_valid_mec_graph", "<span class=\"section-number\">3.2.1. </span>pywhy_graphs.algorithms.pds", "<span class=\"section-number\">3.2.2. </span>pywhy_graphs.algorithms.pds_path", "<span class=\"section-number\">3.3.1. </span>pywhy_graphs.algorithms.pds_t", "<span class=\"section-number\">3.3.2. </span>pywhy_graphs.algorithms.pds_t_path", "<span class=\"section-number\">3.1.2. </span>pywhy_graphs.algorithms.possible_ancestors", "<span class=\"section-number\">3.1.3. </span>pywhy_graphs.algorithms.possible_descendants", "<span class=\"section-number\">3.2.3. </span>pywhy_graphs.algorithms.uncovered_pd_path", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.TimeSeriesGraph", "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.complete_ts_graph", "pywhy_graphs.classes.timeseries.empty_ts_graph", "pywhy_graphs.classes.timeseries.get_summary_graph", "pywhy_graphs.classes.timeseries.has_homologous_edges", "pywhy_graphs.classes.timeseries.nodes_in_time_order", "<span class=\"section-number\">5.1.2. </span>pywhy_graphs.export.clearn_to_graph", "<span class=\"section-number\">5.1.1. </span>pywhy_graphs.export.graph_to_clearn", "<span class=\"section-number\">5.2.1. </span>pywhy_graphs.export.graph_to_numpy", "<span class=\"section-number\">5.3.1. </span>pywhy_graphs.export.graph_to_pcalg", "<span class=\"section-number\">5.4.1. </span>pywhy_graphs.export.graph_to_tetrad", "<span class=\"section-number\">5.2.2. </span>pywhy_graphs.export.numpy_to_graph", "<span class=\"section-number\">5.3.2. </span>pywhy_graphs.export.pcalg_to_graph", "<span class=\"section-number\">5.4.2. </span>pywhy_graphs.export.tetrad_to_graph", "<span class=\"section-number\">2.2.2. </span>pywhy_graphs.functional.apply_linear_soft_intervention", "<span class=\"section-number\">2.2.1. </span>pywhy_graphs.functional.make_graph_linear_gaussian", "<span class=\"section-number\">2.4.1. </span>pywhy_graphs.functional.make_graph_multidomain", "pywhy_graphs.functional.set_node_attributes_with_G", "pywhy_graphs.networkx.MixedEdgeGraph", "<span class=\"section-number\">3.1.6. </span>pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "<span class=\"section-number\">3.1.8. </span>pywhy_graphs.networkx.is_minimal_m_separator", "<span class=\"section-number\">3.1.7. </span>pywhy_graphs.networkx.m_separated", "<span class=\"section-number\">3.1.9. </span>pywhy_graphs.networkx.minimal_m_separator", "<span class=\"section-number\">4.1.2. </span>pywhy_graphs.simulate.simulate_data_from_var", "<span class=\"section-number\">4.1.1. </span>pywhy_graphs.simulate.simulate_linear_var_process", "<span class=\"section-number\">4.1.3. </span>pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "pywhy_graphs.sys_info", "pywhy_graphs.viz.draw", "pywhy_graphs.viz.timeseries_layout", "<span class=\"section-number\">6. </span>Glossary of Common Terms and API Elements", "<strong>pywhy-graphs</strong>", "Installation", "<span class=\"section-number\">3. </span>Causal Graph Algorithms in PyWhy", "<span class=\"section-number\">1. </span>Causal Graphs in PyWhy", "<span class=\"section-number\">5. </span>Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package", "<span class=\"section-number\">2. </span>Functional Causal Graphical Models", "<span class=\"section-number\">4. </span>Simulation module", "How to use pywhy-graphs with examples and tutorials", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"thi": [0, 1, 3, 5, 6, 8, 10, 14, 15, 16, 17, 19, 23, 25, 26, 27, 30, 31, 33, 37, 38, 42, 46, 54, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 71, 72, 73, 74, 75, 77], "i": [0, 1, 3, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 38, 42, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76], "applic": 0, "program": 0, "interfac": [0, 67, 68, 72], "refer": [0, 13, 14, 17, 24, 30, 50, 56, 58, 59, 60, 67, 68, 71], "camelcas": 0, "name": [0, 6, 8, 12, 13, 14, 15, 16, 17, 31, 34, 35, 44, 49, 50, 56, 57, 58, 59, 60, 61, 65, 67, 71], "underscore_cas": 0, "pywhi": [0, 13, 14, 46, 47, 48, 51, 67, 69, 73, 76, 77, 79], "group": 0, "themat": 0, "analysi": 0, "stage": [0, 54, 68], "These": [0, 3, 24, 67], "ar": [0, 3, 6, 8, 12, 13, 14, 15, 16, 19, 21, 23, 24, 28, 29, 30, 31, 32, 35, 38, 41, 42, 44, 46, 47, 49, 50, 53, 54, 56, 57, 58, 60, 61, 62, 67, 68, 70, 71, 73, 77], "structur": [0, 12, 15, 16, 31, 33, 36, 37, 38, 54, 56, 67, 70, 71, 72, 74], "scm": [0, 3, 15, 16, 31, 67, 71], "variou": [0, 3, 8, 71, 79], "encount": [0, 72], "literatur": [0, 3], "tradit": [0, 3, 12, 71], "oper": [0, 17], "over": [0, 6, 15, 16, 26, 27, 31, 32, 35, 38, 56, 59, 61, 68, 71], "onli": [0, 3, 6, 15, 16, 30, 31, 35, 38, 46, 56, 59, 67, 71, 72, 73], "one": [0, 3, 6, 8, 13, 16, 19, 20, 23, 30, 32, 44, 46, 54, 56, 61, 62, 71, 72, 73], "type": [0, 1, 5, 7, 12, 13, 14, 15, 16, 31, 34, 38, 39, 44, 47, 49, 50, 51, 52, 56, 62, 67, 68, 72, 75, 76], "equival": [0, 3, 14, 15, 16, 31, 67, 71, 76], "gener": [0, 1, 3, 6, 8, 10, 12, 15, 16, 31, 54, 56, 61, 62, 65, 71, 73, 74, 75, 76], "consist": [0, 26, 27, 32, 54, 61, 68, 71], "more": [0, 3, 8, 13, 16, 54, 56, 62, 65, 67, 68, 71, 72], "than": [0, 16, 26, 27, 38, 54, 56, 71, 72], "common": [0, 3, 46, 68, 70, 71, 76], "us": [0, 1, 2, 4, 5, 6, 8, 10, 17, 19, 30, 31, 33, 37, 38, 55, 64, 67, 68, 69, 72, 74, 76], "varieti": 0, "differ": [0, 1, 3, 5, 7, 8, 10, 12, 13, 14, 15, 16, 31, 35, 56, 58, 60, 62, 67, 68, 71, 75], "learn": [0, 3, 14, 15, 16, 17, 24, 31, 44, 64, 68, 71, 73, 75, 76, 79], "implement": [0, 6, 25, 26, 27, 56, 58, 59, 60, 67, 68, 71, 72, 79], "infer": [0, 3, 14, 19, 24, 68], "procedur": [0, 17], "encod": [0, 3, 44, 71, 73], "object": [0, 3, 6, 8, 10, 15, 16, 31, 33, 38, 44, 56, 62, 67, 71], "submodul": [0, 68, 70, 73, 79], "those": [0, 56, 62], "data": [0, 12, 13, 14, 15, 16, 31, 32, 33, 38, 53, 54, 56, 61, 62, 67, 70, 71, 72, 73, 74], "correspond": [0, 6, 12, 14, 15, 16, 38, 46, 56, 63, 67, 71, 73], "current": [0, 19, 25, 26, 27, 32, 68, 71, 72, 73], "doe": [0, 16, 23, 30, 56, 59, 68], "support": [0, 32, 41, 46, 56, 68, 69, 71, 72, 73, 79], "which": [0, 3, 6, 10, 15, 16, 20, 24, 25, 26, 27, 30, 31, 32, 38, 44, 51, 53, 54, 56, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 74, 76], "crucial": 0, "repres": [0, 3, 6, 12, 13, 14, 15, 16, 46, 47, 49, 50, 54, 56, 57, 58, 67, 68, 71, 72, 73], "latent": [0, 3, 12, 14, 15, 16, 24, 30, 31, 62, 67, 71, 73], "confound": [0, 3, 6, 12, 15, 16, 30, 31, 57, 62, 67, 71, 73], "select": [0, 3, 12, 16, 24, 30, 54, 71, 76], "bia": [0, 3, 12, 16, 30, 71], "The": [0, 3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73], "follow": [0, 16, 24, 46, 49, 50, 56, 67, 71, 72], "we": [0, 3, 6, 8, 10, 16, 30, 38, 46, 53, 54, 58, 61, 62, 67, 70, 71, 72, 73, 74, 75, 79], "intend": 0, "pr": 0, "eventu": [0, 56, 68], "thei": [0, 3, 6, 8, 13, 14, 15, 16, 31, 38, 46, 54, 56, 68, 71, 72], "includ": [0, 19, 32, 33, 56, 58, 60, 61, 62, 63, 64, 67, 71, 79], "temporari": 0, "bridg": 0, "welcom": [0, 72], "feedback": 0, "specif": [0, 6, 19, 46, 54, 55, 56, 58, 60, 66, 67, 68, 72], "time": [0, 3, 6, 8, 10, 26, 27, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 61, 62, 63, 66, 67, 76, 79], "seri": [0, 3, 10, 32, 33, 34, 36, 37, 38, 39, 41, 42, 61, 62, 63, 66, 67, 76, 79], "also": [0, 46, 54, 56, 66, 67, 68, 70, 71, 73], "have": [0, 3, 6, 16, 18, 22, 23, 42, 46, 53, 54, 56, 57, 59, 61, 68, 71, 72], "like": [0, 6, 16, 33, 46, 47, 49, 50, 56, 64, 68, 71, 72], "stationari": [0, 31, 32, 33, 34, 35, 38, 42, 61, 62, 63, 71], "mai": [0, 12, 15, 16, 22, 32, 54, 56, 58, 59, 60, 62, 67, 71], "For": [0, 3, 6, 8, 10, 13, 14, 15, 16, 31, 32, 35, 53, 54, 56, 61, 65, 67, 68, 71, 73], "explicitli": [0, 56, 73], "them": [0, 1, 2, 4, 12, 15, 16, 23, 56, 59, 65, 67, 75], "assist": 0, "start": [0, 20, 25, 26, 27, 28, 29, 30, 43, 44, 50, 61, 63, 74], "from": [0, 3, 8, 10, 14, 15, 16, 20, 24, 30, 31, 35, 38, 39, 41, 42, 43, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 76, 79], "an": [0, 1, 2, 4, 6, 8, 12, 13, 14, 15, 16, 17, 19, 23, 24, 30, 31, 32, 33, 35, 38, 39, 46, 49, 50, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 75, 79], "linear": [0, 52, 53, 54, 62, 76, 79], "equat": 0, "gaussian": [0, 52, 53, 54, 73], "sem": 0, "compar": [0, 3, 6, 8, 10, 16, 25, 26, 27, 56, 71], "becaus": [0, 3, 6, 16, 46, 54, 58, 60, 68, 71, 72], "can": [0, 3, 6, 8, 10, 12, 15, 16, 19, 21, 30, 31, 32, 38, 46, 56, 59, 61, 62, 64, 65, 68, 71, 72, 73], "wrap": [0, 59], "graphviz": [0, 3, 8, 10, 65, 76], "pygraphviz": [0, 32, 64, 71], "perform": [0, 59], "modular": 0, "node": [0, 3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 44, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 79], "modul": [0, 56, 64, 67, 68, 76], "simpl": [1, 16, 67, 68, 71, 75], "demonstr": [1, 5, 8, 10, 75], "how": [1, 2, 4, 5, 8, 10, 12, 15, 16, 19, 46, 47, 56, 59, 65, 67, 71], "note": [1, 3, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 30, 31, 32, 38, 42, 46, 47, 50, 51, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 75, 77], "wip": [1, 5, 75], "api": [1, 5, 6, 33, 56, 71, 75, 76, 77, 78, 79], "intent": [1, 5, 75], "ad": [1, 3, 5, 6, 13, 14, 15, 16, 18, 31, 32, 38, 56, 57, 71, 73, 75, 79], "edg": [1, 3, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 30, 31, 32, 33, 34, 35, 38, 42, 46, 47, 50, 53, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 70, 71, 72, 73, 75, 79], "draw": [1, 3, 9, 11, 12, 15, 16, 36, 56, 66, 75, 79], "set": [1, 3, 6, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 71, 73, 75], "layout": [1, 9, 11, 12, 15, 16, 36, 56, 65, 66, 75, 79], "comparison": [1, 9, 10, 11, 12, 15, 16, 56, 65, 75], "timeseri": [1, 9, 11, 65, 66, 75, 76, 79], "download": [1, 3, 6, 8, 10, 75], "all": [1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 31, 32, 33, 38, 42, 53, 54, 56, 57, 58, 60, 67, 68, 71, 72, 75, 77], "python": [1, 3, 6, 8, 10, 15, 16, 31, 38, 56, 64, 67, 68, 69, 75], "sourc": [1, 3, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 75], "code": [1, 3, 6, 8, 10, 50, 67, 75], "auto_examples_python": [1, 75], "zip": [1, 75], "jupyt": [1, 3, 6, 8, 10, 75], "notebook": [1, 3, 6, 8, 10, 75], "auto_examples_jupyt": [1, 75], "sphinx": [1, 3, 6, 8, 10, 67, 75], "click": [3, 6, 8, 10], "here": [3, 6, 8, 10, 50, 56, 72, 75, 79], "full": [3, 6, 8, 10, 56, 62], "exampl": [3, 6, 8, 10, 13, 14, 31, 32, 35, 38, 46, 54, 61, 64, 67, 68, 71, 73], "graphic": [3, 13, 53, 67, 76], "attach": 3, "notion": 3, "each": [3, 6, 8, 10, 13, 14, 15, 16, 23, 31, 34, 38, 54, 56, 61, 64, 65, 66, 67, 71, 73], "miss": [3, 54, 62], "review": 3, "fundament": [3, 68], "import": [3, 6, 8, 10, 64, 67, 68, 76, 79], "networkx": [3, 6, 8, 10, 12, 13, 14, 15, 16, 31, 32, 34, 38, 39, 53, 54, 64, 67, 71, 72, 79], "nx": [3, 6, 8, 33, 41, 56, 63, 67, 68, 71], "numpi": [3, 32, 46, 47, 49, 64, 67, 71, 76, 79], "np": [3, 44, 46, 67], "panda": [3, 61, 63, 64, 67], "pd": [3, 25, 26, 27, 30, 67, 79], "dowhi": [3, 64], "gcm": 3, "util": 3, "set_random_se": 3, "scipi": [3, 32, 62, 64, 71], "stat": [3, 62], "pywhy_graph": [3, 6, 8, 10, 67, 68, 76, 79], "pywhy_nx": [3, 17, 44, 65, 68], "viz": [3, 8, 10, 79], "1": [3, 4, 6, 8, 10, 13, 14, 17, 24, 25, 26, 27, 30, 32, 33, 36, 37, 38, 46, 50, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 77], "mathemat": 3, "defin": [3, 6, 24, 25, 26, 27, 30, 32, 46, 47, 53, 56, 67, 71], "4": [3, 25, 58, 60, 64, 66, 67, 71], "tupl": [3, 6, 13, 14, 15, 16, 20, 21, 26, 27, 30, 31, 32, 38, 42, 45, 54, 56, 67, 71], "v": [3, 6, 15, 16, 20, 24, 30, 31, 35, 38, 42, 56, 59, 60, 67], "u": [3, 8, 10, 15, 16, 20, 24, 30, 31, 35, 38, 42, 53, 56, 67, 68], "f": [3, 6, 13, 14, 67, 71], "p": [3, 20, 67], "where": [3, 6, 13, 14, 15, 16, 20, 23, 31, 32, 38, 46, 53, 56, 62, 67, 68, 71], "endogen": [3, 67], "observ": [3, 61, 63, 67], "variabl": [3, 6, 14, 24, 30, 32, 39, 40, 53, 54, 57, 61, 62, 66, 67, 71, 73], "exogen": [3, 52, 67], "unobserv": [3, 6, 15, 31, 57, 71], "function": [3, 6, 8, 10, 16, 23, 30, 32, 36, 37, 39, 42, 56, 58, 64, 67, 68, 70, 71, 72, 74, 76, 79], "everi": [3, 6, 20, 24, 30, 59, 71], "distribut": [3, 14, 53, 54, 62, 67, 73], "taken": [3, 30, 56], "togeth": 3, "four": [3, 56], "mechan": [3, 54], "problem": [3, 14], "almost": 3, "alwai": [3, 32, 58, 60, 67, 68, 71], "howev": [3, 12, 30, 61, 62, 67, 68, 71], "induc": [3, 15, 31, 56, 67, 71], "ha": [3, 6, 14, 15, 16, 20, 24, 31, 38, 46, 56, 58, 59, 60, 62, 67, 68, 71, 73, 79], "argument": [3, 8, 10, 12, 13, 14, 15, 16, 30, 31, 32, 34, 35, 38, 56, 64, 67, 71, 79], "If": [3, 6, 14, 15, 16, 19, 22, 24, 30, 31, 32, 35, 38, 42, 54, 56, 58, 60, 61, 64, 68, 71], "parent": [3, 15, 16, 20, 31, 35, 53, 54, 67, 73], "ani": [3, 6, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 42, 44, 45, 46, 49, 50, 52, 54, 56, 61, 65, 67, 71, 73], "bidirect": [3, 6, 12, 13, 14, 15, 16, 17, 31, 35, 46, 57, 58, 59, 60, 67, 68, 71, 73], "between": [3, 12, 15, 16, 20, 23, 24, 27, 30, 31, 38, 44, 46, 53, 54, 56, 58, 59, 60, 67, 68, 71, 72, 79], "two": [3, 6, 12, 15, 16, 27, 30, 46, 54, 56, 57, 67, 68, 71], "even": [3, 60], "though": 3, "typic": [3, 6, 30], "unknown": [3, 14], "still": [3, 54, 67], "ground": 3, "truth": 3, "evalu": 3, "algorithm": [3, 15, 16, 31, 58, 59, 60, 68, 71, 74, 76, 79], "build": [3, 68], "our": [3, 68], "intuit": [3, 30], "understand": 3, "context": [3, 68], "random": [3, 13, 14, 52, 53, 54, 61, 62, 63, 66], "seed": [3, 52, 53, 54, 63], "make": [3, 17, 38], "reproduc": [3, 56], "12345": 3, "rng": 3, "randomst": [3, 52], "class": [3, 6, 12, 13, 14, 15, 16, 46, 56, 67, 68, 76, 79], "mycustommodel": 3, "predictionmodel": 3, "def": 3, "__init__": 3, "self": 3, "coeffici": 3, "fit": [3, 67], "x": [3, 6, 8, 10, 13, 14, 15, 16, 24, 26, 27, 31, 32, 35, 46, 53, 54, 58, 59, 60, 61, 65, 67, 71, 73], "y": [3, 6, 8, 10, 13, 14, 15, 16, 24, 31, 32, 35, 46, 54, 58, 59, 60, 65, 67, 71, 73], "noth": 3, "sinc": [3, 6, 46, 56, 79], "know": [3, 6, 71], "pass": [3, 8, 10, 15, 16, 30, 31, 35, 61, 64], "predict": [3, 24], "return": [3, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67], "clone": [3, 69], "don": [3, 56], "t": [3, 32, 33, 43, 56, 61, 66, 67, 71], "realli": 3, "need": [3, 30, 32, 68, 71, 75], "actual": [3, 38, 56, 72], "1234": 3, "construct": [3, 19, 23, 49, 51, 54], "result": [3, 6, 16, 62, 71], "xy": [3, 8], "z": [3, 6, 8, 24, 32, 46, 58, 59, 60, 71, 73], "w": [3, 8], "_________": 3, "g": [3, 6, 8, 10, 17, 18, 19, 22, 23, 28, 29, 30, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 65, 66, 68], "digraph": [3, 6, 8, 12, 13, 14, 15, 16, 31, 34, 35, 39, 40, 41, 53, 54, 56, 57, 65, 68, 71], "dot_graph": 3, "render": [3, 8, 10, 67], "outfil": [3, 8, 10], "png": [3, 8, 10], "view": [3, 8, 10, 38, 56], "true": [3, 6, 8, 10, 17, 31, 32, 33, 35, 38, 39, 42, 53, 54, 56, 58, 59, 64, 67, 71], "causal_model": 3, "probabilisticcausalmodel": 3, "set_causal_mechan": 3, "scipydistribut": 3, "binom": [3, 54], "0": [3, 6, 8, 10, 13, 14, 24, 32, 42, 43, 46, 50, 53, 54, 61, 62, 64, 66, 67, 68, 71, 72, 77], "5": [3, 10, 62, 64, 66], "n": [3, 15, 16, 31, 35, 53, 56], "9": [3, 24, 32, 71, 79], "additivenoisemodel": 3, "prediction_model": 3, "noise_model": 3, "8": [3, 8, 10, 11, 58, 64, 69], "would": [3, 6, 16, 32, 46, 60, 61, 66, 71], "paramet": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71], "do": [3, 16, 23, 56, 67, 71, 73], "anyth": [3, 67], "method": [3, 56, 67, 70, 71, 72], "ensur": [3, 59], "fcm": 3, "correct": [3, 15, 16, 31, 35, 56], "local": [3, 64], "hash": 3, "e": [3, 6, 8, 10, 17, 19, 24, 30, 33, 50, 56, 59, 60, 62, 64, 66, 67, 68, 69, 71], "get": [3, 6, 8, 10, 53, 54, 56], "inconsist": [3, 19, 54, 67], "error": [3, 23, 56, 72], "modifi": [3, 53, 54, 55, 61, 71], "afterward": 3, "without": [3, 6, 8, 10, 12, 16, 17, 33, 38, 56, 62, 67, 71], "updat": [3, 15, 16, 31, 38, 56], "empti": [3, 32, 58, 59, 60, 71], "small": 3, "workaround": 3, "pre": [3, 46, 47, 79], "datafram": [3, 61, 63], "column": [3, 44, 49, 50, 61, 66], "sampl": [3, 53, 54, 63, 67], "draw_sampl": 3, "num_sampl": 3, "500": [3, 61], "print": [3, 6, 8, 10, 46, 64], "head": 3, "col": 3, "uniqu": [3, 32, 46, 71], "show": [3, 6, 8, 64], "collid": [3, 20, 22, 24, 59], "collis": 3, "arrow": [3, 72], "00": [3, 4, 7, 11], "": [3, 14, 15, 16, 18, 19, 24, 31, 32, 38, 50, 54, 56, 67, 68, 71, 73, 77], "100": 3, "1136": 3, "79it": 3, "3": [3, 6, 10, 11, 14, 15, 16, 20, 25, 31, 38, 50, 54, 56, 60, 64, 66, 69, 71, 72], "2": [3, 6, 10, 14, 15, 16, 19, 24, 31, 32, 38, 46, 50, 53, 54, 56, 61, 64, 67, 71, 72], "row": [3, 44, 49, 50, 66, 67], "dtype": 3, "0x7ff7aacf5790": 3, "markovian": [3, 15, 16, 31, 71], "suffici": [3, 15, 31, 71], "assumpt": [3, 15, 16, 31, 33, 71], "One": [3, 8, 10, 15, 31, 49, 50, 51, 67, 68, 71], "queri": [3, 6, 32, 56, 71], "list": [3, 14, 20, 21, 30, 32, 34, 38, 39, 44, 45, 49, 50, 53, 54, 56, 61, 66, 67, 68, 71, 73, 79], "predecessor": 3, "Or": 3, "children": [3, 15, 16, 31, 35, 67, 73], "successor": 3, "explor": [3, 20], "d": [3, 15, 16, 24, 25, 26, 27, 31, 32, 38, 56, 71], "separ": [3, 16, 24, 25, 26, 27, 32, 46, 58, 59, 60, 71, 79], "statement": [3, 67], "markov": [3, 14, 15, 16, 31, 67, 71, 76], "condit": [3, 59, 61, 67], "impli": [3, 15, 31, 50, 54, 71], "independ": [3, 56, 61, 62, 67], "d_separ": [3, 59], "open": [3, 68], "up": [3, 32, 71], "path": [3, 20, 22, 24, 25, 26, 27, 30, 58, 59, 64, 67, 79], "given": [3, 15, 16, 18, 19, 30, 31, 32, 38, 54, 56, 59, 71], "fals": [3, 6, 30, 32, 38, 41, 56, 58, 64, 71], "semi": [3, 16, 71], "possibli": [3, 24, 25, 26, 27, 41, 53, 54, 56], "depict": [3, 32, 71], "just": [3, 6, 12, 13, 14, 15, 16, 31, 35, 63, 69, 71, 72], "set_nodes_as_latent_confound": [3, 8], "now": [3, 6, 63], "anymor": 3, "form": [3, 22, 23, 24, 62, 70, 71, 72], "cluster": 3, "what": [3, 16, 17, 54, 71, 77], "compon": [3, 12, 17, 25, 54, 67], "c": [3, 12, 20, 30, 67], "short": 3, "c_compon": [3, 12, 67], "look": [3, 10, 68, 75], "m": [3, 17, 58, 59, 60, 79], "similarli": [3, 56, 58, 71], "m_separ": [3, 79], "sai": 3, "add": [3, 6, 12, 13, 15, 16, 18, 31, 32, 34, 38, 56, 68, 69, 71, 73, 79], "longer": 3, "add_edg": [3, 6, 15, 16, 31, 38, 56, 68], "bidirected_edge_nam": [3, 12, 13, 14, 16, 35, 57, 58, 59, 60, 71], "after": [3, 19, 30], "besid": [3, 30, 56], "relationship": [3, 12, 15, 16, 31, 67, 71], "other": [3, 6, 8, 10, 16, 23, 46, 54, 56, 67, 71, 72], "same": [3, 6, 8, 10, 12, 15, 16, 19, 31, 38, 46, 56, 62, 67, 71], "commonli": 3, "constraint": [3, 15, 16, 17, 31, 71], "base": [3, 15, 16, 17, 19, 31, 53, 56, 68, 71], "seek": 3, "reconstruct": 3, "part": [3, 67], "In": [3, 8, 10, 16, 17, 30, 32, 42, 46, 54, 56, 61, 62, 68, 71, 73, 79], "next": [3, 10, 71], "section": 3, "briefli": 3, "overview": [3, 67, 75], "usual": [3, 67, 68], "so": [3, 6, 8, 16, 56, 58, 67, 68, 71, 72], "dodiscov": [3, 64], "http": [3, 8, 14, 17, 24, 30, 50, 51, 56, 65, 67, 69], "github": [3, 51, 68, 69], "com": [3, 30, 69], "py": [3, 4, 6, 7, 8, 10, 11, 69], "why": [3, 69], "_": [3, 67], "detail": [3, 14, 54, 67, 68], "discoveri": [3, 14, 17, 30, 71, 74], "pleas": [3, 56, 68, 72], "see": [3, 8, 10, 13, 14, 36, 37, 46, 47, 50, 51, 54, 56, 62, 65, 67, 68, 71], "repo": 3, "stem": [3, 71], "relev": [3, 32, 56, 64, 67, 68, 71], "assum": [3, 38, 61, 63, 68, 71, 74], "uncertain": [3, 22, 24], "orient": [3, 15, 16, 20, 30, 31, 35, 67, 71], "via": [3, 6, 15, 16, 31, 35, 38, 56, 69], "undirect": [3, 12, 13, 14, 15, 16, 31, 32, 35, 37, 41, 46, 56, 58, 59, 60, 71, 79], "ll": 3, "earlier": 3, "learnt": 3, "variant": 3, "pc": [3, 15, 31, 71], "let": [3, 8, 10], "add_edges_from": [3, 8, 10, 15, 16, 31, 38, 56], "undirected_edge_nam": [3, 8, 12, 13, 14, 15, 16, 31, 35, 58, 59, 60, 71], "unshield": [3, 30], "present": [3, 6, 12, 15, 16, 17, 46, 58, 59, 60, 66, 71], "origin": [3, 14, 38, 56], "orient_uncertain_edg": [3, 8, 15, 16, 31, 35], "allow": [3, 6, 13, 15, 16, 24, 31, 33, 46, 59, 62, 67, 71, 72], "complex": [3, 16, 71], "circl": [3, 14, 16, 30, 35, 46, 50, 65, 71, 72, 79], "endpoint": [3, 14, 16, 20, 27, 30, 44, 46, 71, 72], "A": [3, 6, 8, 12, 15, 16, 17, 20, 22, 23, 30, 31, 32, 34, 35, 36, 37, 38, 41, 56, 57, 59, 63, 66, 67, 71], "o": [3, 16, 22, 30, 46, 50, 59, 60, 71, 72], "either": [3, 14, 17, 46, 47, 54, 56, 67], "tail": [3, 16, 30, 46, 50, 71, 72], "arrowhead": [3, 15, 16, 30, 31, 35, 50, 71, 72], "possibl": [3, 12, 16, 18, 19, 28, 29, 54, 71], "presenc": [3, 6, 12, 17, 30, 71], "fci": [3, 16, 30, 71], "circle_edge_nam": [3, 14, 16, 35, 71], "judea": [3, 13, 14], "pearl": [3, 13, 14], "reason": 3, "cambridg": 3, "univers": 3, "press": [3, 17, 24], "usa": 3, "2nd": 3, "edit": 3, "2009": 3, "isbn": [3, 24], "052189560x": 3, "peter": [3, 17, 24], "spirt": [3, 24], "clark": [3, 24], "glymour": [3, 24], "richard": [3, 24], "schein": [3, 24], "causat": [3, 24], "search": [3, 24, 25, 26, 27, 30, 59], "volum": [3, 17, 24], "81": [3, 24], "mit": [3, 24], "01": [3, 7, 11, 24], "1993": [3, 13, 24], "978": [3, 24], "4612": [3, 24], "7650": [3, 24], "doi": [3, 14, 24, 30, 58, 59, 60], "10": [3, 8, 10, 14, 24, 30, 46, 58, 59, 60, 79], "1007": [3, 24], "2748": [3, 24], "jiji": [3, 30], "zhang": [3, 30], "On": [3, 30], "rule": [3, 16, 30, 71], "artifici": [3, 17, 30, 58, 59, 60], "intellig": [3, 17, 30, 58, 59, 60], "172": [3, 30], "16": [3, 30, 79], "1873": [3, 30], "1896": [3, 30], "2008": [3, 30], "url": [3, 14, 17, 24, 30], "www": [3, 14, 30], "sciencedirect": [3, 30], "scienc": [3, 14, 30], "articl": [3, 30], "pii": [3, 30], "s0004370208001008": [3, 30], "org": [3, 8, 14, 24, 30, 50, 56, 65, 69], "1016": [3, 30, 58, 59, 60], "j": [3, 21, 30, 46, 53, 58, 59, 60], "artint": [3, 30, 58, 59, 60], "08": [3, 30, 64], "001": [3, 30], "total": [3, 4, 6, 7, 8, 10, 11, 32, 54, 56, 71], "run": [3, 6, 8, 10, 64, 69], "script": [3, 6, 8, 10, 67], "minut": [3, 6, 8, 10], "094": [3, 4], "second": [3, 6, 8, 10, 56, 59, 67, 71], "estim": [3, 6, 8, 10, 67], "memori": [3, 6, 8, 10, 64, 67], "usag": [3, 6, 8, 10, 67, 68], "58": [3, 4], "mb": [3, 4, 6, 7, 8, 10, 11], "intro_causal_graph": [3, 4, 8, 10], "ipynb": [3, 6, 8, 10], "galleri": [3, 6, 8, 10, 67], "04": 4, "execut": [4, 7, 11, 64], "auto_examples_intro": 4, "file": [4, 7, 11, 48, 51, 64, 72], "introduct": [4, 12, 15, 16, 56, 59, 65], "causal": [4, 6, 12, 13, 14, 15, 16, 17, 30, 31, 34, 35, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 76, 79], "graph": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 74, 76, 77, 79], "compris": [6, 56, 67], "user": [6, 13, 56, 64, 67, 68], "arbitrari": [6, 56], "represent": [6, 56, 59, 65, 68], "intern": [6, 12, 13, 15, 23, 31, 35, 68, 71], "semant": 6, "normal": [6, 53], "should": [6, 15, 16, 31, 33, 37, 38, 56, 67, 68, 76], "convert": [6, 17, 44, 46, 47, 48, 49, 50, 51, 53, 54, 57, 61, 73, 79], "its": [6, 32, 67, 71, 72, 73], "appropri": 6, "direct": [6, 12, 13, 14, 15, 16, 17, 23, 24, 30, 31, 32, 33, 35, 36, 38, 41, 46, 56, 57, 58, 59, 60, 65, 68, 71, 73], "relat": [6, 8, 10, 12, 67, 68, 71], "matplotlib": [6, 64], "pyplot": 6, "plt": 6, "pg": 6, "kind": [6, 16, 56, 71], "To": [6, 30, 42, 54, 56, 61, 62, 68, 69, 73, 75], "creat": [6, 8, 10, 32, 39, 54, 56, 68, 71], "specifi": [6, 8, 15, 16, 31, 38, 54, 56, 57, 62, 68, 71], "associ": [6, 56, 67], "directed_g": 6, "bidirected_g": 6, "add_nodes_from": [6, 56], "edge_typ": [6, 15, 16, 31, 34, 38, 56, 68, 71], "iv": 6, "comput": [6, 19, 25, 26, 27, 30, 41, 53, 54, 56], "multipartite_layout": 6, "layer": [6, 33, 71, 73], "attribut": [6, 12, 13, 15, 16, 19, 31, 32, 34, 38, 53, 54, 55, 56, 65, 67, 71, 73], "po": [6, 8, 10, 65, 66], "spring_layout": [6, 8], "visual": [6, 10, 11, 12, 15, 16, 56, 65], "fig": 6, "ax": 6, "subplot": 6, "draw_networkx": 6, "get_graph": [6, 56, 68], "set_titl": 6, "instrument": 6, "tight_layout": 6, "block": 6, "is_direct": [6, 56], "multigraph": [6, 56], "is_multigraph": [6, 56], "bidirected_edg": [6, 12, 16, 35, 71], "0x7ff7e7f193a0": 6, "0x7ff7e525ba00": 6, "similar": [6, 16, 56, 67, 68, 71], "By": [6, 12, 13, 14, 15, 16, 20, 24, 30, 31, 33, 38, 54, 56, 61, 63, 65, 67, 71], "default": [6, 10, 12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 38, 39, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71], "store": [6, 8, 10, 12, 15, 16, 44, 51, 56, 70, 71, 72], "insid": [6, 79], "assert": [6, 68], "order": [6, 8, 15, 16, 31, 32, 33, 35, 43, 44, 49, 50, 56, 61, 66, 71, 73], "len": [6, 56], "number_of_nod": [6, 56], "new": [6, 56, 68, 77], "has_nod": [6, 56], "add_nod": 6, "remov": [6, 19, 38, 54, 56, 58, 60, 71], "remove_nod": 6, "except": [6, 19, 38, 56], "per": [6, 62], "As": 6, "must": [6, 15, 16, 27, 30, 31, 33, 38, 44, 54, 56, 61, 65, 71], "when": [6, 15, 16, 19, 30, 31, 38, 56, 58, 62, 64, 67, 68, 77], "you": [6, 16, 54, 56, 61, 68, 69, 71, 72, 75], "well": [6, 56], "has_edg": [6, 42, 56, 68], "remove_edg": [6, 38, 56], "standard": [6, 72], "adj": [6, 56], "degre": [6, 56], "instead": [6, 56, 61], "moreov": [6, 53, 54, 56], "neighbor": [6, 56], "uni": 6, "counterpart": 6, "mani": [6, 56, 68], "connect": [6, 13, 15, 17, 21, 30, 31, 32, 35, 54, 56, 57, 59, 62, 71], "adjac": [6, 20, 22, 24, 25, 30, 46, 47, 50, 56], "provid": [6, 38, 56, 67, 68, 70, 71, 72, 73, 74], "wai": [6, 16, 56, 71, 72], "iter": [6, 12, 15, 16, 31, 33, 35, 43, 56, 71], "through": [6, 56, 67], "item": [6, 56], "want": [6, 16, 56, 71], "dictionari": [6, 8, 10, 15, 16, 31, 38, 56, 66, 68, 73], "905": [6, 7], "45": 6, "plot_mixed_edge_graph": [6, 7], "auto_examples_mixededg": 7, "mixededgegraph": [7, 12, 13, 15, 16, 17, 38, 44, 57, 63, 65, 68, 71, 79], "44": 7, "6": [7, 58, 64, 79], "case": [8, 10, 16, 30, 42, 61, 71], "choos": [8, 10, 19], "place": [8, 10, 17, 53, 54, 57], "fix": [8, 54, 77, 78, 79], "easili": 8, "posit": [8, 10, 65, 66, 79], "label": [8, 15, 16, 31, 38, 56, 57, 65, 79], "altern": 8, "own": [8, 72], "manual": [8, 51, 56], "softwar": [8, 10, 68], "dagitti": [8, 76], "arrai": [8, 10, 32, 44, 46, 47, 49, 50, 61, 66, 67, 71, 72, 79], "15471958": 8, "42925134": 8, "7990356": 8, "90151211": 8, "36916753": 8, "62354034": 8, "6548282": 8, "09580111": 8, "92997669": 8, "pag": [8, 10, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 33, 44, 47, 49, 50, 51, 68, 71, 79], "cpdag": [8, 10, 16, 23, 31, 44, 47, 49, 50, 51, 71, 79], "some": [8, 10, 24, 56, 68, 71, 75], "dummi": [8, 10], "admg": [8, 10, 13, 15, 16, 31, 44, 46, 49, 51, 59, 68, 71], "borrow": [8, 10], "pos_g": [8, 10], "k": [8, 38, 56], "inspect": [8, 10], "notic": [8, 10], "kei": [8, 10, 12, 13, 15, 16, 31, 32, 34, 38, 56, 65, 66, 67, 71, 73], "coordin": [8, 10, 65], "valu": [8, 10, 12, 13, 15, 16, 31, 32, 34, 38, 46, 47, 54, 56, 65, 67, 71, 72, 73], "call": [8, 10, 14, 17, 25, 26, 27, 60, 67, 71], "dot_g": [8, 10], "dot_admg": 8, "dot_cpdag": 8, "dot_pag": 8, "engin": [8, 10, 68], "neato": [8, 10], "requir": [8, 16, 67, 71], "leverag": 8, "inform": [8, 13, 14, 47, 56, 62, 64, 65, 67], "document": [8, 36, 37, 50, 51, 56, 65, 67, 68, 70, 71], "doc": [8, 56, 65, 67], "397": [8, 11], "draw_and_compare_graphs_with_same_layout": [8, 11], "rather": [10, 16, 56, 71], "messi": 10, "final": [10, 56, 62, 71, 73], "output": [10, 46, 48, 61, 64, 71], "effect": [10, 15, 16, 31, 38, 56, 62, 73, 75], "stationarytimeseriesdigraph": [10, 33, 39, 40, 62, 71], "timeseries_layout": 10, "max_lag": [10, 32, 33, 34, 36, 37, 38, 39, 40, 61, 62, 63, 71], "ts_edg": 10, "x1": 10, "x2": 10, "x3": 10, "first": [10, 13, 30, 54, 56, 58, 59, 67, 69, 71], "default_g": 10, "nice": 10, "variable_ord": [10, 66], "scale": [10, 66], "7": [10, 60, 64], "33333333": 10, "841": [10, 11], "plot_timeseries_graph": [10, 11], "238": 11, "auto_examples_visu": 11, "incoming_directed_edg": [12, 13, 14, 15, 16, 31, 35, 71], "none": [12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71], "incoming_bidirected_edg": [12, 13, 14, 16, 35, 71], "incoming_undirected_edg": [12, 13, 14, 15, 16, 31, 35, 71], "directed_edge_nam": [12, 13, 14, 15, 16, 31, 35, 57, 58, 59, 60, 71], "str": [12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 42, 44, 45, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 71], "attr": [12, 13, 14, 15, 16, 31, 32, 33, 34, 35, 36, 37, 38, 56, 65, 71], "acycl": [12, 15, 24, 31, 62, 68, 71, 76, 79], "mix": [12, 16, 34, 38, 56, 58, 59, 60, 65, 68, 70, 71, 72, 79], "constitut": [12, 67, 71], "dag": [12, 15, 16, 31, 35, 44, 49, 50, 51, 53, 54, 57, 59, 62, 63, 68, 71, 72], "did": [12, 71], "while": [12, 67, 68, 71], "input": [12, 13, 14, 15, 16, 31, 32, 53, 56, 70, 71, 73], "option": [12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 38, 39, 44, 52, 53, 54, 56, 61, 62, 63, 65, 66, 71], "initi": [12, 13, 14, 15, 16, 31, 32, 56, 61, 63, 71], "accept": [12, 13, 14, 15, 16, 31, 71], "keyword": [12, 13, 15, 16, 31, 32, 34, 38, 56, 68, 71, 79], "pair": [12, 13, 14, 15, 16, 21, 23, 31, 32, 34, 46, 56, 67, 71], "subgraph": [12, 13, 14, 15, 16, 24, 31, 38, 56, 71], "underneath": [12, 15, 16, 71], "hood": [12, 15, 16, 71], "non": [12, 15, 20, 22, 23, 33, 46, 56, 58, 59, 71, 73], "stand": [12, 15, 67, 71], "indic": [12, 14, 15, 16, 32, 46, 67, 71], "access": [12, 15, 16, 31, 38, 56, 67, 71], "sub_directed_graph": [12, 15, 16, 31, 35, 71], "Their": [12, 15, 16, 71], "format": [12, 15, 16, 32, 48, 51, 71, 72], "directed_edg": [12, 15, 16, 31, 35, 71], "sub_bidirected_graph": [12, 16, 35, 71], "sub_undirected_graph": [12, 15, 16, 31, 35, 71], "undirected_edg": [12, 15, 16, 31, 35, 71], "definit": [12, 15, 16, 22, 25, 30, 67, 71], "cycl": [12, 15, 17, 23, 62, 68, 71], "exist": [12, 13, 15, 38, 53, 54, 56, 58, 60, 68, 71, 74], "due": [12, 15, 24, 67, 71], "beyond": [12, 71], "multipl": [12, 46, 56, 61, 71, 72, 73], "properti": [12, 15, 16, 31, 35, 56, 71], "map": [12, 13, 14, 15, 16, 31, 35, 46, 47, 56, 67, 68, 71, 72, 73], "edgeview": [12, 15, 16, 31, 35, 56], "trivial": [12, 30], "themself": 12, "comp": 12, "sub": [12, 15, 16, 17, 31, 35, 56], "augment": [13, 14, 18, 19, 58, 71, 73], "diagram": [13, 14, 54, 76], "intervent": [13, 14, 52, 67, 71, 79], "were": [13, 57], "introduc": 13, "model": [13, 14, 15, 16, 31, 33, 53, 54, 62, 67, 71, 76, 79], "hard": 13, "soft": [13, 14, 52], "explicit": [13, 67], "tbd": 13, "guid": [13, 67, 68], "exactli": [13, 14, 38], "index": [13, 14, 32, 44, 50, 68, 71], "number": [13, 14, 15, 16, 18, 19, 21, 31, 38, 54, 56, 59, 60, 61, 62, 63, 67, 71], "appli": [13, 14, 17, 52, 53, 67], "rightarrow": [13, 14, 46, 54], "regular": [13, 14, 54], "aspect": [13, 68], "proceed": [13, 14, 17], "49th": 13, "session": 13, "statist": [13, 24], "institut": 13, "page": [13, 68, 77], "399": 13, "401": 13, "incoming_circle_edg": [14, 16, 35, 71], "been": [14, 58], "both": [14, 16, 30, 38, 56, 67, 71, 73], "It": [14, 25, 56, 66, 67], "circular": [14, 16, 24, 33, 71], "f_node": 14, "handl": [14, 19, 46, 56, 76], "target": [14, 52, 55, 67, 71], "contain": [14, 15, 16, 23, 25, 31, 38, 42, 46, 56, 58, 59, 60, 67, 68], "integ": [14, 56, 67], "sigma": 14, "special": [14, 16, 30, 67, 71], "known": [14, 68, 71], "domain": [14, 18, 19, 21, 54, 73], "environ": 14, "amin": 14, "jaber": 14, "murat": 14, "kocaoglu": 14, "karthikeyan": 14, "shanmugam": 14, "elia": 14, "bareinboim": 14, "character": [14, 71], "advanc": 14, "neural": 14, "process": [14, 61, 62, 63, 71], "system": [14, 64], "33": 14, "9551": 14, "9561": 14, "2020": [14, 17, 64], "2019": [14, 58, 59, 60], "fusion": 14, "nation": 14, "academi": 14, "113": 14, "27": 14, "7345": 14, "7352": 14, "juli": 14, "2016": 14, "publish": 14, "pna": 14, "content": 14, "1073": 14, "1510507113": 14, "complet": [15, 24, 30, 31, 33, 39, 56, 58, 59, 60, 61, 71], "partial": [15, 16, 17, 31, 68, 71], "uncertainti": [15, 16, 17, 31, 71], "b": [15, 31, 50, 58, 59, 60, 71], "implicit": [15, 16, 31, 71], "score": [15, 31, 71], "ge": [15, 31, 71], "approach": [15, 16, 31, 68, 71, 79], "suspect": [15, 31, 71], "directino": [15, 71], "u_of_edg": [15, 16, 31, 38, 42, 56], "v_of_edg": [15, 16, 31, 38, 42, 56], "automat": [15, 16, 31, 32, 38, 56, 71], "alreadi": [15, 16, 30, 31, 38, 56, 61, 67], "directli": [15, 16, 31, 33, 37, 38, 56, 71], "u_for_edg": [15, 16, 31, 38, 56], "v_for_edg": [15, 16, 31, 38, 56], "string": [15, 16, 31, 38, 56, 65, 67], "hashabl": [15, 16, 31, 38, 56], "assign": [15, 16, 31, 38, 49, 50, 56], "collect": [15, 16, 31, 38, 56], "ebunch_to_add": [15, 16, 31, 38, 56], "singl": [15, 16, 31, 34, 38, 56, 67, 68, 71], "twice": [15, 16, 31, 38, 56], "duplic": [15, 16, 31, 38, 56], "ebunch": [15, 16, 31, 38, 56], "take": [15, 16, 25, 31, 38, 53, 54, 56, 68, 70, 71, 73], "preced": [15, 16, 31, 38, 56], "union": [15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 42, 44, 45, 49, 50, 52, 54, 56, 60, 61], "int": [15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 49, 50, 52, 53, 54, 56, 61, 62, 63, 66, 71], "float": [15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 42, 44, 45, 49, 50, 52, 53, 54, 56, 61, 62, 66], "simpli": [15, 16, 31, 35, 62, 67], "point": [15, 16, 17, 31, 32, 33, 35, 38, 42, 57, 61, 62, 63, 66, 67, 71], "possible_children": [15, 16, 31, 35], "consid": [15, 16, 30, 31, 35, 38, 63, 67], "possible_par": [15, 16, 31, 35], "ancestr": [16, 17, 58, 59, 60, 68, 71], "term": [16, 71, 76], "essenti": [16, 71], "extend": [16, 71], "sub_circle_graph": [16, 35, 71], "circle_edg": [16, 35, 71], "exponenti": [16, 71], "increas": [16, 71], "occur": [16, 52, 61, 71], "main": [16, 56, 71], "complic": [16, 68, 71], "aris": [16, 71], "combin": [16, 71], "abov": [16, 61, 71], "certain": [16, 30, 68, 71], "anoth": [16, 71, 76], "matter": [16, 71], "loss": [16, 71], "deal": [16, 71], "flip": [16, 71], "discuss": [16, 71], "dictat": [16, 71], "sort": [16, 71], "There": [16, 51, 56, 71], "opposit": [16, 71], "qualifi": 16, "yield": [16, 56], "directed_edge_typ": 17, "bidirected_edge_typ": 17, "copi": [17, 38, 50, 56], "bool": [17, 20, 22, 23, 30, 31, 32, 33, 35, 38, 39, 41, 42, 56, 58, 59, 64, 71], "acyclifi": 17, "cyclic": [17, 41, 79], "aci": 17, "whether": [17, 20, 22, 23, 30, 32, 42, 56, 71], "replac": [17, 56, 58], "strongli": 17, "fulli": [17, 57], "Then": [17, 46, 54, 69], "sc": 17, "made": 17, "jori": 17, "mooij": 17, "tom": 17, "claassen": 17, "jona": 17, "david": 17, "sontag": 17, "editor": 17, "36th": 17, "confer": 17, "uai": 17, "124": 17, "machin": 17, "research": [17, 68], "1159": 17, "1168": 17, "pmlr": 17, "03": 17, "06": 17, "aug": 17, "mlr": 17, "v124": 17, "mooij20a": 17, "html": [17, 56], "n_domain": [18, 19, 54], "augmentedgraph": [18, 19, 71, 79], "all_poss_snod": 19, "rais": [19, 23, 38, 56, 72], "invari": [19, 54, 73], "proce": 19, "domain_id": [19, 73], "ignor": [19, 23, 38, 56], "warn": [19, 51, 56, 67], "max_path_length": [20, 24, 25, 26, 27, 30], "find": [20, 21, 24, 60, 68, 79], "discrimin": 20, "least": 20, "vertex": 20, "maximum": [20, 21, 24, 25, 26, 27, 30, 32, 33, 34, 39, 62, 63, 71], "distanc": [20, 30], "check": [20, 22, 23, 30, 32, 42, 51, 56, 58, 59, 62, 71], "1000": [20, 24, 25, 26, 27, 30, 61, 62, 63], "explored_nod": 20, "disc_path": 20, "found_discriminating_path": 20, "wa": [20, 23, 58, 60], "found": [20, 30, 56, 58, 60, 64], "max_numb": 21, "id": [21, 73], "connected_pair": 21, "node1": 22, "node2": 22, "node3": 22, "noncollid": 22, "is_noncollid": 22, "on_error": 23, "valid": [23, 32, 60, 71], "most": [23, 67, 68, 71], "compliant": [23, 71], "sens": [23, 71], "constrain": 23, "node_x": [24, 25, 26, 27], "node_i": [24, 25, 26, 27], "length": [24, 25, 26, 27, 44, 49, 50, 61, 67], "dsep": 24, "along": 24, "characterist": 24, "subpath": 24, "tripl": 24, "triangl": 24, "meet": 24, "fact": 24, "shield": 24, "diego": 24, "colombo": 24, "marlo": 24, "h": 24, "maathui": 24, "marku": 24, "kalisch": 24, "thoma": 24, "richardson": 24, "high": 24, "dimension": [24, 67], "annal": 24, "40": [24, 58, 59, 60], "294": 24, "321": 24, "2012": 24, "1214": 24, "11": 24, "aos940": 24, "end": [25, 26, 27, 44, 46, 50], "smaller": [25, 26, 27], "subset": [25, 26, 27, 54], "intersect": 25, "biconnect": 25, "restrict": [25, 26, 27], "stationarytimeseriespag": [26, 27, 71], "pdst": 26, "pds_t_set": [26, 27], "lag": [26, 27, 32, 33, 34, 38, 39, 42, 43, 61, 62, 63, 66, 67, 71], "being": [26, 27, 56, 67], "less": [26, 27, 38, 67], "max": [26, 27, 32, 38, 42, 43, 66, 71], "among": [26, 27, 33, 54, 56, 59, 62, 67, 71], "pdst_path": 27, "addit": [27, 30, 52, 53, 62, 64, 65, 68, 71, 73], "ancestor": 28, "descend": 29, "first_nod": 30, "second_nod": 30, "force_circl": 30, "forbid_nod": 30, "uncov": [30, 79], "potenti": 30, "explan": 30, "could": [30, 32, 71], "chang": [30, 54, 56, 58, 60, 67, 68, 71, 77, 78, 79], "mean": [30, 53, 54, 56, 71, 73], "appear": [30, 56], "previou": [30, 61], "befor": 30, "henc": 30, "cannot": [30, 58], "travers": 30, "forbidden": 30, "immedi": 30, "within": [30, 56, 67, 68, 71], "rel": [30, 68], "third": 30, "come": 30, "r5": 30, "prevent": 30, "incoming_graph_data": [32, 33, 36, 37, 71], "check_time_direct": [32, 71], "repeat": [32, 71], "themselv": [32, 71], "cross": [32, 71], "product": [32, 71], "to_networkx_graph": [32, 71], "dict": [32, 56, 65, 66, 71], "2d": [32, 66, 67, 71], "spars": [32, 71], "matrix": [32, 46, 67, 71], "properli": [32, 71], "delet": [32, 54, 62, 71], "depend": [32, 61, 64, 71], "direction": [32, 33, 71], "enabl": [33, 71], "work": [33, 56, 58, 59, 67, 68, 71], "forward": [33, 71], "serv": [33, 71], "imbu": [36, 37, 38, 71, 73], "basetimeseriesgraph": [36, 37, 71], "add_homologous_edg": 38, "homolog": [38, 42, 71], "tsnode": [38, 42, 67, 71], "absolut": 38, "equal": [38, 61], "preserv": [38, 67], "as_view": [38, 56], "read": [38, 56, 67], "to_direct": [38, 56], "node_attr_dict_factori": [38, 56], "alia": [38, 56], "tsdict": 38, "node_dict_factori": [38, 56], "networkxerror": [38, 56], "remove_edges_from": [38, 56], "Will": [38, 56, 64], "fail": [38, 56, 60], "silent": [38, 56], "remove_homologous_edg": 38, "include_contemporan": 39, "create_us": [39, 40], "analog": 39, "_description_": 39, "func": [39, 73], "include_self_loop": 41, "summari": [41, 63], "timeseriesdigraph": [41, 71], "summary_g": 41, "_must_": 42, "timeseriesgraph": [43, 66, 71], "arr": [44, 46, 49, 50], "ndarrai": [44, 45, 61], "arr_idx": [44, 49, 50], "graph_typ": [44, 49, 51], "shape": [44, 46, 47, 49, 50, 61, 62, 63, 65, 67], "n_node": [44, 46, 47, 49, 50, 62, 63], "causal_graph": [46, 47], "instanc": [46, 47, 48, 51, 61, 67], "numpy_graph": [46, 47], "accord": [46, 47], "ijth": 46, "entri": [46, 67], "zero": 46, "symmetr": [46, 67], "jith": 46, "20": 46, "edge_to_value_map": [46, 49], "pcalg": [46, 47, 50, 76, 79], "packag": [46, 50, 68, 76], "numer": [46, 56, 68], "treat": [46, 56], "therefor": [46, 62, 68, 72], "leftrightarrow": 46, "element": [46, 71, 76], "21": [46, 64, 79], "issu": [46, 68, 72], "nodelist": 46, "bow_graph": 46, "numpy_to_graph": 46, "pcalg_to_graph": 47, "filenam": [48, 51], "tetrad": [48, 51, 76, 79], "text": [48, 51, 53, 72], "write": [48, 64], "enumer": [49, 50, 72], "amat_typ": 50, "r": [50, 58, 60, 76], "pcalgpagendpoint": 50, "amattyp": 50, "cran": 50, "project": [50, 69, 79], "web": 50, "pdf": 50, "conveni": 50, "amat": 50, "No": [50, 71], "edgemark": 50, "oppos": 50, "matric": 50, "mag": 50, "cmu": 51, "phil": 51, "io": [51, 67, 77], "guarante": 51, "your": [51, 68], "adher": [51, 67], "random_st": [52, 53, 54, 61, 62, 63], "interven": 52, "simultanen": 52, "perturb": 52, "gaussian_noise_funct": [52, 53, 54, 73], "That": [52, 56], "nois": [52, 73], "node_mean_lim": [53, 54], "node_std_lim": [53, 54], "edge_funct": [53, 54], "callabl": [53, 54, 62, 67], "edge_weight_lim": [53, 54], "parametr": 53, "uniformli": [53, 54, 73], "limit": 53, "weight": [53, 54, 56, 62, 72, 73], "fashion": [53, 66, 68], "x_i": 53, "sum_": 53, "w_j": 53, "f_j": 53, "x_j": 53, "epsilon_i": 53, "sim": 53, "mu_i": 53, "sigma_i": 53, "lower": [53, 54], "upper": [53, 54, 72], "bound": [53, 54], "std": [53, 54, 73], "iid": [53, 54], "transform": [53, 54], "nonlinear": [53, 54], "lambda": [53, 54], "ident": [53, 54, 56], "parent_funct": [53, 54, 73], "linear_gaussian": [53, 54], "n_nodes_with_s_nod": 54, "n_invariances_to_tri": 54, "multi": 54, "underli": [54, 61, 62, 71, 74], "particular": 54, "across": [54, 56, 62, 67, 71], "split": 54, "try": [54, 67], "make_graph_linear_gaussian": [54, 79], "determin": 54, "n_": 54, "randomli": [54, 73], "remain": 54, "At": 54, "keep": [54, 66], "g1": 55, "g2": 55, "link": [56, 67, 77], "experiment": [56, 67, 76], "featur": [56, 67, 68, 77, 78, 79], "meant": 56, "caution": [56, 68], "multidigraph": 56, "mention": 56, "below": [56, 67, 68], "match": 56, "entir": 56, "add_edge_typ": [56, 68], "edge_subgraph": 56, "cach": [56, 67], "few": [56, 71], "wherea": 56, "__contains__": 56, "otherwis": [56, 60], "__getitem__": 56, "__iter__": 56, "__len__": 56, "hold": 56, "itself": [56, 67], "behav": 56, "idiom": 56, "loop": 56, "nbr": 56, "datadict": 56, "adjacencyview": 56, "clear_edge_typ": 56, "clear": 56, "shallow": 56, "share": [56, 67], "deepcopi": 56, "docstr": [56, 67], "peopl": 56, "might": [56, 68], "nbunch": 56, "degreeview": 56, "report": [56, 64], "incid": 56, "sum": 56, "deg_dict": 56, "request": [56, 68], "ddict": 56, "quietli": 56, "out": [56, 66, 68], "get_edge_data": 56, "doesn": 56, "edge_dict": 56, "graph_attr_dict_factori": 56, "keyerror": 56, "edge_ind": 56, "identifi": [56, 67], "technic": [56, 61, 67], "control": 56, "nbunch_it": 56, "membership": 56, "niter": 56, "sequenc": 56, "number_of_edge_typ": 56, "number_of_edg": [56, 68], "count": 56, "regardless": 56, "nedg": 56, "size": 56, "todo": [56, 73], "expect": [56, 68], "subclass": 56, "onc": 56, "attempt": 56, "contrast": 56, "deep": 56, "librari": [56, 67, 77], "transfer": 56, "to_undirect": 56, "choic": [56, 71], "desir": 56, "unless": [56, 71], "uc_label": 57, "g_copi": 57, "minim": [58, 60, 67, 79], "testminsep": 58, "test": [58, 72, 74, 79], "line": [58, 60], "neq": 58, "r_x": 58, "r_y": 58, "deem": [58, 60], "necessari": [58, 60], "moral": 58, "caus": 58, "candid": 58, "later": [58, 60], "largest": [58, 60], "vertic": [58, 59, 60], "is_minimal_m_sep": 58, "els": 58, "van": [58, 59, 60], "der": [58, 59, 60], "zander": [58, 59, 60], "li\u015bkiewicz": [58, 59, 60], "textor": [58, 59, 60], "adjust": [58, 59, 60], "criteria": [58, 59, 60], "framework": [58, 59, 60], "vol": [58, 59, 60], "270": [58, 59, 60], "pp": [58, 59, 60], "2018": [58, 59, 60], "12": [58, 59, 60], "006": [58, 59, 60], "testsep": [59, 60], "further": 59, "breadth": 59, "runtim": [59, 60], "boolean": 59, "findsep": 60, "math": 60, "findminsep": 60, "anterior": 60, "var_arr": [61, 63], "n_time": [61, 62, 63], "n_realiz": [61, 62], "var_nam": 61, "var": [61, 62, 63], "arraylik": [61, 62, 63, 66], "n_variabl": [61, 62], "vector": [61, 67], "auto": 61, "regress": 61, "3rd": 61, "dimens": 61, "autoregress": [61, 63], "realiz": [61, 62], "state": [61, 62], "node_nam": 61, "multivari": 61, "p_time_self": 62, "p_time_var": 62, "p_contemporan": 62, "weight_dist": 62, "_continuous_distn": 62, "norm_gen": 62, "probabl": [62, 67], "contemporan": 62, "instantan": 62, "simulate_data_from_var": 62, "var_model": 62, "never": 62, "worri": 62, "about": [62, 68], "situat": 62, "instantaen": 62, "network": 62, "x_df": 63, "dataset": [63, 67, 73], "right": [63, 66], "fid": 64, "show_path": 64, "debug": 64, "help": 64, "triag": 64, "bug": 64, "sy": 64, "stdout": 64, "develop": [64, 68, 79], "submit": 64, "platform": 64, "linux": 64, "15": 64, "1067": 64, "aw": 64, "x86_64": 64, "glibc2": 64, "feb": 64, "37": 64, "gcc": 64, "usr": 64, "bin": 64, "cpu": 64, "36": 64, "core": [64, 76], "68": [64, 79], "gb": 64, "openbla": 64, "17": [64, 79], "thread": 64, "sklearn": 64, "backend": 64, "macosx": 64, "Not": 64, "version": [64, 67, 68, 71, 77], "info": 64, "joblib": [64, 67], "squar": 65, "rankdir": 65, "plaintext": 65, "dot": 65, "languag": 65, "center": 66, "aspect_ratio": 66, "3333333333333333": 66, "left": 66, "top": [66, 68], "bottom": 66, "factor": 66, "plot": 66, "around": [66, 68], "ratio": 66, "width": 66, "height": 66, "lai": 66, "histor": 66, "hope": 67, "tacit": 67, "convent": 67, "contributor": [67, 68], "aim": 67, "describ": 67, "redund": 67, "begin": 67, "didn": 67, "elsewher": 67, "1d": 67, "whose": 67, "often": 67, "public": [67, 68], "larg": [67, 72], "formal": 67, "maintain": [67, 68, 72], "backward": 67, "compat": 67, "privat": 67, "assur": 67, "stabl": [67, 68], "__call__": 67, "embed": 67, "etc": [67, 68], "__doc__": 67, "pep257": 67, "numpydoc": 67, "give": [67, 75], "basic": [67, 68], "doctest": 67, "directori": 67, "exemplifi": 67, "referenc": 67, "sometim": 67, "built": 67, "alongsid": 67, "descript": [67, 68], "tool": [67, 68], "usabl": 67, "subject": 67, "futur": 67, "deprec": [67, 68], "polici": 67, "letter": 67, "readthedoc": 67, "facilit": 67, "parallel": 67, "toward": 67, "effici": [67, 77, 78, 79], "delai": 67, "n_featur": 67, "n_sampl": 67, "shorthand": 67, "distinctli": 67, "noun": 67, "langl": 67, "rangl": 67, "off": [67, 71], "sigma_map": 67, "symmetric_difference_map": 67, "composit": 68, "encourag": 68, "pull": 68, "contribut": [68, 72, 79], "exhaust": 68, "illustr": 68, "veri": 68, "earli": 68, "best": 68, "goal": 68, "converg": 68, "releas": 68, "trait": 68, "major": [68, 71, 77, 78, 79], "mark": 68, "alpha": [68, 76], "drastic": 68, "robust": 68, "commun": [68, 72], "low": 68, "curv": 68, "transit": 68, "lie": 68, "hand": 68, "summar": 68, "implicitli": 68, "focus": 68, "design": 68, "lightweight": 68, "sole": 68, "instal": 68, "histori": 68, "yourself": 68, "interest": 68, "solv": 68, "improv": [68, 79], "overal": 68, "hesit": 68, "reach": 68, "who": [68, 79], "codebas": 68, "pip": 69, "avail": 69, "pypi": 69, "poetri": 69, "recommend": 69, "repositori": 69, "git": 69, "cd": 69, "heavili": 71, "reli": 71, "account": 71, "cover": 71, "concept": [71, 75, 76], "glossari": [71, 76], "ye": 71, "augmentedpag": 71, "analag": 71, "stationarytimeseriesgraph": 71, "stationarytimeseriesmixededgegraph": [71, 79], "stationarytimeseriescpdag": 71, "sure": 71, "past": 71, "moment": 71, "embodi": 71, "stationar": 71, "propag": 71, "turn": 71, "set_stationar": 71, "modif": 71, "subtl": 71, "impact": 71, "mec": 71, "timeseriesmixededgegraph": 71, "light": 72, "quit": 72, "de": 72, "facto": 72, "offer": 72, "interpret": 72, "triangular": 72, "fill": 72, "against": 72, "plan": 73, "yet": 73, "drop": 73, "varialbl": 73, "roadmap": 73, "simulatan": 73, "nest": 73, "citat": 73, "FOR": 73, "sel": 73, "ones": 73, "extra": 73, "invariant_domain": 73, "domain_gaussian_noise_funct": 73, "faith": 74, "abl": 75, "everyth": 75, "multidomain": [76, 79], "simul": 76, "export": [76, 79], "java": 76, "enhanc": [77, 78, 79], "tip": 77, "subscrib": 77, "notifi": 77, "aryan": 79, "roi": 79, "71": 79, "minimal_m_separ": 79, "bf": 79, "jaron": 79, "lee": 79, "53": 79, "balltre": 79, "48": 79, "46": 79, "uncovered_pd_path": 79, "42": 79, "adam": 79, "li": 79, "possible_ancestor": 79, "possible_descend": 79, "discriminating_path": 79, "pds_path": 79, "wrapper": 79, "acyclif": 79, "julien": 79, "siebert": 79, "26": 79, "29": 79, "49": 79, "go": 79, "causallearn": 79, "51": 79, "60": 79, "anank": 79, "63": 79, "commit": 79, "hook": 79, "75": 79, "make_graph_multidomain": 79, "77": 79, "thank": 79, "everyon": 79, "mainten": 79, "incept": 79}, "objects": {"": [[0, 0, 0, "-", "pywhy_graphs"]], "pywhy_graphs": [[12, 1, 1, "", "ADMG"], [13, 1, 1, "", "AugmentedGraph"], [14, 1, 1, "", "AugmentedPAG"], [15, 1, 1, "", "CPDAG"], [16, 1, 1, "", "PAG"], [70, 0, 0, "-", "algorithms"], [71, 0, 0, "-", "classes"], [72, 0, 0, "-", "export"], [73, 0, 0, "-", "functional"], [74, 0, 0, "-", "simulate"], [64, 4, 1, "", "sys_info"]], "pywhy_graphs.ADMG": [[12, 2, 1, "", "bidirected_edge_name"], [12, 2, 1, "", "bidirected_edges"], [12, 3, 1, "", "c_components"], [12, 2, 1, "", "directed_edge_name"], [12, 2, 1, "", "directed_edges"], [12, 3, 1, "", "sub_bidirected_graph"], [12, 3, 1, "", "sub_directed_graph"], [12, 3, 1, "", "sub_undirected_graph"], [12, 2, 1, "", "undirected_edge_name"], [12, 2, 1, "", "undirected_edges"]], "pywhy_graphs.CPDAG": [[15, 3, 1, "", "add_edge"], [15, 3, 1, "", "add_edges_from"], [15, 2, 1, "", "directed_edge_name"], [15, 2, 1, "", "directed_edges"], [15, 3, 1, "", "orient_uncertain_edge"], [15, 3, 1, "", "possible_children"], [15, 3, 1, "", "possible_parents"], [15, 3, 1, "", "sub_directed_graph"], [15, 3, 1, "", "sub_undirected_graph"], [15, 2, 1, "", "undirected_edge_name"], [15, 2, 1, "", "undirected_edges"]], "pywhy_graphs.PAG": [[16, 3, 1, "", "add_edge"], [16, 3, 1, "", "add_edges_from"], [16, 3, 1, "", "children"], [16, 2, 1, "", "circle_edge_name"], [16, 2, 1, "", "circle_edges"], [16, 3, 1, "", "orient_uncertain_edge"], [16, 3, 1, "", "parents"], [16, 3, 1, "", "possible_children"], [16, 3, 1, "", "possible_parents"], [16, 3, 1, "", "sub_circle_graph"]], "pywhy_graphs.algorithms": [[17, 4, 1, "", "acyclification"], [18, 4, 1, "", "add_all_snode_combinations"], [19, 4, 1, "", "compute_invariant_domains_per_node"], [20, 4, 1, "", "discriminating_path"], [21, 4, 1, "", "find_connected_pairs"], [22, 4, 1, "", "is_definite_noncollider"], [23, 4, 1, "", "is_valid_mec_graph"], [24, 4, 1, "", "pds"], [25, 4, 1, "", "pds_path"], [26, 4, 1, "", "pds_t"], [27, 4, 1, "", "pds_t_path"], [28, 4, 1, "", "possible_ancestors"], [29, 4, 1, "", "possible_descendants"], [30, 4, 1, "", "uncovered_pd_path"]], "pywhy_graphs.classes": [[71, 0, 0, "-", "timeseries"]], "pywhy_graphs.classes.timeseries": [[31, 1, 1, "", "StationaryTimeSeriesCPDAG"], [32, 1, 1, "", "StationaryTimeSeriesDiGraph"], [33, 1, 1, "", "StationaryTimeSeriesGraph"], [34, 1, 1, "", "StationaryTimeSeriesMixedEdgeGraph"], [35, 1, 1, "", "StationaryTimeSeriesPAG"], [36, 1, 1, "", "TimeSeriesDiGraph"], [37, 1, 1, "", "TimeSeriesGraph"], [38, 1, 1, "", "TimeSeriesMixedEdgeGraph"], [39, 4, 1, "", "complete_ts_graph"], [40, 4, 1, "", "empty_ts_graph"], [41, 4, 1, "", "get_summary_graph"], [42, 4, 1, "", "has_homologous_edges"], [43, 4, 1, "", "nodes_in_time_order"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[31, 3, 1, "", "add_edge"], [31, 3, 1, "", "add_edges_from"], [31, 2, 1, "", "directed_edge_name"], [31, 2, 1, "", "directed_edges"], [31, 3, 1, "", "orient_uncertain_edge"], [31, 3, 1, "", "possible_children"], [31, 3, 1, "", "possible_parents"], [31, 3, 1, "", "sub_directed_graph"], [31, 3, 1, "", "sub_undirected_graph"], [31, 2, 1, "", "undirected_edge_name"], [31, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[35, 2, 1, "", "bidirected_edge_name"], [35, 2, 1, "", "bidirected_edges"], [35, 2, 1, "", "circle_edge_name"], [35, 2, 1, "", "circle_edges"], [35, 2, 1, "", "directed_edge_name"], [35, 2, 1, "", "directed_edges"], [35, 3, 1, "", "orient_uncertain_edge"], [35, 3, 1, "", "possible_children"], [35, 3, 1, "", "possible_parents"], [35, 3, 1, "", "sub_bidirected_graph"], [35, 3, 1, "", "sub_circle_graph"], [35, 3, 1, "", "sub_directed_graph"], [35, 3, 1, "", "sub_undirected_graph"], [35, 2, 1, "", "undirected_edge_name"], [35, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[38, 3, 1, "", "add_edge"], [38, 3, 1, "", "add_edges_from"], [38, 3, 1, "", "add_homologous_edges"], [38, 3, 1, "", "copy"], [38, 5, 1, "", "node_attr_dict_factory"], [38, 5, 1, "", "node_dict_factory"], [38, 3, 1, "", "remove_edge"], [38, 3, 1, "", "remove_edges_from"], [38, 3, 1, "", "remove_homologous_edges"]], "pywhy_graphs.export": [[44, 4, 1, "", "clearn_to_graph"], [45, 4, 1, "", "graph_to_clearn"], [46, 4, 1, "", "graph_to_numpy"], [47, 4, 1, "", "graph_to_pcalg"], [48, 4, 1, "", "graph_to_tetrad"], [49, 4, 1, "", "numpy_to_graph"], [50, 4, 1, "", "pcalg_to_graph"], [51, 4, 1, "", "tetrad_to_graph"]], "pywhy_graphs.functional": [[52, 4, 1, "", "apply_linear_soft_intervention"], [53, 4, 1, "", "make_graph_linear_gaussian"], [54, 4, 1, "", "make_graph_multidomain"], [55, 4, 1, "", "set_node_attributes_with_G"]], "pywhy_graphs.networkx": [[56, 1, 1, "", "MixedEdgeGraph"], [57, 4, 1, "", "bidirected_to_unobserved_confounder"], [58, 4, 1, "", "is_minimal_m_separator"], [59, 4, 1, "", "m_separated"], [60, 4, 1, "", "minimal_m_separator"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[56, 3, 1, "", "__contains__"], [56, 3, 1, "", "__getitem__"], [56, 3, 1, "", "__iter__"], [56, 3, 1, "", "__len__"], [56, 3, 1, "", "add_edge"], [56, 3, 1, "", "add_edges_from"], [56, 2, 1, "", "adj"], [56, 3, 1, "", "clear_edge_types"], [56, 3, 1, "", "copy"], [56, 3, 1, "", "degree"], [56, 3, 1, "", "edges"], [56, 3, 1, "", "get_edge_data"], [56, 3, 1, "", "get_graphs"], [56, 5, 1, "", "graph_attr_dict_factory"], [56, 3, 1, "", "has_edge"], [56, 3, 1, "", "has_node"], [56, 3, 1, "", "is_directed"], [56, 3, 1, "", "is_multigraph"], [56, 2, 1, "", "name"], [56, 3, 1, "", "nbunch_iter"], [56, 5, 1, "", "node_attr_dict_factory"], [56, 5, 1, "", "node_dict_factory"], [56, 3, 1, "", "number_of_edge_types"], [56, 3, 1, "", "number_of_edges"], [56, 3, 1, "", "number_of_nodes"], [56, 3, 1, "", "order"], [56, 3, 1, "", "remove_edge"], [56, 3, 1, "", "remove_edges_from"], [56, 3, 1, "", "size"], [56, 3, 1, "", "subgraph"], [56, 3, 1, "", "to_directed"], [56, 3, 1, "", "to_undirected"], [56, 3, 1, "", "update"]], "pywhy_graphs.simulate": [[61, 4, 1, "", "simulate_data_from_var"], [62, 4, 1, "", "simulate_linear_var_process"], [63, 4, 1, "", "simulate_var_process_from_summary_graph"]], "pywhy_graphs.viz": [[65, 4, 1, "", "draw"], [66, 4, 1, "", "timeseries_layout"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 67, 68], "pywhy_graph": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 74], "class": [0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 70, 71], "causal": [0, 1, 2, 3, 9, 70, 71, 72, 73, 74, 75], "graph": [0, 1, 2, 3, 6, 8, 9, 10, 68, 70, 71, 72, 73, 75], "algorithm": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 70], "mix": [0, 3, 6], "edg": [0, 6], "convers": 0, "between": 0, "other": 0, "packag": [0, 72], "": [0, 79], "networkx": [0, 1, 5, 56, 57, 58, 59, 60, 68, 75], "experiment": [0, 72], "function": [0, 52, 53, 54, 55, 73], "timeseri": [0, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 71], "simul": [0, 3, 61, 62, 63, 74], "graphic": [0, 73, 74], "model": [0, 3, 73, 74], "convert": 0, "visual": [0, 1, 8, 9, 75], "util": 0, "debug": 0, "exampl": [1, 5, 12, 15, 16, 36, 56, 59, 65, 66, 75], "galleri": [1, 75], "mixededgegraph": [1, 5, 6, 56, 75], "introduct": [1, 2, 3, 75], "an": 3, "how": [3, 68, 75], "us": [3, 12, 15, 16, 36, 56, 59, 65, 66, 71, 75], "them": 3, "structur": 3, "some": 3, "data": 3, "direct": 3, "ayclic": 3, "dag": 3, "also": 3, "known": 3, "bayesian": 3, "network": 3, "acycl": [3, 70], "admg": [3, 12], "complet": 3, "partial": 3, "cpdag": [3, 15], "ancestr": 3, "pag": [3, 16], "refer": 3, "comput": [4, 7, 11], "time": [4, 7, 11, 70, 71], "differ": 6, "type": [6, 71], "construct": 6, "properti": 6, "oper": 6, "node": 6, "kei": 6, "draw": [8, 10, 65], "set": [8, 10], "layout": [8, 10], "comparison": 8, "augmentedgraph": 13, "augmentedpag": 14, "acyclif": 17, "add_all_snode_combin": 18, "compute_invariant_domains_per_nod": 19, "discriminating_path": 20, "find_connected_pair": 21, "is_definite_noncollid": 22, "is_valid_mec_graph": 23, "pd": 24, "pds_path": 25, "pds_t": 26, "pds_t_path": 27, "possible_ancestor": 28, "possible_descend": 29, "uncovered_pd_path": 30, "stationarytimeseriescpdag": 31, "stationarytimeseriesdigraph": 32, "stationarytimeseriesgraph": 33, "stationarytimeseriesmixededgegraph": 34, "stationarytimeseriespag": 35, "timeseriesdigraph": 36, "timeseriesgraph": 37, "timeseriesmixededgegraph": 38, "complete_ts_graph": 39, "empty_ts_graph": 40, "get_summary_graph": 41, "has_homologous_edg": 42, "nodes_in_time_ord": 43, "export": [44, 45, 46, 47, 48, 49, 50, 51, 72], "clearn_to_graph": 44, "graph_to_clearn": 45, "graph_to_numpi": 46, "graph_to_pcalg": 47, "graph_to_tetrad": 48, "numpy_to_graph": 49, "pcalg_to_graph": 50, "tetrad_to_graph": 51, "apply_linear_soft_intervent": 52, "make_graph_linear_gaussian": 53, "make_graph_multidomain": 54, "set_node_attributes_with_g": 55, "bidirected_to_unobserved_confound": 57, "is_minimal_m_separ": 58, "m_separ": 59, "minimal_m_separ": 60, "simulate_data_from_var": 61, "simulate_linear_var_process": 62, "simulate_var_process_from_summary_graph": 63, "sys_info": 64, "viz": [65, 66], "timeseries_layout": 66, "glossari": 67, "common": 67, "term": 67, "element": 67, "gener": 67, "concept": 67, "pywhi": [68, 70, 71, 72, 75], "stabil": 68, "do": 68, "we": 68, "compar": 68, "content": 68, "get": 68, "start": 68, "team": 68, "indic": 68, "tabl": 68, "instal": 69, "core": 70, "markov": 70, "equival": 70, "seri": [70, 71], "handl": 70, "which": 71, "should": 71, "i": 71, "alpha": 71, "import": 72, "anoth": 72, "learn": 72, "numpi": 72, "graphviz": 72, "dagitti": 72, "pcalg": 72, "from": 72, "r": 72, "tetrad": 72, "java": 72, "linear": 73, "multidomain": 73, "select": 73, "diagram": 73, "modul": 74, "tutori": 75, "user": 76, "guid": 76, "releas": 77, "histori": 77, "what": 79, "new": 79, "version": 79, "0": 79, "1": 79, "changelog": 79, "code": 79, "document": 79, "contributor": 79}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "pywhy_graphs.classes: Causal graph classes": [[0, "pywhy-graphs-classes-causal-graph-classes"]], "pywhy_graphs.algorithms: Algorithms for Mixed-Edge Graphs": [[0, "pywhy-graphs-algorithms-algorithms-for-mixed-edge-graphs"]], "Conversions between other package\u2019s causal graphs": [[0, "conversions-between-other-package-s-causal-graphs"]], "NetworkX Experimental Functionality": [[0, "networkx-experimental-functionality"]], "pywhy_graphs.classes.timeseries: Timeseries": [[0, "pywhy-graphs-classes-timeseries-timeseries"]], "pywhy_graphs.simulate: Causal graphical model simulations": [[0, "pywhy-graphs-simulate-causal-graphical-model-simulations"], [74, "pywhy-graphs-simulate-causal-graphical-model-simulations"]], "Converting graphs to functional models": [[0, "converting-graphs-to-functional-models"]], "Visualization of causal graphs": [[0, "visualization-of-causal-graphs"], [1, "visualization-of-causal-graphs"], [9, "visualization-of-causal-graphs"], [75, "visualization-of-causal-graphs"]], "Utilities for debugging": [[0, "utilities-for-debugging"]], "Simulation": [[0, "simulation"]], "Examples Gallery": [[1, "examples-gallery"], [75, "examples-gallery"]], "Networkx MixedEdgeGraph Examples": [[1, "networkx-mixededgegraph-examples"], [5, "networkx-mixededgegraph-examples"], [75, "networkx-mixededgegraph-examples"]], "Introduction to causal graphs": [[1, "introduction-to-causal-graphs"], [2, "introduction-to-causal-graphs"], [75, "introduction-to-causal-graphs"]], "An introduction to causal graphs and how to use them": [[3, "an-introduction-to-causal-graphs-and-how-to-use-them"]], "Structural Causal Models: Simulating some data": [[3, "structural-causal-models-simulating-some-data"]], "Causal Directed Ayclic Graphs (DAG): Also known as Causal Bayesian Networks": [[3, "causal-directed-ayclic-graphs-dag-also-known-as-causal-bayesian-networks"]], "Acyclic Directed Mixed Graphs (ADMG)": [[3, "acyclic-directed-mixed-graphs-admg"]], "Completed Partially Directed Ayclic Graph (CPDAG)": [[3, "completed-partially-directed-ayclic-graph-cpdag"]], "Partial Ancestral Graph (PAG)": [[3, "partial-ancestral-graph-pag"]], "References": [[3, "references"]], "Computation times": [[4, "computation-times"], [7, "computation-times"], [11, "computation-times"]], "MixedEdgeGraph - Graph with different types of edges": [[6, "mixededgegraph-graph-with-different-types-of-edges"]], "Construct a MixedEdgeGraph": [[6, "construct-a-mixededgegraph"]], "Mixed Edge Graph Properties": [[6, "mixed-edge-graph-properties"]], "Mixed Edge Graph Operations on Nodes": [[6, "mixed-edge-graph-operations-on-nodes"]], "Mixed Edge Graph Operations on Edges": [[6, "mixed-edge-graph-operations-on-edges"]], "Mixed Edge Graph Key Differences": [[6, "mixed-edge-graph-key-differences"]], "Drawing graphs and setting their layout for visual comparison": [[8, "drawing-graphs-and-setting-their-layout-for-visual-comparison"]], "Drawing timeseries graphs and setting their layout": [[10, "drawing-timeseries-graphs-and-setting-their-layout"]], "pywhy_graphs.ADMG": [[12, "pywhy-graphs-admg"]], "Examples using pywhy_graphs.ADMG": [[12, "examples-using-pywhy-graphs-admg"]], "pywhy_graphs.AugmentedGraph": [[13, "pywhy-graphs-augmentedgraph"]], "pywhy_graphs.AugmentedPAG": [[14, "pywhy-graphs-augmentedpag"]], "pywhy_graphs.CPDAG": [[15, "pywhy-graphs-cpdag"]], "Examples using pywhy_graphs.CPDAG": [[15, "examples-using-pywhy-graphs-cpdag"]], "pywhy_graphs.PAG": [[16, "pywhy-graphs-pag"]], "Examples using pywhy_graphs.PAG": [[16, "examples-using-pywhy-graphs-pag"]], "pywhy_graphs.algorithms.acyclification": [[17, "pywhy-graphs-algorithms-acyclification"]], "pywhy_graphs.algorithms.add_all_snode_combinations": [[18, "pywhy-graphs-algorithms-add-all-snode-combinations"]], "pywhy_graphs.algorithms.compute_invariant_domains_per_node": [[19, "pywhy-graphs-algorithms-compute-invariant-domains-per-node"]], "pywhy_graphs.algorithms.discriminating_path": [[20, "pywhy-graphs-algorithms-discriminating-path"]], "pywhy_graphs.algorithms.find_connected_pairs": [[21, "pywhy-graphs-algorithms-find-connected-pairs"]], "pywhy_graphs.algorithms.is_definite_noncollider": [[22, "pywhy-graphs-algorithms-is-definite-noncollider"]], "pywhy_graphs.algorithms.is_valid_mec_graph": [[23, "pywhy-graphs-algorithms-is-valid-mec-graph"]], "pywhy_graphs.algorithms.pds": [[24, "pywhy-graphs-algorithms-pds"]], "pywhy_graphs.algorithms.pds_path": [[25, "pywhy-graphs-algorithms-pds-path"]], "pywhy_graphs.algorithms.pds_t": [[26, "pywhy-graphs-algorithms-pds-t"]], "pywhy_graphs.algorithms.pds_t_path": [[27, "pywhy-graphs-algorithms-pds-t-path"]], "pywhy_graphs.algorithms.possible_ancestors": [[28, "pywhy-graphs-algorithms-possible-ancestors"]], "pywhy_graphs.algorithms.possible_descendants": [[29, "pywhy-graphs-algorithms-possible-descendants"]], "pywhy_graphs.algorithms.uncovered_pd_path": [[30, "pywhy-graphs-algorithms-uncovered-pd-path"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[31, "pywhy-graphs-classes-timeseries-stationarytimeseriescpdag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph": [[32, "pywhy-graphs-classes-timeseries-stationarytimeseriesdigraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph": [[33, "pywhy-graphs-classes-timeseries-stationarytimeseriesgraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph": [[34, "pywhy-graphs-classes-timeseries-stationarytimeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[35, "pywhy-graphs-classes-timeseries-stationarytimeseriespag"]], "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[36, "pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "Examples using pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[36, "examples-using-pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesGraph": [[37, "pywhy-graphs-classes-timeseries-timeseriesgraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[38, "pywhy-graphs-classes-timeseries-timeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.complete_ts_graph": [[39, "pywhy-graphs-classes-timeseries-complete-ts-graph"]], "pywhy_graphs.classes.timeseries.empty_ts_graph": [[40, "pywhy-graphs-classes-timeseries-empty-ts-graph"]], "pywhy_graphs.classes.timeseries.get_summary_graph": [[41, "pywhy-graphs-classes-timeseries-get-summary-graph"]], "pywhy_graphs.classes.timeseries.has_homologous_edges": [[42, "pywhy-graphs-classes-timeseries-has-homologous-edges"]], "pywhy_graphs.classes.timeseries.nodes_in_time_order": [[43, "pywhy-graphs-classes-timeseries-nodes-in-time-order"]], "pywhy_graphs.export.clearn_to_graph": [[44, "pywhy-graphs-export-clearn-to-graph"]], "pywhy_graphs.export.graph_to_clearn": [[45, "pywhy-graphs-export-graph-to-clearn"]], "pywhy_graphs.export.graph_to_numpy": [[46, "pywhy-graphs-export-graph-to-numpy"]], "pywhy_graphs.export.graph_to_pcalg": [[47, "pywhy-graphs-export-graph-to-pcalg"]], "pywhy_graphs.export.graph_to_tetrad": [[48, "pywhy-graphs-export-graph-to-tetrad"]], "pywhy_graphs.export.numpy_to_graph": [[49, "pywhy-graphs-export-numpy-to-graph"]], "pywhy_graphs.export.pcalg_to_graph": [[50, "pywhy-graphs-export-pcalg-to-graph"]], "pywhy_graphs.export.tetrad_to_graph": [[51, "pywhy-graphs-export-tetrad-to-graph"]], "pywhy_graphs.functional.apply_linear_soft_intervention": [[52, "pywhy-graphs-functional-apply-linear-soft-intervention"]], "pywhy_graphs.functional.make_graph_linear_gaussian": [[53, "pywhy-graphs-functional-make-graph-linear-gaussian"]], "pywhy_graphs.functional.make_graph_multidomain": [[54, "pywhy-graphs-functional-make-graph-multidomain"]], "pywhy_graphs.functional.set_node_attributes_with_G": [[55, "pywhy-graphs-functional-set-node-attributes-with-g"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[56, "pywhy-graphs-networkx-mixededgegraph"]], "Examples using pywhy_graphs.networkx.MixedEdgeGraph": [[56, "examples-using-pywhy-graphs-networkx-mixededgegraph"]], "pywhy_graphs.networkx.bidirected_to_unobserved_confounder": [[57, "pywhy-graphs-networkx-bidirected-to-unobserved-confounder"]], "pywhy_graphs.networkx.is_minimal_m_separator": [[58, "pywhy-graphs-networkx-is-minimal-m-separator"]], "pywhy_graphs.networkx.m_separated": [[59, "pywhy-graphs-networkx-m-separated"]], "Examples using pywhy_graphs.networkx.m_separated": [[59, "examples-using-pywhy-graphs-networkx-m-separated"]], "pywhy_graphs.networkx.minimal_m_separator": [[60, "pywhy-graphs-networkx-minimal-m-separator"]], "pywhy_graphs.simulate.simulate_data_from_var": [[61, "pywhy-graphs-simulate-simulate-data-from-var"]], "pywhy_graphs.simulate.simulate_linear_var_process": [[62, "pywhy-graphs-simulate-simulate-linear-var-process"]], "pywhy_graphs.simulate.simulate_var_process_from_summary_graph": [[63, "pywhy-graphs-simulate-simulate-var-process-from-summary-graph"]], "pywhy_graphs.sys_info": [[64, "pywhy-graphs-sys-info"]], "pywhy_graphs.viz.draw": [[65, "pywhy-graphs-viz-draw"]], "Examples using pywhy_graphs.viz.draw": [[65, "examples-using-pywhy-graphs-viz-draw"]], "pywhy_graphs.viz.timeseries_layout": [[66, "pywhy-graphs-viz-timeseries-layout"]], "Examples using pywhy_graphs.viz.timeseries_layout": [[66, "examples-using-pywhy-graphs-viz-timeseries-layout"]], "Glossary of Common Terms and API Elements": [[67, "glossary-of-common-terms-and-api-elements"]], "General Concepts": [[67, "general-concepts"]], "pywhy-graphs": [[68, "pywhy-graphs"]], "API Stability": [[68, "api-stability"]], "How do we compare with NetworkX?": [[68, "how-do-we-compare-with-networkx"]], "Contents": [[68, "contents"]], "Getting started:": [[68, null]], "Team": [[68, "team"]], "Indices and tables": [[68, "indices-and-tables"]], "Installation": [[69, "installation"]], "Causal Graph Algorithms in PyWhy": [[70, "module-pywhy_graphs.algorithms"]], "Core Algorithms": [[70, "core-algorithms"]], "Algorithms for Markov Equivalence Classes": [[70, "algorithms-for-markov-equivalence-classes"]], "Algorithms for Time-Series Graphs": [[70, "algorithms-for-time-series-graphs"]], "Algorithms for handling acyclicity": [[70, "algorithms-for-handling-acyclicity"]], "Causal Graphs in PyWhy": [[71, "module-pywhy_graphs.classes"]], "Which graph class should I use?": [[71, "which-graph-class-should-i-use"]], "pywhy_graphs.classes: Causal graph types": [[71, "pywhy-graphs-classes-causal-graph-types"]], "pywhy_graphs.classes.timeseries: Causal graph types for time-series (alpha)": [[71, "module-pywhy_graphs.classes.timeseries"]], "Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package": [[72, "module-pywhy_graphs.export"]], "Causal-Learn": [[72, "causal-learn"]], "Numpy (graphviz and dagitty)": [[72, "numpy-graphviz-and-dagitty"]], "PCAlg from R (Experimental)": [[72, "pcalg-from-r-experimental"]], "Tetrad from Java": [[72, "tetrad-from-java"]], "Functional Causal Graphical Models": [[73, "module-pywhy_graphs.functional"]], "Linear": [[73, "linear"]], "Linear functional graphs": [[73, "linear-functional-graphs"]], "Multidomain": [[73, "multidomain"]], "Linear functional selection diagrams": [[73, "linear-functional-selection-diagrams"]], "Simulation module": [[74, "simulation-module"]], "How to use pywhy-graphs with examples and tutorials": [[75, "how-to-use-pywhy-graphs-with-examples-and-tutorials"]], "User Guide": [[76, "user-guide"]], "Release History": [[77, "release-history"]], "What\u2019s new?": [[79, "what-s-new"]], "Version 0.1": [[79, "version-0-1"]], "Changelog": [[79, "changelog"]], "Code and Documentation Contributors": [[79, "code-and-documentation-contributors"]]}, "indexentries": {"module": [[0, "module-pywhy_graphs"], [70, "module-pywhy_graphs.algorithms"], [71, "module-pywhy_graphs.classes"], [71, "module-pywhy_graphs.classes.timeseries"], [72, "module-pywhy_graphs.export"], [73, "module-pywhy_graphs.functional"], [74, "module-pywhy_graphs.simulate"]], "pywhy_graphs": [[0, "module-pywhy_graphs"]], "admg (class in pywhy_graphs)": [[12, "pywhy_graphs.ADMG"]], "bidirected_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.bidirected_edges"]], "c_components() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.c_components"]], "directed_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.directed_edge_name"]], "directed_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.directed_edges"]], "sub_bidirected_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_bidirected_graph"]], "sub_directed_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.undirected_edges"]], "augmentedgraph (class in pywhy_graphs)": [[13, "pywhy_graphs.AugmentedGraph"]], "augmentedpag (class in pywhy_graphs)": [[14, "pywhy_graphs.AugmentedPAG"]], "cpdag (class in pywhy_graphs)": [[15, "pywhy_graphs.CPDAG"]], "add_edge() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.possible_children"]], "possible_parents() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.undirected_edges"]], "pag (class in pywhy_graphs)": [[16, "pywhy_graphs.PAG"]], "add_edge() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.add_edge"]], "add_edges_from() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.add_edges_from"]], "children() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.children"]], "circle_edge_name (pywhy_graphs.pag property)": [[16, "pywhy_graphs.PAG.circle_edge_name"]], "circle_edges (pywhy_graphs.pag property)": [[16, "pywhy_graphs.PAG.circle_edges"]], "orient_uncertain_edge() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.orient_uncertain_edge"]], "parents() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.parents"]], "possible_children() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.possible_children"]], "possible_parents() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.possible_parents"]], "sub_circle_graph() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.sub_circle_graph"]], "acyclification() (in module pywhy_graphs.algorithms)": [[17, "pywhy_graphs.algorithms.acyclification"]], "add_all_snode_combinations() (in module pywhy_graphs.algorithms)": [[18, "pywhy_graphs.algorithms.add_all_snode_combinations"]], "compute_invariant_domains_per_node() (in module pywhy_graphs.algorithms)": [[19, "pywhy_graphs.algorithms.compute_invariant_domains_per_node"]], "discriminating_path() (in module pywhy_graphs.algorithms)": [[20, "pywhy_graphs.algorithms.discriminating_path"]], "find_connected_pairs() (in module pywhy_graphs.algorithms)": [[21, "pywhy_graphs.algorithms.find_connected_pairs"]], "is_definite_noncollider() (in module pywhy_graphs.algorithms)": [[22, "pywhy_graphs.algorithms.is_definite_noncollider"]], "is_valid_mec_graph() (in module pywhy_graphs.algorithms)": [[23, "pywhy_graphs.algorithms.is_valid_mec_graph"]], "pds() (in module pywhy_graphs.algorithms)": [[24, "pywhy_graphs.algorithms.pds"]], "pds_path() (in module pywhy_graphs.algorithms)": [[25, "pywhy_graphs.algorithms.pds_path"]], "pds_t() (in module pywhy_graphs.algorithms)": [[26, "pywhy_graphs.algorithms.pds_t"]], "pds_t_path() (in module pywhy_graphs.algorithms)": [[27, "pywhy_graphs.algorithms.pds_t_path"]], "possible_ancestors() (in module pywhy_graphs.algorithms)": [[28, "pywhy_graphs.algorithms.possible_ancestors"]], "possible_descendants() (in module pywhy_graphs.algorithms)": [[29, "pywhy_graphs.algorithms.possible_descendants"]], "uncovered_pd_path() (in module pywhy_graphs.algorithms)": [[30, "pywhy_graphs.algorithms.uncovered_pd_path"]], "stationarytimeseriescpdag (class in pywhy_graphs.classes.timeseries)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG"]], "add_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[31, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edges"]], "stationarytimeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph"]], "stationarytimeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph"]], "stationarytimeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[34, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph"]], "stationarytimeseriespag (class in pywhy_graphs.classes.timeseries)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG"]], "bidirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edges"]], "circle_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edge_name"]], "circle_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edges"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_parents"]], "sub_bidirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_bidirected_graph"]], "sub_circle_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_circle_graph"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edges"]], "timeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[36, "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph"]], "timeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[37, "pywhy_graphs.classes.timeseries.TimeSeriesGraph"]], "timeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph"]], "add_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edges_from"]], "add_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_homologous_edges"]], "copy() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.copy"]], "node_attr_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_dict_factory"]], "remove_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edges_from"]], "remove_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_homologous_edges"]], "complete_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[39, "pywhy_graphs.classes.timeseries.complete_ts_graph"]], "empty_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[40, "pywhy_graphs.classes.timeseries.empty_ts_graph"]], "get_summary_graph() (in module pywhy_graphs.classes.timeseries)": [[41, "pywhy_graphs.classes.timeseries.get_summary_graph"]], "has_homologous_edges() (in module pywhy_graphs.classes.timeseries)": [[42, "pywhy_graphs.classes.timeseries.has_homologous_edges"]], "nodes_in_time_order() (in module pywhy_graphs.classes.timeseries)": [[43, "pywhy_graphs.classes.timeseries.nodes_in_time_order"]], "clearn_to_graph() (in module pywhy_graphs.export)": [[44, "pywhy_graphs.export.clearn_to_graph"]], "graph_to_clearn() (in module pywhy_graphs.export)": [[45, "pywhy_graphs.export.graph_to_clearn"]], "graph_to_numpy() (in module pywhy_graphs.export)": [[46, "pywhy_graphs.export.graph_to_numpy"]], "graph_to_pcalg() (in module pywhy_graphs.export)": [[47, "pywhy_graphs.export.graph_to_pcalg"]], "graph_to_tetrad() (in module pywhy_graphs.export)": [[48, "pywhy_graphs.export.graph_to_tetrad"]], "numpy_to_graph() (in module pywhy_graphs.export)": [[49, "pywhy_graphs.export.numpy_to_graph"]], "pcalg_to_graph() (in module pywhy_graphs.export)": [[50, "pywhy_graphs.export.pcalg_to_graph"]], "tetrad_to_graph() (in module pywhy_graphs.export)": [[51, "pywhy_graphs.export.tetrad_to_graph"]], "apply_linear_soft_intervention() (in module pywhy_graphs.functional)": [[52, "pywhy_graphs.functional.apply_linear_soft_intervention"]], "make_graph_linear_gaussian() (in module pywhy_graphs.functional)": [[53, "pywhy_graphs.functional.make_graph_linear_gaussian"]], "make_graph_multidomain() (in module pywhy_graphs.functional)": [[54, "pywhy_graphs.functional.make_graph_multidomain"]], "set_node_attributes_with_g() (in module pywhy_graphs.functional)": [[55, "pywhy_graphs.functional.set_node_attributes_with_G"]], "mixededgegraph (class in pywhy_graphs.networkx)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph"]], "__contains__() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.__contains__"]], "__getitem__() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.__getitem__"]], "__iter__() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.__iter__"]], "__len__() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.__len__"]], "add_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.add_edges_from"]], "adj (pywhy_graphs.networkx.mixededgegraph property)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.adj"]], "clear_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.clear_edge_types"]], "copy() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.copy"]], "degree() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.degree"]], "edges() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.edges"]], "get_edge_data() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.get_edge_data"]], "get_graphs() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.get_graphs"]], "graph_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.graph_attr_dict_factory"]], "has_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.has_edge"]], "has_node() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.has_node"]], "is_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.is_directed"]], "is_multigraph() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.is_multigraph"]], "name (pywhy_graphs.networkx.mixededgegraph property)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.name"]], "nbunch_iter() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.nbunch_iter"]], "node_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.node_dict_factory"]], "number_of_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edge_types"]], "number_of_edges() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edges"]], "number_of_nodes() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_nodes"]], "order() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.order"]], "remove_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edges_from"]], "size() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.size"]], "subgraph() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.subgraph"]], "to_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.to_directed"]], "to_undirected() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.to_undirected"]], "update() (pywhy_graphs.networkx.mixededgegraph method)": [[56, "pywhy_graphs.networkx.MixedEdgeGraph.update"]], "bidirected_to_unobserved_confounder() (in module pywhy_graphs.networkx)": [[57, "pywhy_graphs.networkx.bidirected_to_unobserved_confounder"]], "is_minimal_m_separator() (in module pywhy_graphs.networkx)": [[58, "pywhy_graphs.networkx.is_minimal_m_separator"]], "m_separated() (in module pywhy_graphs.networkx)": [[59, "pywhy_graphs.networkx.m_separated"]], "minimal_m_separator() (in module pywhy_graphs.networkx)": [[60, "pywhy_graphs.networkx.minimal_m_separator"]], "simulate_data_from_var() (in module pywhy_graphs.simulate)": [[61, "pywhy_graphs.simulate.simulate_data_from_var"]], "simulate_linear_var_process() (in module pywhy_graphs.simulate)": [[62, "pywhy_graphs.simulate.simulate_linear_var_process"]], "simulate_var_process_from_summary_graph() (in module pywhy_graphs.simulate)": [[63, "pywhy_graphs.simulate.simulate_var_process_from_summary_graph"]], "sys_info() (in module pywhy_graphs)": [[64, "pywhy_graphs.sys_info"]], "draw() (in module pywhy_graphs.viz)": [[65, "pywhy_graphs.viz.draw"]], "timeseries_layout() (in module pywhy_graphs.viz)": [[66, "pywhy_graphs.viz.timeseries_layout"]], "1d": [[67, "term-1d"]], "1d array": [[67, "term-1d-array"]], "2d": [[67, "term-2d"]], "2d array": [[67, "term-2d-array"]], "api": [[67, "term-API"]], "f-node": [[67, "term-F-node"]], "markov equivalence class": [[67, "term-Markov-equivalence-class"]], "scm": [[67, "term-SCM"]], "structural causal model": [[67, "term-Structural-Causal-Model"]], "c components": [[67, "term-0"]], "c-components": [[67, "term-c-components"]], "c_components": [[67, "term-c_components"]], "callable": [[67, "term-callable"]], "docstring": [[67, "term-docstring"]], "equivalence class": [[67, "term-equivalence-class"]], "examples": [[67, "term-examples"]], "experimental": [[67, "term-experimental"]], "gallery": [[67, "term-gallery"]], "joblib": [[67, "term-joblib"]], "lag": [[67, "term-lag"]], "n_features": [[67, "term-n_features"]], "n_samples": [[67, "term-n_samples"]], "node": [[67, "term-node"]], "np": [[67, "term-np"]], "nx": [[67, "term-nx"]], "pair": [[67, "term-pair"]], "pd": [[67, "term-pd"]], "sample": [[67, "term-sample"]], "samples": [[67, "term-samples"]], "sigma_map": [[67, "term-sigma_map"]], "symmetric_difference_map": [[67, "term-symmetric_difference_map"]], "tsnode": [[67, "term-tsnode"]], "variable": [[67, "term-variable"]], "pywhy_graphs.algorithms": [[70, "module-pywhy_graphs.algorithms"]], "pywhy_graphs.classes": [[71, "module-pywhy_graphs.classes"]], "pywhy_graphs.classes.timeseries": [[71, "module-pywhy_graphs.classes.timeseries"]], "pywhy_graphs.export": [[72, "module-pywhy_graphs.export"]], "pywhy_graphs.functional": [[73, "module-pywhy_graphs.functional"]], "pywhy_graphs.simulate": [[74, "module-pywhy_graphs.simulate"]]}})