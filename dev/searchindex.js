Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/intro/index", "auto_examples/intro/intro_causal_graphs", "auto_examples/intro/sg_execution_times", "auto_examples/mixededge/index", "auto_examples/mixededge/plot_mixed_edge_graph", "auto_examples/mixededge/sg_execution_times", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout", "auto_examples/visualization/index", "auto_examples/visualization/plot_timeseries_graphs", "auto_examples/visualization/sg_execution_times", "generated/pywhy_graphs.ADMG", "generated/pywhy_graphs.AugmentedGraph", "generated/pywhy_graphs.AugmentedPAG", "generated/pywhy_graphs.CPDAG", "generated/pywhy_graphs.PAG", "generated/pywhy_graphs.algorithms.acyclification", "generated/pywhy_graphs.algorithms.add_all_snode_combinations", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node", "generated/pywhy_graphs.algorithms.discriminating_path", "generated/pywhy_graphs.algorithms.find_connected_pairs", "generated/pywhy_graphs.algorithms.inducing_path", "generated/pywhy_graphs.algorithms.is_definite_noncollider", "generated/pywhy_graphs.algorithms.is_valid_mec_graph", "generated/pywhy_graphs.algorithms.pds", "generated/pywhy_graphs.algorithms.pds_path", "generated/pywhy_graphs.algorithms.pds_t", "generated/pywhy_graphs.algorithms.pds_t_path", "generated/pywhy_graphs.algorithms.possible_ancestors", "generated/pywhy_graphs.algorithms.possible_descendants", "generated/pywhy_graphs.algorithms.uncovered_pd_path", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph", "generated/pywhy_graphs.classes.timeseries.get_summary_graph", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order", "generated/pywhy_graphs.export.clearn_to_graph", "generated/pywhy_graphs.export.graph_to_clearn", "generated/pywhy_graphs.export.graph_to_numpy", "generated/pywhy_graphs.export.graph_to_pcalg", "generated/pywhy_graphs.export.graph_to_tetrad", "generated/pywhy_graphs.export.numpy_to_graph", "generated/pywhy_graphs.export.pcalg_to_graph", "generated/pywhy_graphs.export.tetrad_to_graph", "generated/pywhy_graphs.functional.apply_linear_soft_intervention", "generated/pywhy_graphs.functional.make_graph_linear_gaussian", "generated/pywhy_graphs.functional.make_graph_multidomain", "generated/pywhy_graphs.functional.set_node_attributes_with_G", "generated/pywhy_graphs.networkx.MixedEdgeGraph", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "generated/pywhy_graphs.networkx.is_minimal_m_separator", "generated/pywhy_graphs.networkx.m_separated", "generated/pywhy_graphs.networkx.minimal_m_separator", "generated/pywhy_graphs.simulate.simulate_data_from_var", "generated/pywhy_graphs.simulate.simulate_linear_var_process", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "generated/pywhy_graphs.sys_info", "generated/pywhy_graphs.viz.draw", "generated/pywhy_graphs.viz.timeseries_layout", "glossary", "index", "installation", "reference/algorithms/index", "reference/classes/index", "reference/export/index", "reference/functional/index", "reference/simulation/index", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/intro/index.rst", "auto_examples/intro/intro_causal_graphs.rst", "auto_examples/intro/sg_execution_times.rst", "auto_examples/mixededge/index.rst", "auto_examples/mixededge/plot_mixed_edge_graph.rst", "auto_examples/mixededge/sg_execution_times.rst", "auto_examples/visualization/draw_and_compare_graphs_with_same_layout.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/plot_timeseries_graphs.rst", "auto_examples/visualization/sg_execution_times.rst", "generated/pywhy_graphs.ADMG.rst", "generated/pywhy_graphs.AugmentedGraph.rst", "generated/pywhy_graphs.AugmentedPAG.rst", "generated/pywhy_graphs.CPDAG.rst", "generated/pywhy_graphs.PAG.rst", "generated/pywhy_graphs.algorithms.acyclification.rst", "generated/pywhy_graphs.algorithms.add_all_snode_combinations.rst", "generated/pywhy_graphs.algorithms.compute_invariant_domains_per_node.rst", "generated/pywhy_graphs.algorithms.discriminating_path.rst", "generated/pywhy_graphs.algorithms.find_connected_pairs.rst", "generated/pywhy_graphs.algorithms.inducing_path.rst", "generated/pywhy_graphs.algorithms.is_definite_noncollider.rst", "generated/pywhy_graphs.algorithms.is_valid_mec_graph.rst", "generated/pywhy_graphs.algorithms.pds.rst", "generated/pywhy_graphs.algorithms.pds_path.rst", "generated/pywhy_graphs.algorithms.pds_t.rst", "generated/pywhy_graphs.algorithms.pds_t_path.rst", "generated/pywhy_graphs.algorithms.possible_ancestors.rst", "generated/pywhy_graphs.algorithms.possible_descendants.rst", "generated/pywhy_graphs.algorithms.uncovered_pd_path.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesDiGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesGraph.rst", "generated/pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.rst", "generated/pywhy_graphs.classes.timeseries.complete_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.empty_ts_graph.rst", "generated/pywhy_graphs.classes.timeseries.get_summary_graph.rst", "generated/pywhy_graphs.classes.timeseries.has_homologous_edges.rst", "generated/pywhy_graphs.classes.timeseries.nodes_in_time_order.rst", "generated/pywhy_graphs.export.clearn_to_graph.rst", "generated/pywhy_graphs.export.graph_to_clearn.rst", "generated/pywhy_graphs.export.graph_to_numpy.rst", "generated/pywhy_graphs.export.graph_to_pcalg.rst", "generated/pywhy_graphs.export.graph_to_tetrad.rst", "generated/pywhy_graphs.export.numpy_to_graph.rst", "generated/pywhy_graphs.export.pcalg_to_graph.rst", "generated/pywhy_graphs.export.tetrad_to_graph.rst", "generated/pywhy_graphs.functional.apply_linear_soft_intervention.rst", "generated/pywhy_graphs.functional.make_graph_linear_gaussian.rst", "generated/pywhy_graphs.functional.make_graph_multidomain.rst", "generated/pywhy_graphs.functional.set_node_attributes_with_G.rst", "generated/pywhy_graphs.networkx.MixedEdgeGraph.rst", "generated/pywhy_graphs.networkx.bidirected_to_unobserved_confounder.rst", "generated/pywhy_graphs.networkx.is_minimal_m_separator.rst", "generated/pywhy_graphs.networkx.m_separated.rst", "generated/pywhy_graphs.networkx.minimal_m_separator.rst", "generated/pywhy_graphs.simulate.simulate_data_from_var.rst", "generated/pywhy_graphs.simulate.simulate_linear_var_process.rst", "generated/pywhy_graphs.simulate.simulate_var_process_from_summary_graph.rst", "generated/pywhy_graphs.sys_info.rst", "generated/pywhy_graphs.viz.draw.rst", "generated/pywhy_graphs.viz.timeseries_layout.rst", "glossary.rst", "index.rst", "installation.md", "reference/algorithms/index.rst", "reference/classes/index.rst", "reference/export/index.rst", "reference/functional/index.rst", "reference/simulation/index.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API", "Examples Gallery", "Introduction to causal graphs", "An introduction to causal graphs and how to use them", "Computation times", "Networkx MixedEdgeGraph Examples", "MixedEdgeGraph - Graph with different types of edges", "Computation times", "Drawing graphs and setting their layout for visual comparison", "Visualization of causal graphs", "Drawing timeseries graphs and setting their layout", "Computation times", "pywhy_graphs.ADMG", "pywhy_graphs.AugmentedGraph", "pywhy_graphs.AugmentedPAG", "pywhy_graphs.CPDAG", "pywhy_graphs.PAG", "<span class=\"section-number\">3.4.1. </span>pywhy_graphs.algorithms.acyclification", "pywhy_graphs.algorithms.add_all_snode_combinations", "pywhy_graphs.algorithms.compute_invariant_domains_per_node", "<span class=\"section-number\">3.1.4. </span>pywhy_graphs.algorithms.discriminating_path", "pywhy_graphs.algorithms.find_connected_pairs", "pywhy_graphs.algorithms.inducing_path", "<span class=\"section-number\">3.1.5. </span>pywhy_graphs.algorithms.is_definite_noncollider", "<span class=\"section-number\">3.1.1. </span>pywhy_graphs.algorithms.is_valid_mec_graph", "<span class=\"section-number\">3.2.1. </span>pywhy_graphs.algorithms.pds", "<span class=\"section-number\">3.2.2. </span>pywhy_graphs.algorithms.pds_path", "<span class=\"section-number\">3.3.1. </span>pywhy_graphs.algorithms.pds_t", "<span class=\"section-number\">3.3.2. </span>pywhy_graphs.algorithms.pds_t_path", "<span class=\"section-number\">3.1.2. </span>pywhy_graphs.algorithms.possible_ancestors", "<span class=\"section-number\">3.1.3. </span>pywhy_graphs.algorithms.possible_descendants", "<span class=\"section-number\">3.2.3. </span>pywhy_graphs.algorithms.uncovered_pd_path", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG", "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph", "pywhy_graphs.classes.timeseries.TimeSeriesGraph", "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph", "pywhy_graphs.classes.timeseries.complete_ts_graph", "pywhy_graphs.classes.timeseries.empty_ts_graph", "pywhy_graphs.classes.timeseries.get_summary_graph", "pywhy_graphs.classes.timeseries.has_homologous_edges", "pywhy_graphs.classes.timeseries.nodes_in_time_order", "<span class=\"section-number\">5.1.2. </span>pywhy_graphs.export.clearn_to_graph", "<span class=\"section-number\">5.1.1. </span>pywhy_graphs.export.graph_to_clearn", "<span class=\"section-number\">5.2.1. </span>pywhy_graphs.export.graph_to_numpy", "<span class=\"section-number\">5.3.1. </span>pywhy_graphs.export.graph_to_pcalg", "<span class=\"section-number\">5.4.1. </span>pywhy_graphs.export.graph_to_tetrad", "<span class=\"section-number\">5.2.2. </span>pywhy_graphs.export.numpy_to_graph", "<span class=\"section-number\">5.3.2. </span>pywhy_graphs.export.pcalg_to_graph", "<span class=\"section-number\">5.4.2. </span>pywhy_graphs.export.tetrad_to_graph", "<span class=\"section-number\">2.2.2. </span>pywhy_graphs.functional.apply_linear_soft_intervention", "<span class=\"section-number\">2.2.1. </span>pywhy_graphs.functional.make_graph_linear_gaussian", "<span class=\"section-number\">2.4.1. </span>pywhy_graphs.functional.make_graph_multidomain", "pywhy_graphs.functional.set_node_attributes_with_G", "pywhy_graphs.networkx.MixedEdgeGraph", "<span class=\"section-number\">3.1.6. </span>pywhy_graphs.networkx.bidirected_to_unobserved_confounder", "<span class=\"section-number\">3.1.8. </span>pywhy_graphs.networkx.is_minimal_m_separator", "<span class=\"section-number\">3.1.7. </span>pywhy_graphs.networkx.m_separated", "<span class=\"section-number\">3.1.9. </span>pywhy_graphs.networkx.minimal_m_separator", "<span class=\"section-number\">4.1.2. </span>pywhy_graphs.simulate.simulate_data_from_var", "<span class=\"section-number\">4.1.1. </span>pywhy_graphs.simulate.simulate_linear_var_process", "<span class=\"section-number\">4.1.3. </span>pywhy_graphs.simulate.simulate_var_process_from_summary_graph", "pywhy_graphs.sys_info", "pywhy_graphs.viz.draw", "pywhy_graphs.viz.timeseries_layout", "<span class=\"section-number\">6. </span>Glossary of Common Terms and API Elements", "<strong>pywhy-graphs</strong>", "Installation", "<span class=\"section-number\">3. </span>Causal Graph Algorithms in PyWhy", "<span class=\"section-number\">1. </span>Causal Graphs in PyWhy", "<span class=\"section-number\">5. </span>Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package", "<span class=\"section-number\">2. </span>Functional Causal Graphical Models", "<span class=\"section-number\">4. </span>Simulation module", "How to use pywhy-graphs with examples and tutorials", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"thi": [0, 1, 3, 5, 6, 8, 10, 14, 15, 16, 17, 19, 24, 26, 27, 28, 31, 32, 34, 38, 39, 43, 47, 55, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 72, 73, 74, 75, 76, 78], "i": [0, 1, 3, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 39, 43, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77], "applic": 0, "program": 0, "interfac": [0, 68, 69, 73], "refer": [0, 13, 14, 17, 22, 25, 31, 51, 57, 59, 60, 61, 68, 69, 72], "camelcas": 0, "name": [0, 6, 8, 12, 13, 14, 15, 16, 17, 32, 35, 36, 45, 50, 51, 57, 58, 59, 60, 61, 62, 66, 68, 72], "underscore_cas": 0, "pywhi": [0, 13, 14, 47, 48, 49, 52, 68, 70, 74, 77, 78, 80], "group": 0, "themat": 0, "analysi": 0, "stage": [0, 55, 69], "These": [0, 3, 25, 68], "ar": [0, 3, 6, 8, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 29, 30, 31, 32, 33, 36, 39, 42, 43, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 61, 62, 63, 68, 69, 71, 72, 74, 78], "structur": [0, 12, 15, 16, 32, 34, 37, 38, 39, 55, 57, 68, 71, 72, 73, 75], "scm": [0, 3, 15, 16, 32, 68, 72], "variou": [0, 3, 8, 72, 80], "encount": [0, 73], "literatur": [0, 3], "tradit": [0, 3, 12, 72], "oper": [0, 17], "over": [0, 6, 15, 16, 27, 28, 32, 33, 36, 39, 57, 60, 62, 69, 72], "onli": [0, 3, 6, 15, 16, 31, 32, 36, 39, 47, 57, 60, 68, 72, 73, 74], "one": [0, 3, 6, 8, 13, 16, 19, 20, 24, 31, 33, 45, 47, 55, 57, 62, 63, 72, 73, 74], "type": [0, 1, 5, 7, 12, 13, 14, 15, 16, 32, 35, 39, 40, 45, 48, 50, 51, 52, 53, 57, 63, 68, 69, 73, 76, 77], "equival": [0, 3, 14, 15, 16, 32, 68, 72, 77], "gener": [0, 1, 3, 6, 8, 10, 12, 15, 16, 32, 55, 57, 62, 63, 66, 72, 74, 75, 76, 77], "consist": [0, 27, 28, 33, 55, 62, 69, 72], "more": [0, 3, 8, 13, 16, 55, 57, 63, 66, 68, 69, 72, 73], "than": [0, 16, 27, 28, 39, 55, 57, 72, 73], "common": [0, 3, 47, 69, 71, 72, 77], "us": [0, 1, 2, 4, 5, 6, 8, 10, 17, 19, 31, 32, 34, 38, 39, 56, 65, 68, 69, 70, 73, 75, 77], "varieti": 0, "differ": [0, 1, 3, 5, 7, 8, 10, 12, 13, 14, 15, 16, 32, 36, 57, 59, 61, 63, 68, 69, 72, 76], "learn": [0, 3, 14, 15, 16, 17, 25, 32, 45, 65, 69, 72, 74, 76, 77, 80], "implement": [0, 6, 26, 27, 28, 57, 59, 60, 61, 68, 69, 72, 73, 80], "infer": [0, 3, 14, 19, 25, 69], "procedur": [0, 17], "encod": [0, 3, 45, 72, 74], "object": [0, 3, 6, 8, 10, 15, 16, 32, 34, 39, 45, 57, 63, 68, 72], "submodul": [0, 69, 71, 74, 80], "those": [0, 22, 57, 63], "data": [0, 12, 13, 14, 15, 16, 32, 33, 34, 39, 54, 55, 57, 62, 63, 68, 71, 72, 73, 74, 75], "correspond": [0, 6, 12, 14, 15, 16, 39, 47, 57, 64, 68, 72, 74], "current": [0, 19, 26, 27, 28, 33, 69, 72, 73, 74], "doe": [0, 16, 24, 31, 57, 60, 69], "support": [0, 33, 42, 47, 57, 69, 70, 72, 73, 74, 80], "which": [0, 3, 6, 10, 15, 16, 20, 25, 26, 27, 28, 31, 32, 33, 39, 45, 52, 54, 55, 57, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 75, 77], "crucial": 0, "repres": [0, 3, 6, 12, 13, 14, 15, 16, 47, 48, 50, 51, 55, 57, 58, 59, 68, 69, 72, 73, 74], "latent": [0, 3, 12, 14, 15, 16, 22, 25, 31, 32, 63, 68, 72, 74], "confound": [0, 3, 6, 12, 15, 16, 22, 31, 32, 58, 63, 68, 72, 74], "select": [0, 3, 12, 16, 22, 25, 31, 55, 72, 77], "bia": [0, 3, 12, 16, 22, 31, 72], "The": [0, 3, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74], "follow": [0, 16, 25, 47, 50, 51, 57, 68, 72, 73], "we": [0, 3, 6, 8, 10, 16, 22, 31, 39, 47, 54, 55, 59, 62, 63, 68, 71, 72, 73, 74, 75, 76, 80], "intend": 0, "pr": 0, "eventu": [0, 57, 69], "thei": [0, 3, 6, 8, 13, 14, 15, 16, 32, 39, 47, 55, 57, 69, 72, 73], "includ": [0, 19, 33, 34, 57, 59, 61, 62, 63, 64, 65, 68, 72, 80], "temporari": 0, "bridg": 0, "welcom": [0, 73], "feedback": 0, "specif": [0, 6, 19, 47, 55, 56, 57, 59, 61, 67, 68, 69, 73], "time": [0, 3, 6, 8, 10, 27, 28, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 62, 63, 64, 67, 68, 77, 80], "seri": [0, 3, 10, 33, 34, 35, 37, 38, 39, 40, 42, 43, 62, 63, 64, 67, 68, 77, 80], "also": [0, 47, 55, 57, 67, 68, 69, 71, 72, 74], "have": [0, 3, 6, 16, 18, 23, 24, 43, 47, 54, 55, 57, 58, 60, 62, 69, 72, 73], "like": [0, 6, 16, 34, 47, 48, 50, 51, 57, 65, 69, 72, 73], "stationari": [0, 32, 33, 34, 35, 36, 39, 43, 62, 63, 64, 72], "mai": [0, 12, 15, 16, 23, 33, 55, 57, 59, 60, 61, 63, 68, 72], "For": [0, 3, 6, 8, 10, 13, 14, 15, 16, 32, 33, 36, 54, 55, 57, 62, 66, 68, 69, 72, 74], "explicitli": [0, 57, 74], "them": [0, 1, 2, 4, 12, 15, 16, 24, 57, 60, 66, 68, 76], "assist": 0, "start": [0, 20, 26, 27, 28, 29, 30, 31, 44, 45, 51, 62, 64, 75], "from": [0, 3, 8, 10, 14, 15, 16, 20, 25, 31, 32, 36, 39, 40, 42, 43, 44, 47, 51, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 77, 80], "an": [0, 1, 2, 4, 6, 8, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 31, 32, 33, 34, 36, 39, 40, 47, 50, 51, 54, 55, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 73, 74, 75, 76, 80], "linear": [0, 53, 54, 55, 63, 77, 80], "equat": 0, "gaussian": [0, 53, 54, 55, 74], "sem": 0, "compar": [0, 3, 6, 8, 10, 16, 26, 27, 28, 57, 72], "becaus": [0, 3, 6, 16, 47, 55, 59, 61, 69, 72, 73], "can": [0, 3, 6, 8, 10, 12, 15, 16, 19, 21, 31, 32, 33, 39, 47, 57, 60, 62, 63, 65, 66, 69, 72, 73, 74], "wrap": [0, 60], "graphviz": [0, 3, 8, 10, 66, 77], "pygraphviz": [0, 33, 65, 72], "perform": [0, 60], "modular": 0, "node": [0, 3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 43, 44, 45, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 80], "modul": [0, 57, 65, 68, 69, 77], "simpl": [1, 16, 68, 69, 72, 76], "demonstr": [1, 5, 8, 10, 76], "how": [1, 2, 4, 5, 8, 10, 12, 15, 16, 19, 47, 48, 57, 60, 66, 68, 72], "note": [1, 3, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 31, 32, 33, 39, 43, 47, 48, 51, 52, 55, 57, 58, 60, 62, 63, 64, 67, 68, 72, 76, 78], "wip": [1, 5, 76], "api": [1, 5, 6, 34, 57, 72, 76, 77, 78, 79, 80], "intent": [1, 5, 76], "ad": [1, 3, 5, 6, 13, 14, 15, 16, 18, 32, 33, 39, 57, 58, 72, 74, 76, 80], "edg": [1, 3, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 26, 31, 32, 33, 34, 35, 36, 39, 43, 47, 48, 51, 54, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 71, 72, 73, 74, 76, 80], "draw": [1, 3, 9, 11, 12, 15, 16, 37, 57, 67, 76, 80], "set": [1, 3, 6, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 72, 74, 76], "layout": [1, 9, 11, 12, 15, 16, 37, 57, 66, 67, 76, 80], "comparison": [1, 9, 10, 11, 12, 15, 16, 57, 66, 76], "timeseri": [1, 9, 11, 66, 67, 76, 77, 80], "download": [1, 3, 6, 8, 10, 76], "all": [1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 31, 32, 33, 34, 39, 43, 54, 55, 57, 58, 59, 61, 68, 69, 72, 73, 76, 78], "python": [1, 3, 6, 8, 10, 15, 16, 32, 39, 57, 65, 68, 69, 70, 76], "sourc": [1, 3, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 76], "code": [1, 3, 6, 8, 10, 51, 68, 76], "auto_examples_python": [1, 76], "zip": [1, 76], "jupyt": [1, 3, 6, 8, 10, 76], "notebook": [1, 3, 6, 8, 10, 76], "auto_examples_jupyt": [1, 76], "sphinx": [1, 3, 6, 8, 10, 68, 76], "click": [3, 6, 8, 10], "here": [3, 6, 8, 10, 51, 57, 73, 76, 80], "full": [3, 6, 8, 10, 57, 63], "exampl": [3, 6, 8, 10, 13, 14, 32, 33, 36, 39, 47, 55, 62, 65, 68, 69, 72, 74], "graphic": [3, 13, 54, 68, 77], "attach": 3, "notion": 3, "each": [3, 6, 8, 10, 13, 14, 15, 16, 24, 32, 35, 39, 55, 57, 62, 65, 66, 67, 68, 72, 74], "miss": [3, 55, 63], "review": 3, "fundament": [3, 69], "import": [3, 6, 8, 10, 65, 68, 69, 77, 80], "networkx": [3, 6, 8, 10, 12, 13, 14, 15, 16, 32, 33, 35, 39, 40, 54, 55, 65, 68, 72, 73, 80], "nx": [3, 6, 8, 34, 42, 57, 64, 68, 69, 72], "numpi": [3, 33, 47, 48, 50, 65, 68, 72, 77, 80], "np": [3, 45, 47, 68], "panda": [3, 62, 64, 65, 68], "pd": [3, 26, 27, 28, 31, 68, 80], "dowhi": [3, 65], "gcm": 3, "util": 3, "set_random_se": 3, "scipi": [3, 33, 63, 65, 72], "stat": [3, 63], "pywhy_graph": [3, 6, 8, 10, 68, 69, 77, 80], "pywhy_nx": [3, 17, 45, 66, 69], "viz": [3, 8, 10, 80], "1": [3, 6, 8, 10, 13, 14, 17, 22, 25, 26, 27, 28, 31, 33, 34, 37, 38, 39, 47, 51, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 78], "mathemat": 3, "defin": [3, 6, 22, 25, 26, 27, 28, 31, 33, 47, 48, 54, 57, 68, 72], "4": [3, 11, 26, 59, 61, 65, 67, 68, 72], "tupl": [3, 6, 13, 14, 15, 16, 20, 21, 22, 27, 28, 31, 32, 33, 39, 43, 46, 55, 57, 68, 72], "v": [3, 6, 15, 16, 20, 25, 31, 32, 36, 39, 43, 57, 60, 61, 68], "u": [3, 8, 10, 15, 16, 20, 25, 31, 32, 36, 39, 43, 54, 57, 68, 69], "f": [3, 6, 13, 14, 68, 72], "p": [3, 20, 68], "where": [3, 6, 13, 14, 15, 16, 20, 24, 32, 33, 39, 47, 54, 57, 63, 68, 69, 72], "endogen": [3, 68], "observ": [3, 62, 64, 68], "variabl": [3, 6, 14, 22, 25, 31, 33, 40, 41, 54, 55, 58, 62, 63, 67, 68, 72, 74], "exogen": [3, 53, 68], "unobserv": [3, 6, 15, 32, 58, 72], "function": [3, 6, 8, 10, 16, 24, 31, 33, 37, 38, 40, 43, 57, 59, 65, 68, 69, 71, 72, 73, 75, 77, 80], "everi": [3, 6, 20, 25, 31, 60, 72], "distribut": [3, 14, 54, 55, 63, 68, 74], "taken": [3, 31, 57], "togeth": 3, "four": [3, 57], "mechan": [3, 55], "problem": [3, 14], "almost": 3, "alwai": [3, 22, 33, 59, 61, 68, 69, 72], "howev": [3, 12, 31, 62, 63, 68, 69, 72], "induc": [3, 15, 22, 32, 57, 68, 72, 80], "ha": [3, 6, 14, 15, 16, 20, 25, 32, 39, 47, 57, 59, 60, 61, 63, 68, 69, 72, 74, 80], "argument": [3, 8, 10, 12, 13, 14, 15, 16, 31, 32, 33, 35, 36, 39, 57, 65, 68, 72, 80], "If": [3, 6, 14, 15, 16, 19, 23, 25, 31, 32, 33, 36, 39, 43, 55, 57, 59, 61, 62, 65, 69, 72], "parent": [3, 15, 16, 20, 32, 36, 54, 55, 68, 74], "ani": [3, 6, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 57, 62, 66, 68, 72, 74], "bidirect": [3, 6, 12, 13, 14, 15, 16, 17, 32, 36, 47, 58, 59, 60, 61, 68, 69, 72, 74], "between": [3, 12, 15, 16, 20, 22, 24, 25, 28, 31, 32, 39, 45, 47, 54, 55, 57, 59, 60, 61, 68, 69, 72, 73, 80], "two": [3, 6, 12, 15, 16, 22, 28, 31, 47, 55, 57, 58, 68, 69, 72, 80], "even": [3, 61], "though": 3, "typic": [3, 6, 31], "unknown": [3, 14], "still": [3, 55, 68], "ground": 3, "truth": 3, "evalu": 3, "algorithm": [3, 15, 16, 32, 59, 60, 61, 69, 72, 75, 77, 80], "build": [3, 69], "our": [3, 69], "intuit": [3, 22, 31], "understand": 3, "context": [3, 69], "random": [3, 13, 14, 53, 54, 55, 62, 63, 64, 67], "seed": [3, 53, 54, 55, 64], "make": [3, 17, 39], "reproduc": [3, 57], "12345": 3, "rng": 3, "randomst": [3, 53], "class": [3, 6, 12, 13, 14, 15, 16, 47, 57, 68, 69, 77, 80], "mycustommodel": 3, "predictionmodel": 3, "def": 3, "__init__": 3, "self": 3, "coeffici": 3, "fit": [3, 68], "x": [3, 6, 8, 10, 13, 14, 15, 16, 25, 27, 28, 32, 33, 36, 47, 54, 55, 59, 60, 61, 62, 66, 68, 72, 74], "y": [3, 6, 8, 10, 13, 14, 15, 16, 25, 32, 33, 36, 47, 55, 59, 60, 61, 66, 68, 72, 74], "noth": 3, "sinc": [3, 6, 47, 57, 80], "know": [3, 6, 72], "pass": [3, 8, 10, 15, 16, 31, 32, 36, 62, 65], "predict": [3, 25], "return": [3, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68], "clone": [3, 70], "don": [3, 57], "t": [3, 33, 34, 44, 57, 62, 67, 68, 72], "realli": 3, "need": [3, 31, 33, 69, 72, 76], "actual": [3, 39, 57, 73], "1234": 3, "construct": [3, 19, 24, 50, 52, 55], "result": [3, 6, 16, 63, 72], "xy": [3, 8], "z": [3, 6, 8, 25, 33, 47, 59, 60, 61, 72, 74], "w": [3, 8], "_________": 3, "g": [3, 6, 8, 10, 17, 18, 19, 22, 23, 24, 29, 30, 31, 39, 40, 42, 43, 44, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 69], "digraph": [3, 6, 8, 12, 13, 14, 15, 16, 32, 35, 36, 40, 41, 42, 54, 55, 57, 58, 66, 69, 72], "dot_graph": 3, "render": [3, 8, 10, 68], "outfil": [3, 8, 10], "png": [3, 8, 10], "view": [3, 8, 10, 39, 57], "true": [3, 6, 8, 10, 17, 22, 32, 33, 34, 36, 39, 40, 43, 54, 55, 57, 59, 60, 65, 68, 72], "causal_model": 3, "probabilisticcausalmodel": 3, "set_causal_mechan": 3, "scipydistribut": 3, "binom": [3, 55], "0": [3, 6, 7, 8, 10, 13, 14, 25, 33, 43, 44, 47, 51, 54, 55, 62, 63, 65, 67, 68, 69, 72, 73, 78], "5": [3, 10, 63, 65, 67], "n": [3, 15, 16, 32, 36, 54, 57], "9": [3, 25, 33, 72, 80], "additivenoisemodel": 3, "prediction_model": 3, "noise_model": 3, "8": [3, 8, 10, 11, 59, 65, 70], "would": [3, 6, 16, 33, 47, 61, 62, 67, 72], "paramet": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72], "do": [3, 16, 24, 57, 68, 72, 74], "anyth": [3, 68], "method": [3, 57, 68, 71, 72, 73], "ensur": [3, 60], "fcm": 3, "correct": [3, 15, 16, 32, 36, 57], "local": [3, 65], "hash": 3, "e": [3, 6, 8, 10, 17, 19, 25, 31, 34, 51, 57, 60, 61, 63, 65, 67, 68, 69, 70, 72], "get": [3, 6, 8, 10, 54, 55, 57], "inconsist": [3, 19, 55, 68], "error": [3, 24, 57, 73], "modifi": [3, 54, 55, 56, 62, 72], "afterward": 3, "without": [3, 6, 8, 10, 12, 16, 17, 34, 39, 57, 63, 68, 72], "updat": [3, 15, 16, 32, 39, 57], "empti": [3, 22, 33, 59, 60, 61, 72], "small": 3, "workaround": 3, "pre": [3, 47, 48, 80], "datafram": [3, 62, 64], "column": [3, 45, 50, 51, 62, 67], "sampl": [3, 54, 55, 64, 68], "draw_sampl": 3, "num_sampl": 3, "500": [3, 62], "print": [3, 6, 8, 10, 47, 65], "head": 3, "col": 3, "uniqu": [3, 33, 47, 72], "show": [3, 6, 8, 65], "collid": [3, 20, 22, 23, 25, 60], "collis": 3, "arrow": [3, 73], "00": [3, 4, 7, 11], "": [3, 14, 15, 16, 18, 19, 22, 25, 32, 33, 39, 51, 55, 57, 68, 69, 72, 74, 78], "100": 3, "698": 3, "21it": 3, "3": [3, 4, 6, 10, 11, 14, 15, 16, 20, 26, 32, 39, 51, 55, 57, 61, 65, 67, 70, 72, 73], "2": [3, 6, 10, 14, 15, 16, 19, 25, 32, 33, 39, 47, 51, 54, 55, 57, 62, 65, 68, 72, 73], "row": [3, 45, 50, 51, 67, 68], "dtype": 3, "0x7f486dde8640": 3, "markovian": [3, 15, 16, 32, 72], "suffici": [3, 15, 32, 72], "assumpt": [3, 15, 16, 32, 34, 72], "One": [3, 8, 10, 15, 32, 50, 51, 52, 68, 69, 72], "queri": [3, 6, 33, 57, 72], "list": [3, 14, 20, 21, 22, 31, 33, 35, 39, 40, 45, 46, 50, 51, 54, 55, 57, 62, 67, 68, 69, 72, 74, 80], "predecessor": 3, "Or": 3, "children": [3, 15, 16, 32, 36, 68, 74], "successor": 3, "explor": [3, 20], "d": [3, 15, 16, 22, 25, 26, 27, 28, 32, 33, 39, 57, 72], "separ": [3, 16, 22, 25, 26, 27, 28, 33, 47, 59, 60, 61, 72, 80], "statement": [3, 68], "markov": [3, 14, 15, 16, 32, 68, 72, 77], "condit": [3, 22, 60, 62, 68], "impli": [3, 15, 32, 51, 55, 72], "independ": [3, 57, 62, 63, 68], "d_separ": [3, 60], "open": [3, 69], "up": [3, 33, 72], "path": [3, 20, 22, 23, 25, 26, 27, 28, 31, 59, 60, 65, 68, 80], "given": [3, 15, 16, 18, 19, 31, 32, 33, 39, 55, 57, 60, 72], "fals": [3, 6, 31, 33, 39, 42, 57, 59, 65, 72], "semi": [3, 16, 72], "possibli": [3, 25, 26, 27, 28, 42, 54, 55, 57], "depict": [3, 33, 72], "just": [3, 6, 12, 13, 14, 15, 16, 32, 36, 64, 70, 72, 73], "set_nodes_as_latent_confound": [3, 8], "now": [3, 6, 64], "anymor": 3, "form": [3, 23, 24, 25, 63, 71, 72, 73], "cluster": 3, "what": [3, 16, 17, 22, 55, 72, 78], "compon": [3, 12, 17, 26, 55, 68], "c": [3, 12, 20, 31, 68], "short": 3, "c_compon": [3, 12, 68], "look": [3, 10, 69, 76], "m": [3, 17, 59, 60, 61, 80], "similarli": [3, 57, 59, 72], "m_separ": [3, 80], "sai": 3, "add": [3, 6, 12, 13, 15, 16, 18, 32, 33, 35, 39, 57, 69, 70, 72, 74, 80], "longer": 3, "add_edg": [3, 6, 15, 16, 32, 39, 57, 69], "bidirected_edge_nam": [3, 12, 13, 14, 16, 36, 58, 59, 60, 61, 72], "after": [3, 19, 31], "besid": [3, 31, 57], "relationship": [3, 12, 15, 16, 32, 68, 72], "other": [3, 6, 8, 10, 16, 24, 47, 55, 57, 68, 72, 73], "same": [3, 6, 8, 10, 12, 15, 16, 19, 32, 39, 47, 57, 63, 68, 72], "commonli": 3, "constraint": [3, 15, 16, 17, 32, 72], "base": [3, 15, 16, 17, 19, 32, 54, 57, 69, 72], "seek": 3, "reconstruct": 3, "part": [3, 68], "In": [3, 8, 10, 16, 17, 31, 33, 43, 47, 55, 57, 62, 63, 69, 72, 74, 80], "next": [3, 10, 72], "section": 3, "briefli": 3, "overview": [3, 76], "usual": [3, 68, 69], "so": [3, 6, 8, 16, 57, 59, 68, 69, 72, 73], "dodiscov": [3, 65], "http": [3, 8, 14, 17, 22, 25, 31, 51, 52, 57, 66, 68, 70], "github": [3, 52, 69, 70], "com": [3, 22, 31, 70], "py": [3, 4, 6, 7, 8, 10, 11, 70], "why": [3, 70], "_": [3, 68], "detail": [3, 14, 22, 55, 68, 69], "discoveri": [3, 14, 17, 22, 31, 72, 75], "pleas": [3, 57, 69, 73], "see": [3, 8, 10, 13, 14, 22, 37, 38, 47, 48, 51, 52, 55, 57, 63, 66, 68, 69, 72], "repo": 3, "stem": [3, 72], "relev": [3, 33, 57, 65, 68, 69, 72], "assum": [3, 39, 62, 64, 69, 72, 75], "uncertain": [3, 23, 25], "orient": [3, 15, 16, 20, 22, 31, 32, 36, 68, 72], "via": [3, 6, 15, 16, 32, 36, 39, 57, 70], "undirect": [3, 12, 13, 14, 15, 16, 32, 33, 36, 38, 42, 47, 57, 59, 60, 61, 72, 80], "ll": 3, "earlier": 3, "learnt": 3, "variant": 3, "pc": [3, 15, 32, 72], "let": [3, 8, 10], "add_edges_from": [3, 8, 10, 15, 16, 32, 39, 57], "undirected_edge_nam": [3, 8, 12, 13, 14, 15, 16, 32, 36, 59, 60, 61, 72], "unshield": [3, 31], "present": [3, 6, 12, 15, 16, 17, 47, 59, 60, 61, 67, 72], "origin": [3, 14, 39, 57], "orient_uncertain_edg": [3, 8, 15, 16, 32, 36], "allow": [3, 6, 13, 15, 16, 25, 32, 34, 47, 60, 63, 68, 72, 73], "complex": [3, 16, 72], "circl": [3, 14, 16, 31, 36, 47, 51, 66, 72, 73, 80], "endpoint": [3, 14, 16, 20, 28, 31, 45, 47, 72, 73], "A": [3, 6, 8, 12, 15, 16, 17, 20, 22, 23, 24, 31, 32, 33, 35, 36, 37, 38, 39, 42, 57, 58, 60, 64, 67, 68, 72], "o": [3, 16, 23, 31, 47, 51, 60, 61, 72, 73], "either": [3, 14, 17, 47, 48, 55, 57, 68], "tail": [3, 16, 31, 47, 51, 72, 73], "arrowhead": [3, 15, 16, 31, 32, 36, 51, 72, 73], "possibl": [3, 12, 16, 18, 19, 29, 30, 55, 72], "presenc": [3, 6, 12, 17, 22, 31, 72], "fci": [3, 16, 31, 72], "circle_edge_nam": [3, 14, 16, 36, 72], "judea": [3, 13, 14], "pearl": [3, 13, 14], "reason": 3, "cambridg": 3, "univers": 3, "press": [3, 17, 25], "usa": 3, "2nd": 3, "edit": 3, "2009": 3, "isbn": [3, 25], "052189560x": 3, "peter": [3, 17, 25], "spirt": [3, 25], "clark": [3, 25], "glymour": [3, 25], "richard": [3, 25], "schein": [3, 25], "causat": [3, 25], "search": [3, 25, 26, 27, 28, 31, 60], "volum": [3, 17, 25], "81": [3, 25], "mit": [3, 25], "01": [3, 7, 11, 25], "1993": [3, 13, 25], "978": [3, 25], "4612": [3, 25], "7650": [3, 25], "doi": [3, 14, 22, 25, 31, 59, 60, 61], "10": [3, 8, 10, 14, 22, 25, 31, 47, 59, 60, 61, 80], "1007": [3, 25], "2748": [3, 25], "jiji": [3, 22, 31], "zhang": [3, 22, 31], "On": [3, 22, 31], "rule": [3, 16, 22, 31, 72], "artifici": [3, 17, 22, 31, 59, 60, 61], "intellig": [3, 17, 22, 31, 59, 60, 61], "172": [3, 22, 31], "16": [3, 22, 31, 80], "1873": [3, 22, 31], "1896": [3, 22, 31], "2008": [3, 22, 31], "url": [3, 14, 17, 22, 25, 31], "www": [3, 14, 22, 31], "sciencedirect": [3, 22, 31], "scienc": [3, 14, 22, 31], "articl": [3, 22, 31], "pii": [3, 22, 31], "s0004370208001008": [3, 22, 31], "org": [3, 8, 14, 22, 25, 31, 51, 57, 66, 70], "1016": [3, 22, 31, 59, 60, 61], "j": [3, 21, 22, 31, 47, 54, 59, 60, 61], "artint": [3, 22, 31, 59, 60, 61], "08": [3, 22, 31, 65], "001": [3, 22, 31], "total": [3, 4, 6, 7, 8, 10, 11, 33, 55, 57, 72], "run": [3, 6, 8, 10, 65, 70], "script": [3, 6, 8, 10, 68], "minut": [3, 6, 8, 10], "062": [3, 4], "second": [3, 6, 8, 10, 57, 60, 68, 72], "estim": [3, 6, 8, 10, 68], "memori": [3, 6, 8, 10, 65, 68], "usag": [3, 6, 8, 10, 68, 69], "58": [3, 4], "mb": [3, 4, 6, 7, 8, 10, 11], "intro_causal_graph": [3, 4, 8, 10], "ipynb": [3, 6, 8, 10], "galleri": [3, 6, 8, 10, 68], "04": 4, "execut": [4, 7, 11, 65], "auto_examples_intro": 4, "file": [4, 7, 11, 49, 52, 65, 73], "introduct": [4, 12, 15, 16, 57, 60, 66], "causal": [4, 6, 12, 13, 14, 15, 16, 17, 22, 31, 32, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 77, 80], "graph": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 75, 77, 78, 80], "compris": [6, 57, 68], "user": [6, 13, 57, 65, 68, 69], "arbitrari": [6, 57], "represent": [6, 57, 60, 66, 69], "intern": [6, 12, 13, 15, 24, 32, 36, 69, 72], "semant": 6, "normal": [6, 54], "should": [6, 15, 16, 32, 34, 38, 39, 57, 68, 69, 77], "convert": [6, 17, 45, 47, 48, 49, 50, 51, 52, 54, 55, 58, 62, 74, 80], "its": [6, 33, 68, 72, 73, 74], "appropri": 6, "direct": [6, 12, 13, 14, 15, 16, 17, 24, 25, 31, 32, 33, 34, 36, 37, 39, 42, 47, 57, 58, 59, 60, 61, 66, 69, 72, 74], "relat": [6, 8, 10, 12, 68, 69, 72], "matplotlib": [6, 65], "pyplot": 6, "plt": 6, "pg": 6, "kind": [6, 16, 57, 72], "To": [6, 31, 43, 55, 57, 62, 63, 69, 70, 74, 76], "creat": [6, 8, 10, 33, 40, 55, 57, 69, 72], "specifi": [6, 8, 15, 16, 32, 39, 55, 57, 58, 63, 69, 72], "associ": [6, 57, 68], "directed_g": 6, "bidirected_g": 6, "add_nodes_from": [6, 57], "edge_typ": [6, 15, 16, 32, 35, 39, 57, 69, 72], "iv": 6, "comput": [6, 19, 26, 27, 28, 31, 42, 54, 55, 57], "multipartite_layout": 6, "layer": [6, 34, 72, 74], "attribut": [6, 12, 13, 15, 16, 19, 32, 33, 35, 39, 54, 55, 56, 57, 66, 68, 72, 74], "po": [6, 8, 10, 66, 67], "spring_layout": [6, 8], "visual": [6, 10, 11, 12, 15, 16, 57, 66], "fig": 6, "ax": 6, "subplot": 6, "draw_networkx": 6, "get_graph": [6, 57, 69], "set_titl": 6, "instrument": 6, "tight_layout": 6, "block": 6, "is_direct": [6, 57], "multigraph": [6, 57], "is_multigraph": [6, 57], "bidirected_edg": [6, 12, 16, 36, 72], "0x7f489d5fd7c0": 6, "0x7f489d5fddf0": 6, "similar": [6, 16, 57, 68, 69, 72], "By": [6, 12, 13, 14, 15, 16, 20, 25, 31, 32, 34, 39, 55, 57, 62, 64, 66, 68, 72], "default": [6, 10, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 40, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72], "store": [6, 8, 10, 12, 15, 16, 45, 52, 57, 71, 72, 73], "insid": [6, 80], "assert": [6, 69], "order": [6, 8, 15, 16, 32, 33, 34, 36, 44, 45, 50, 51, 57, 62, 67, 72, 74], "len": [6, 57], "number_of_nod": [6, 57], "new": [6, 57, 69, 78], "has_nod": [6, 57], "add_nod": 6, "remov": [6, 19, 39, 55, 57, 59, 61, 72], "remove_nod": 6, "except": [6, 19, 39, 57], "per": [6, 63], "As": 6, "must": [6, 15, 16, 28, 31, 32, 34, 39, 45, 55, 57, 62, 66, 72], "when": [6, 15, 16, 19, 31, 32, 39, 57, 59, 63, 65, 68, 69, 78], "you": [6, 16, 55, 57, 62, 69, 70, 72, 73, 76], "well": [6, 57], "has_edg": [6, 43, 57, 69], "remove_edg": [6, 39, 57], "standard": [6, 73], "adj": [6, 57], "degre": [6, 57], "instead": [6, 57, 62], "moreov": [6, 54, 55, 57], "neighbor": [6, 57], "uni": 6, "counterpart": 6, "mani": [6, 57, 69], "connect": [6, 13, 15, 17, 21, 31, 32, 33, 36, 55, 57, 58, 60, 63, 72], "adjac": [6, 20, 22, 23, 25, 26, 31, 47, 48, 51, 57], "provid": [6, 39, 57, 68, 69, 71, 72, 73, 74, 75], "wai": [6, 16, 57, 72, 73], "iter": [6, 12, 15, 16, 32, 34, 36, 44, 57, 72], "through": [6, 57, 68], "item": [6, 57], "want": [6, 16, 57, 72], "dictionari": [6, 8, 10, 15, 16, 32, 39, 57, 67, 69, 74], "849": [6, 7], "45": [6, 7], "plot_mixed_edge_graph": [6, 7], "auto_examples_mixededg": 7, "mixededgegraph": [7, 12, 13, 15, 16, 17, 39, 45, 58, 64, 66, 69, 72, 80], "case": [8, 10, 16, 31, 43, 62, 72], "choos": [8, 10, 19], "place": [8, 10, 17, 54, 55, 58], "fix": [8, 55, 78, 79, 80], "easili": 8, "posit": [8, 10, 66, 67, 80], "label": [8, 15, 16, 32, 39, 57, 58, 66, 80], "altern": 8, "own": [8, 73], "manual": [8, 52, 57], "softwar": [8, 10, 69], "dagitti": [8, 77], "arrai": [8, 10, 33, 45, 47, 48, 50, 51, 62, 67, 68, 72, 73, 80], "15471958": 8, "42925134": 8, "7990356": 8, "90151211": 8, "36916753": 8, "62354034": 8, "6548282": 8, "09580111": 8, "92997669": 8, "pag": [8, 10, 13, 14, 20, 23, 24, 25, 26, 29, 30, 31, 34, 45, 48, 50, 51, 52, 69, 72, 80], "cpdag": [8, 10, 16, 24, 32, 45, 48, 50, 51, 52, 72, 80], "some": [8, 10, 25, 57, 69, 72, 76], "dummi": [8, 10], "admg": [8, 10, 13, 15, 16, 32, 45, 47, 50, 52, 60, 69, 72], "borrow": [8, 10], "pos_g": [8, 10], "k": [8, 39, 57], "inspect": [8, 10], "notic": [8, 10], "kei": [8, 10, 12, 13, 15, 16, 32, 33, 35, 39, 57, 66, 67, 68, 72, 74], "coordin": [8, 10, 66], "valu": [8, 10, 12, 13, 15, 16, 32, 33, 35, 39, 47, 48, 55, 57, 66, 68, 72, 73, 74], "call": [8, 10, 14, 17, 26, 27, 28, 61, 68, 72], "dot_g": [8, 10], "dot_admg": 8, "dot_cpdag": 8, "dot_pag": 8, "engin": [8, 10, 69], "neato": [8, 10], "requir": [8, 16, 68, 72], "leverag": 8, "inform": [8, 13, 14, 48, 57, 63, 65, 66, 68], "document": [8, 37, 38, 51, 52, 57, 66, 68, 69, 71, 72], "doc": [8, 57, 66, 68], "469": [8, 11], "draw_and_compare_graphs_with_same_layout": [8, 11], "rather": [10, 16, 57, 72], "messi": 10, "final": [10, 57, 63, 72, 74], "output": [10, 47, 49, 62, 65, 72], "effect": [10, 15, 16, 32, 39, 57, 63, 74, 76], "stationarytimeseriesdigraph": [10, 34, 40, 41, 63, 72], "timeseries_layout": 10, "max_lag": [10, 33, 34, 35, 37, 38, 39, 40, 41, 62, 63, 64, 72], "ts_edg": 10, "x1": 10, "x2": 10, "x3": 10, "first": [10, 13, 31, 55, 57, 59, 60, 68, 70, 72], "default_g": 10, "nice": 10, "variable_ord": [10, 67], "scale": [10, 67], "7": [10, 61, 65], "33333333": 10, "960": [10, 11], "plot_timeseries_graph": [10, 11], "429": 11, "auto_examples_visu": 11, "incoming_directed_edg": [12, 13, 14, 15, 16, 32, 36, 72], "none": [12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72], "incoming_bidirected_edg": [12, 13, 14, 16, 36, 72], "incoming_undirected_edg": [12, 13, 14, 15, 16, 32, 36, 72], "directed_edge_nam": [12, 13, 14, 15, 16, 32, 36, 58, 59, 60, 61, 72], "str": [12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 43, 45, 46, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 66, 72], "attr": [12, 13, 14, 15, 16, 32, 33, 34, 35, 36, 37, 38, 39, 57, 66, 72], "acycl": [12, 15, 25, 32, 63, 69, 72, 77, 80], "mix": [12, 16, 35, 39, 57, 59, 60, 61, 66, 69, 71, 72, 73, 80], "constitut": [12, 68, 72], "dag": [12, 15, 16, 32, 36, 45, 50, 51, 52, 54, 55, 58, 60, 63, 64, 69, 72, 73], "did": [12, 72], "while": [12, 68, 69, 72], "input": [12, 13, 14, 15, 16, 32, 33, 54, 57, 71, 72, 74], "option": [12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 40, 45, 53, 54, 55, 57, 62, 63, 64, 66, 67, 72], "initi": [12, 13, 14, 15, 16, 32, 33, 57, 62, 64, 72], "accept": [12, 13, 14, 15, 16, 32, 72], "keyword": [12, 13, 15, 16, 32, 33, 35, 39, 57, 69, 72, 80], "pair": [12, 13, 14, 15, 16, 21, 24, 32, 33, 35, 47, 57, 68, 72], "subgraph": [12, 13, 14, 15, 16, 25, 32, 39, 57, 72], "underneath": [12, 15, 16, 72], "hood": [12, 15, 16, 72], "non": [12, 15, 20, 22, 23, 24, 34, 47, 57, 59, 60, 72, 74], "stand": [12, 15, 68, 72], "indic": [12, 14, 15, 16, 33, 47, 68, 72], "access": [12, 15, 16, 32, 39, 57, 68, 72], "sub_directed_graph": [12, 15, 16, 32, 36, 72], "Their": [12, 15, 16, 72], "format": [12, 15, 16, 33, 49, 52, 72, 73], "directed_edg": [12, 15, 16, 32, 36, 72], "sub_bidirected_graph": [12, 16, 36, 72], "sub_undirected_graph": [12, 15, 16, 32, 36, 72], "undirected_edg": [12, 15, 16, 32, 36, 72], "definit": [12, 15, 16, 23, 26, 31, 68, 72], "cycl": [12, 15, 17, 24, 63, 69, 72], "exist": [12, 13, 15, 22, 39, 54, 55, 57, 59, 61, 69, 72, 75], "due": [12, 15, 25, 68, 72], "beyond": [12, 72], "multipl": [12, 47, 57, 62, 72, 73, 74], "properti": [12, 15, 16, 32, 36, 57, 72], "map": [12, 13, 14, 15, 16, 32, 36, 47, 48, 57, 68, 69, 72, 73, 74], "edgeview": [12, 15, 16, 32, 36, 57], "trivial": [12, 31], "themself": 12, "comp": 12, "sub": [12, 15, 16, 17, 32, 36, 57], "augment": [13, 14, 18, 19, 59, 72, 74], "diagram": [13, 14, 55, 77], "intervent": [13, 14, 53, 68, 72, 80], "were": [13, 58], "introduc": 13, "model": [13, 14, 15, 16, 32, 34, 54, 55, 63, 68, 72, 77, 80], "hard": 13, "soft": [13, 14, 53], "explicit": [13, 68], "tbd": 13, "guid": [13, 68, 69], "exactli": [13, 14, 39], "index": [13, 14, 33, 45, 51, 69, 72], "number": [13, 14, 15, 16, 18, 19, 21, 32, 39, 55, 57, 60, 61, 62, 63, 64, 68, 72], "appli": [13, 14, 17, 53, 54, 68], "rightarrow": [13, 14, 47, 55], "regular": [13, 14, 55], "aspect": [13, 69], "proceed": [13, 14, 17], "49th": 13, "session": 13, "statist": [13, 25], "institut": 13, "page": [13, 69, 78], "399": 13, "401": 13, "incoming_circle_edg": [14, 16, 36, 72], "been": [14, 59], "both": [14, 16, 31, 39, 57, 68, 72, 74], "It": [14, 26, 57, 67, 68], "circular": [14, 16, 25, 34, 72], "f_node": 14, "handl": [14, 19, 47, 57, 77], "target": [14, 53, 56, 68, 72], "contain": [14, 15, 16, 22, 24, 26, 32, 39, 43, 47, 57, 59, 60, 61, 68, 69], "integ": [14, 57, 68], "sigma": 14, "special": [14, 16, 31, 68, 72], "known": [14, 69, 72], "domain": [14, 18, 19, 21, 55, 74], "environ": 14, "amin": 14, "jaber": 14, "murat": 14, "kocaoglu": 14, "karthikeyan": 14, "shanmugam": 14, "elia": 14, "bareinboim": 14, "character": [14, 72], "advanc": 14, "neural": 14, "process": [14, 62, 63, 64, 72], "system": [14, 65], "33": 14, "9551": 14, "9561": 14, "2020": [14, 17, 65], "2019": [14, 59, 60, 61], "fusion": 14, "nation": 14, "academi": 14, "113": 14, "27": 14, "7345": 14, "7352": 14, "juli": 14, "2016": 14, "publish": 14, "pna": 14, "content": 14, "1073": 14, "1510507113": 14, "complet": [15, 22, 25, 31, 32, 34, 40, 57, 59, 60, 61, 62, 72], "partial": [15, 16, 17, 32, 69, 72], "uncertainti": [15, 16, 17, 32, 72], "b": [15, 32, 51, 59, 60, 61, 72], "implicit": [15, 16, 32, 72], "score": [15, 32, 72], "ge": [15, 32, 72], "approach": [15, 16, 32, 69, 72, 80], "suspect": [15, 32, 72], "directino": [15, 72], "u_of_edg": [15, 16, 32, 39, 43, 57], "v_of_edg": [15, 16, 32, 39, 43, 57], "automat": [15, 16, 32, 33, 39, 57, 72], "alreadi": [15, 16, 31, 32, 39, 57, 62, 68], "directli": [15, 16, 32, 34, 38, 39, 57, 72], "u_for_edg": [15, 16, 32, 39, 57], "v_for_edg": [15, 16, 32, 39, 57], "string": [15, 16, 32, 39, 57, 66, 68], "hashabl": [15, 16, 32, 39, 57], "assign": [15, 16, 32, 39, 50, 51, 57], "collect": [15, 16, 32, 39, 57], "ebunch_to_add": [15, 16, 32, 39, 57], "singl": [15, 16, 32, 35, 39, 57, 68, 69, 72], "twice": [15, 16, 32, 39, 57], "duplic": [15, 16, 32, 39, 57], "ebunch": [15, 16, 32, 39, 57], "take": [15, 16, 26, 32, 39, 54, 55, 57, 69, 71, 72, 74], "preced": [15, 16, 32, 39, 57], "union": [15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 40, 43, 45, 46, 50, 51, 53, 55, 57, 61, 62], "int": [15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 50, 51, 53, 54, 55, 57, 62, 63, 64, 67, 72], "float": [15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 40, 43, 45, 46, 50, 51, 53, 54, 55, 57, 62, 63, 67], "simpli": [15, 16, 32, 36, 63, 68], "point": [15, 16, 17, 32, 33, 34, 36, 39, 43, 58, 62, 63, 64, 67, 68, 72], "possible_children": [15, 16, 32, 36], "consid": [15, 16, 31, 32, 36, 39, 64, 68], "possible_par": [15, 16, 32, 36], "ancestr": [16, 17, 59, 60, 61, 69, 72], "term": [16, 72, 77], "essenti": [16, 72], "extend": [16, 72], "sub_circle_graph": [16, 36, 72], "circle_edg": [16, 36, 72], "exponenti": [16, 72], "increas": [16, 72], "occur": [16, 53, 62, 72], "main": [16, 57, 72], "complic": [16, 69, 72], "aris": [16, 72], "combin": [16, 72], "abov": [16, 62, 72], "certain": [16, 31, 69, 72], "anoth": [16, 72, 77], "matter": [16, 72], "loss": [16, 72], "deal": [16, 72], "flip": [16, 72], "discuss": [16, 72], "dictat": [16, 72], "sort": [16, 72], "There": [16, 52, 57, 72], "opposit": [16, 72], "qualifi": 16, "yield": [16, 57], "directed_edge_typ": 17, "bidirected_edge_typ": 17, "copi": [17, 39, 51, 57], "bool": [17, 20, 22, 23, 24, 31, 32, 33, 34, 36, 39, 40, 42, 43, 57, 59, 60, 65, 72], "acyclifi": 17, "cyclic": [17, 42, 80], "aci": 17, "whether": [17, 20, 23, 24, 31, 33, 43, 57, 72], "replac": [17, 57, 59], "strongli": 17, "fulli": [17, 58], "Then": [17, 47, 55, 70], "sc": 17, "made": 17, "jori": 17, "mooij": 17, "tom": 17, "claassen": 17, "jona": 17, "david": 17, "sontag": 17, "editor": 17, "36th": 17, "confer": 17, "uai": 17, "124": 17, "machin": 17, "research": [17, 69], "1159": 17, "1168": 17, "pmlr": 17, "03": 17, "06": 17, "aug": 17, "mlr": 17, "v124": 17, "mooij20a": 17, "html": [17, 57], "n_domain": [18, 19, 55], "augmentedgraph": [18, 19, 72, 80], "all_poss_snod": 19, "rais": [19, 24, 39, 57, 73], "invari": [19, 55, 74], "proce": 19, "domain_id": [19, 74], "ignor": [19, 22, 24, 39, 57], "warn": [19, 52, 57, 68], "max_path_length": [20, 25, 26, 27, 28, 31], "find": [20, 21, 25, 61, 69, 80], "discrimin": 20, "least": 20, "vertex": 20, "maximum": [20, 21, 25, 26, 27, 28, 31, 33, 34, 35, 40, 63, 64, 72], "distanc": [20, 31], "check": [20, 22, 23, 24, 31, 33, 43, 52, 57, 59, 60, 63, 72], "1000": [20, 25, 26, 27, 28, 31, 62, 63, 64], "explored_nod": 20, "disc_path": 20, "found_discriminating_path": 20, "wa": [20, 24, 59, 61], "found": [20, 31, 57, 59, 61, 65], "max_numb": 21, "id": [21, 74], "connected_pair": 21, "node_x": [22, 25, 26, 27, 28], "node_i": [22, 25, 26, 27, 28], "l": 22, "destin": 22, "otherwis": [22, 57, 61], "cannot": [22, 31, 59], "therefor": [22, 47, 63, 69, 73], "activ": 22, "regardless": [22, 57], "along": [22, 25], "henc": [22, 31], "ancestor": [22, 29], "node1": 23, "node2": 23, "node3": 23, "noncollid": 23, "is_noncollid": 23, "on_error": 24, "valid": [24, 33, 61, 72], "most": [24, 68, 69, 72], "compliant": [24, 72], "sens": [24, 72], "constrain": 24, "length": [25, 26, 27, 28, 45, 50, 51, 62, 68], "dsep": 25, "characterist": 25, "subpath": 25, "tripl": 25, "triangl": 25, "meet": 25, "fact": 25, "shield": 25, "diego": 25, "colombo": 25, "marlo": 25, "h": 25, "maathui": 25, "marku": 25, "kalisch": 25, "thoma": 25, "richardson": 25, "high": 25, "dimension": [25, 68], "annal": 25, "40": [25, 59, 60, 61], "294": 25, "321": 25, "2012": 25, "1214": 25, "11": 25, "aos940": 25, "end": [26, 27, 28, 45, 47, 51], "smaller": [26, 27, 28], "subset": [26, 27, 28, 55], "intersect": 26, "biconnect": 26, "restrict": [26, 27, 28], "stationarytimeseriespag": [27, 28, 72], "pdst": 27, "pds_t_set": [27, 28], "lag": [27, 28, 33, 34, 35, 39, 40, 43, 44, 62, 63, 64, 67, 68, 72], "being": [27, 28, 57, 68], "less": [27, 28, 39, 68], "max": [27, 28, 33, 39, 43, 44, 67, 72], "among": [27, 28, 34, 55, 57, 60, 63, 68, 72], "pdst_path": 28, "addit": [28, 31, 53, 54, 63, 65, 66, 69, 72, 74], "descend": 30, "first_nod": 31, "second_nod": 31, "force_circl": 31, "forbid_nod": 31, "uncov": [31, 80], "potenti": 31, "explan": 31, "could": [31, 33, 72], "chang": [31, 55, 57, 59, 61, 68, 69, 72, 78, 79, 80], "mean": [31, 54, 55, 57, 72, 74], "appear": [31, 57], "previou": [31, 62], "befor": 31, "travers": 31, "forbidden": 31, "immedi": 31, "within": [31, 57, 68, 69, 72], "rel": [31, 69], "third": 31, "come": 31, "r5": 31, "prevent": 31, "incoming_graph_data": [33, 34, 37, 38, 72], "check_time_direct": [33, 72], "repeat": [33, 72], "themselv": [33, 72], "cross": [33, 72], "product": [33, 72], "to_networkx_graph": [33, 72], "dict": [33, 57, 66, 67, 72], "2d": [33, 67, 68, 72], "spars": [33, 72], "matrix": [33, 47, 68, 72], "properli": [33, 72], "delet": [33, 55, 63, 72], "depend": [33, 62, 65, 72], "direction": [33, 34, 72], "enabl": [34, 72], "work": [34, 57, 59, 60, 68, 69, 72], "forward": [34, 72], "serv": [34, 72], "imbu": [37, 38, 39, 72, 74], "basetimeseriesgraph": [37, 38, 72], "add_homologous_edg": 39, "homolog": [39, 43, 72], "tsnode": [39, 43, 68, 72], "absolut": 39, "equal": [39, 62], "preserv": [39, 68], "as_view": [39, 57], "read": [39, 57, 68], "to_direct": [39, 57], "node_attr_dict_factori": [39, 57], "alia": [39, 57], "tsdict": 39, "node_dict_factori": [39, 57], "networkxerror": [39, 57], "remove_edges_from": [39, 57], "Will": [39, 57, 65], "fail": [39, 57, 61], "silent": [39, 57], "remove_homologous_edg": 39, "include_contemporan": 40, "create_us": [40, 41], "analog": 40, "_description_": 40, "func": [40, 74], "include_self_loop": 42, "summari": [42, 64], "timeseriesdigraph": [42, 72], "summary_g": 42, "_must_": 43, "timeseriesgraph": [44, 67, 72], "arr": [45, 47, 50, 51], "ndarrai": [45, 46, 62], "arr_idx": [45, 50, 51], "graph_typ": [45, 50, 52], "shape": [45, 47, 48, 50, 51, 62, 63, 64, 66, 68], "n_node": [45, 47, 48, 50, 51, 63, 64], "causal_graph": [47, 48], "instanc": [47, 48, 49, 52, 62, 68], "numpy_graph": [47, 48], "accord": [47, 48], "ijth": 47, "entri": [47, 68], "zero": 47, "symmetr": [47, 68], "jith": 47, "20": 47, "edge_to_value_map": [47, 50], "pcalg": [47, 48, 51, 77, 80], "packag": [47, 51, 69, 77], "numer": [47, 57, 69], "treat": [47, 57], "leftrightarrow": 47, "element": [47, 72, 77], "21": [47, 65, 80], "issu": [47, 69, 73], "nodelist": 47, "bow_graph": 47, "numpy_to_graph": 47, "pcalg_to_graph": 48, "filenam": [49, 52], "tetrad": [49, 52, 77, 80], "text": [49, 52, 54, 73], "write": [49, 65], "enumer": [50, 51, 73], "amat_typ": 51, "r": [51, 59, 61, 77], "pcalgpagendpoint": 51, "amattyp": 51, "cran": 51, "project": [51, 70, 80], "web": 51, "pdf": 51, "conveni": 51, "amat": 51, "No": [51, 72], "edgemark": 51, "oppos": 51, "matric": 51, "mag": 51, "cmu": 52, "phil": 52, "io": [52, 68, 78], "guarante": 52, "your": [52, 69], "adher": [52, 68], "random_st": [53, 54, 55, 62, 63, 64], "interven": 53, "simultanen": 53, "perturb": 53, "gaussian_noise_funct": [53, 54, 55, 74], "That": [53, 57], "nois": [53, 74], "node_mean_lim": [54, 55], "node_std_lim": [54, 55], "edge_funct": [54, 55], "callabl": [54, 55, 63, 68], "edge_weight_lim": [54, 55], "parametr": 54, "uniformli": [54, 55, 74], "limit": 54, "weight": [54, 55, 57, 63, 73, 74], "fashion": [54, 67, 69], "x_i": 54, "sum_": 54, "w_j": 54, "f_j": 54, "x_j": 54, "epsilon_i": 54, "sim": 54, "mu_i": 54, "sigma_i": 54, "lower": [54, 55], "upper": [54, 55, 73], "bound": [54, 55], "std": [54, 55, 74], "iid": [54, 55], "transform": [54, 55], "nonlinear": [54, 55], "lambda": [54, 55], "ident": [54, 55, 57], "parent_funct": [54, 55, 74], "linear_gaussian": [54, 55], "n_nodes_with_s_nod": 55, "n_invariances_to_tri": 55, "multi": 55, "underli": [55, 62, 63, 72, 75], "particular": 55, "across": [55, 57, 63, 68, 72], "split": 55, "try": [55, 68], "make_graph_linear_gaussian": [55, 80], "determin": 55, "n_": 55, "randomli": [55, 74], "remain": 55, "At": 55, "keep": [55, 67], "g1": 56, "g2": 56, "link": [57, 68, 78], "experiment": [57, 68, 77], "featur": [57, 68, 69, 78, 79, 80], "meant": 57, "caution": [57, 69], "multidigraph": 57, "mention": 57, "below": [57, 68, 69], "match": 57, "entir": 57, "add_edge_typ": [57, 69], "edge_subgraph": 57, "cach": [57, 68], "few": [57, 72], "wherea": 57, "__contains__": 57, "__getitem__": 57, "__iter__": 57, "__len__": 57, "hold": 57, "itself": [57, 68], "behav": 57, "idiom": 57, "loop": 57, "nbr": 57, "datadict": 57, "adjacencyview": 57, "clear_edge_typ": 57, "clear": 57, "shallow": 57, "share": [57, 68], "deepcopi": 57, "docstr": [57, 68], "peopl": 57, "might": [57, 69], "nbunch": 57, "degreeview": 57, "report": [57, 65], "incid": 57, "sum": 57, "deg_dict": 57, "request": [57, 69], "ddict": 57, "quietli": 57, "out": [57, 67, 69], "get_edge_data": 57, "doesn": 57, "edge_dict": 57, "graph_attr_dict_factori": 57, "keyerror": 57, "edge_ind": 57, "identifi": [57, 68], "technic": [57, 62, 68], "control": 57, "nbunch_it": 57, "membership": 57, "niter": 57, "sequenc": 57, "number_of_edge_typ": 57, "number_of_edg": [57, 69], "count": 57, "nedg": 57, "size": 57, "todo": [57, 74], "expect": [57, 69], "subclass": 57, "onc": 57, "attempt": 57, "contrast": 57, "deep": 57, "librari": [57, 68, 78], "transfer": 57, "to_undirect": 57, "choic": [57, 72], "desir": 57, "unless": [57, 72], "uc_label": 58, "g_copi": 58, "minim": [59, 61, 68, 80], "testminsep": 59, "test": [59, 73, 75, 80], "line": [59, 61], "6": [59, 65, 80], "neq": 59, "r_x": 59, "r_y": 59, "deem": [59, 61], "necessari": [59, 61], "moral": 59, "caus": 59, "candid": 59, "later": [59, 61], "largest": [59, 61], "vertic": [59, 60, 61], "is_minimal_m_sep": 59, "els": 59, "van": [59, 60, 61], "der": [59, 60, 61], "zander": [59, 60, 61], "li\u015bkiewicz": [59, 60, 61], "textor": [59, 60, 61], "adjust": [59, 60, 61], "criteria": [59, 60, 61], "framework": [59, 60, 61], "vol": [59, 60, 61], "270": [59, 60, 61], "pp": [59, 60, 61], "2018": [59, 60, 61], "12": [59, 60, 61], "006": [59, 60, 61], "testsep": [60, 61], "further": 60, "breadth": 60, "runtim": [60, 61], "boolean": 60, "findsep": 61, "math": 61, "findminsep": 61, "anterior": 61, "var_arr": [62, 64], "n_time": [62, 63, 64], "n_realiz": [62, 63], "var_nam": 62, "var": [62, 63, 64], "arraylik": [62, 63, 64, 67], "n_variabl": [62, 63], "vector": [62, 68], "auto": 62, "regress": 62, "3rd": 62, "dimens": 62, "autoregress": [62, 64], "realiz": [62, 63], "state": [62, 63], "node_nam": 62, "multivari": 62, "p_time_self": 63, "p_time_var": 63, "p_contemporan": 63, "weight_dist": 63, "_continuous_distn": 63, "norm_gen": 63, "probabl": [63, 68], "contemporan": 63, "instantan": 63, "simulate_data_from_var": 63, "var_model": 63, "never": 63, "worri": 63, "about": [63, 69], "situat": 63, "instantaen": 63, "network": 63, "x_df": 64, "dataset": [64, 68, 74], "right": [64, 67], "fid": 65, "show_path": 65, "debug": 65, "help": 65, "triag": 65, "bug": 65, "sy": 65, "stdout": 65, "develop": [65, 69, 80], "submit": 65, "platform": 65, "linux": 65, "15": 65, "1067": 65, "aw": 65, "x86_64": 65, "glibc2": 65, "feb": 65, "37": 65, "gcc": 65, "usr": 65, "bin": 65, "cpu": 65, "36": 65, "core": [65, 77], "68": [65, 80], "gb": 65, "openbla": 65, "17": [65, 80], "thread": 65, "sklearn": 65, "backend": 65, "macosx": 65, "Not": 65, "version": [65, 68, 69, 72, 78], "info": 65, "joblib": [65, 68], "squar": 66, "rankdir": 66, "plaintext": 66, "dot": 66, "languag": 66, "center": 67, "aspect_ratio": 67, "3333333333333333": 67, "left": 67, "top": [67, 69], "bottom": 67, "factor": 67, "plot": 67, "around": [67, 69], "ratio": 67, "width": 67, "height": 67, "lai": 67, "histor": 67, "hope": 68, "tacit": 68, "convent": 68, "contributor": [68, 69], "aim": 68, "describ": 68, "redund": 68, "begin": 68, "didn": 68, "elsewher": 68, "1d": 68, "whose": 68, "often": 68, "public": [68, 69], "larg": [68, 73], "formal": 68, "maintain": [68, 69, 73], "backward": 68, "compat": 68, "privat": 68, "assur": 68, "stabl": [68, 69], "__call__": 68, "embed": 68, "etc": [68, 69], "__doc__": 68, "pep257": 68, "numpydoc": 68, "give": [68, 76], "basic": [68, 69], "doctest": 68, "directori": 68, "exemplifi": 68, "referenc": 68, "sometim": 68, "built": 68, "alongsid": 68, "descript": [68, 69], "tool": [68, 69], "usabl": 68, "subject": 68, "futur": 68, "deprec": [68, 69], "polici": 68, "letter": 68, "readthedoc": 68, "facilit": 68, "parallel": 68, "toward": 68, "effici": [68, 78, 79, 80], "delai": 68, "n_featur": 68, "n_sampl": 68, "shorthand": 68, "distinctli": 68, "noun": 68, "langl": 68, "rangl": 68, "off": [68, 72], "sigma_map": 68, "symmetric_difference_map": 68, "composit": 69, "encourag": 69, "pull": 69, "contribut": [69, 73, 80], "exhaust": 69, "illustr": 69, "veri": 69, "earli": 69, "best": 69, "goal": 69, "converg": 69, "releas": 69, "trait": 69, "major": [69, 72, 78, 79, 80], "mark": 69, "alpha": [69, 77], "drastic": 69, "robust": 69, "commun": [69, 73], "low": 69, "curv": 69, "transit": 69, "lie": 69, "hand": 69, "summar": 69, "implicitli": 69, "focus": 69, "design": 69, "lightweight": 69, "sole": 69, "instal": 69, "histori": 69, "yourself": 69, "interest": 69, "solv": 69, "improv": [69, 80], "overal": 69, "hesit": 69, "reach": 69, "who": [69, 80], "codebas": 69, "pip": 70, "avail": 70, "pypi": 70, "poetri": 70, "recommend": 70, "repositori": 70, "git": 70, "cd": 70, "heavili": 72, "reli": 72, "account": 72, "cover": 72, "concept": [72, 76, 77], "glossari": [72, 77], "ye": 72, "augmentedpag": 72, "analag": 72, "stationarytimeseriesgraph": 72, "stationarytimeseriesmixededgegraph": [72, 80], "stationarytimeseriescpdag": 72, "sure": 72, "past": 72, "moment": 72, "embodi": 72, "stationar": 72, "propag": 72, "turn": 72, "set_stationar": 72, "modif": 72, "subtl": 72, "impact": 72, "mec": 72, "timeseriesmixededgegraph": 72, "light": 73, "quit": 73, "de": 73, "facto": 73, "offer": 73, "interpret": 73, "triangular": 73, "fill": 73, "against": 73, "plan": 74, "yet": 74, "drop": 74, "varialbl": 74, "roadmap": 74, "simulatan": 74, "nest": 74, "citat": 74, "FOR": 74, "sel": 74, "ones": 74, "extra": 74, "invariant_domain": 74, "domain_gaussian_noise_funct": 74, "faith": 75, "abl": 76, "everyth": 76, "multidomain": [77, 80], "simul": 77, "export": [77, 80], "java": 77, "enhanc": [78, 79, 80], "tip": 78, "subscrib": 78, "notifi": 78, "aryan": 80, "roi": 80, "71": 80, "minimal_m_separ": 80, "bf": 80, "jaron": 80, "lee": 80, "53": 80, "balltre": 80, "48": 80, "46": 80, "uncovered_pd_path": 80, "42": 80, "adam": 80, "li": 80, "possible_ancestor": 80, "possible_descend": 80, "discriminating_path": 80, "pds_path": 80, "wrapper": 80, "acyclif": 80, "julien": 80, "siebert": 80, "26": 80, "29": 80, "49": 80, "go": 80, "causallearn": 80, "51": 80, "60": 80, "anank": 80, "63": 80, "commit": 80, "hook": 80, "75": 80, "make_graph_multidomain": 80, "77": 80, "78": 80, "thank": 80, "everyon": 80, "mainten": 80, "incept": 80}, "objects": {"": [[0, 0, 0, "-", "pywhy_graphs"]], "pywhy_graphs": [[12, 1, 1, "", "ADMG"], [13, 1, 1, "", "AugmentedGraph"], [14, 1, 1, "", "AugmentedPAG"], [15, 1, 1, "", "CPDAG"], [16, 1, 1, "", "PAG"], [71, 0, 0, "-", "algorithms"], [72, 0, 0, "-", "classes"], [73, 0, 0, "-", "export"], [74, 0, 0, "-", "functional"], [75, 0, 0, "-", "simulate"], [65, 4, 1, "", "sys_info"]], "pywhy_graphs.ADMG": [[12, 2, 1, "", "bidirected_edge_name"], [12, 2, 1, "", "bidirected_edges"], [12, 3, 1, "", "c_components"], [12, 2, 1, "", "directed_edge_name"], [12, 2, 1, "", "directed_edges"], [12, 3, 1, "", "sub_bidirected_graph"], [12, 3, 1, "", "sub_directed_graph"], [12, 3, 1, "", "sub_undirected_graph"], [12, 2, 1, "", "undirected_edge_name"], [12, 2, 1, "", "undirected_edges"]], "pywhy_graphs.CPDAG": [[15, 3, 1, "", "add_edge"], [15, 3, 1, "", "add_edges_from"], [15, 2, 1, "", "directed_edge_name"], [15, 2, 1, "", "directed_edges"], [15, 3, 1, "", "orient_uncertain_edge"], [15, 3, 1, "", "possible_children"], [15, 3, 1, "", "possible_parents"], [15, 3, 1, "", "sub_directed_graph"], [15, 3, 1, "", "sub_undirected_graph"], [15, 2, 1, "", "undirected_edge_name"], [15, 2, 1, "", "undirected_edges"]], "pywhy_graphs.PAG": [[16, 3, 1, "", "add_edge"], [16, 3, 1, "", "add_edges_from"], [16, 3, 1, "", "children"], [16, 2, 1, "", "circle_edge_name"], [16, 2, 1, "", "circle_edges"], [16, 3, 1, "", "orient_uncertain_edge"], [16, 3, 1, "", "parents"], [16, 3, 1, "", "possible_children"], [16, 3, 1, "", "possible_parents"], [16, 3, 1, "", "sub_circle_graph"]], "pywhy_graphs.algorithms": [[17, 4, 1, "", "acyclification"], [18, 4, 1, "", "add_all_snode_combinations"], [19, 4, 1, "", "compute_invariant_domains_per_node"], [20, 4, 1, "", "discriminating_path"], [21, 4, 1, "", "find_connected_pairs"], [22, 4, 1, "", "inducing_path"], [23, 4, 1, "", "is_definite_noncollider"], [24, 4, 1, "", "is_valid_mec_graph"], [25, 4, 1, "", "pds"], [26, 4, 1, "", "pds_path"], [27, 4, 1, "", "pds_t"], [28, 4, 1, "", "pds_t_path"], [29, 4, 1, "", "possible_ancestors"], [30, 4, 1, "", "possible_descendants"], [31, 4, 1, "", "uncovered_pd_path"]], "pywhy_graphs.classes": [[72, 0, 0, "-", "timeseries"]], "pywhy_graphs.classes.timeseries": [[32, 1, 1, "", "StationaryTimeSeriesCPDAG"], [33, 1, 1, "", "StationaryTimeSeriesDiGraph"], [34, 1, 1, "", "StationaryTimeSeriesGraph"], [35, 1, 1, "", "StationaryTimeSeriesMixedEdgeGraph"], [36, 1, 1, "", "StationaryTimeSeriesPAG"], [37, 1, 1, "", "TimeSeriesDiGraph"], [38, 1, 1, "", "TimeSeriesGraph"], [39, 1, 1, "", "TimeSeriesMixedEdgeGraph"], [40, 4, 1, "", "complete_ts_graph"], [41, 4, 1, "", "empty_ts_graph"], [42, 4, 1, "", "get_summary_graph"], [43, 4, 1, "", "has_homologous_edges"], [44, 4, 1, "", "nodes_in_time_order"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[32, 3, 1, "", "add_edge"], [32, 3, 1, "", "add_edges_from"], [32, 2, 1, "", "directed_edge_name"], [32, 2, 1, "", "directed_edges"], [32, 3, 1, "", "orient_uncertain_edge"], [32, 3, 1, "", "possible_children"], [32, 3, 1, "", "possible_parents"], [32, 3, 1, "", "sub_directed_graph"], [32, 3, 1, "", "sub_undirected_graph"], [32, 2, 1, "", "undirected_edge_name"], [32, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[36, 2, 1, "", "bidirected_edge_name"], [36, 2, 1, "", "bidirected_edges"], [36, 2, 1, "", "circle_edge_name"], [36, 2, 1, "", "circle_edges"], [36, 2, 1, "", "directed_edge_name"], [36, 2, 1, "", "directed_edges"], [36, 3, 1, "", "orient_uncertain_edge"], [36, 3, 1, "", "possible_children"], [36, 3, 1, "", "possible_parents"], [36, 3, 1, "", "sub_bidirected_graph"], [36, 3, 1, "", "sub_circle_graph"], [36, 3, 1, "", "sub_directed_graph"], [36, 3, 1, "", "sub_undirected_graph"], [36, 2, 1, "", "undirected_edge_name"], [36, 2, 1, "", "undirected_edges"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[39, 3, 1, "", "add_edge"], [39, 3, 1, "", "add_edges_from"], [39, 3, 1, "", "add_homologous_edges"], [39, 3, 1, "", "copy"], [39, 5, 1, "", "node_attr_dict_factory"], [39, 5, 1, "", "node_dict_factory"], [39, 3, 1, "", "remove_edge"], [39, 3, 1, "", "remove_edges_from"], [39, 3, 1, "", "remove_homologous_edges"]], "pywhy_graphs.export": [[45, 4, 1, "", "clearn_to_graph"], [46, 4, 1, "", "graph_to_clearn"], [47, 4, 1, "", "graph_to_numpy"], [48, 4, 1, "", "graph_to_pcalg"], [49, 4, 1, "", "graph_to_tetrad"], [50, 4, 1, "", "numpy_to_graph"], [51, 4, 1, "", "pcalg_to_graph"], [52, 4, 1, "", "tetrad_to_graph"]], "pywhy_graphs.functional": [[53, 4, 1, "", "apply_linear_soft_intervention"], [54, 4, 1, "", "make_graph_linear_gaussian"], [55, 4, 1, "", "make_graph_multidomain"], [56, 4, 1, "", "set_node_attributes_with_G"]], "pywhy_graphs.networkx": [[57, 1, 1, "", "MixedEdgeGraph"], [58, 4, 1, "", "bidirected_to_unobserved_confounder"], [59, 4, 1, "", "is_minimal_m_separator"], [60, 4, 1, "", "m_separated"], [61, 4, 1, "", "minimal_m_separator"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[57, 3, 1, "", "__contains__"], [57, 3, 1, "", "__getitem__"], [57, 3, 1, "", "__iter__"], [57, 3, 1, "", "__len__"], [57, 3, 1, "", "add_edge"], [57, 3, 1, "", "add_edges_from"], [57, 2, 1, "", "adj"], [57, 3, 1, "", "clear_edge_types"], [57, 3, 1, "", "copy"], [57, 3, 1, "", "degree"], [57, 3, 1, "", "edges"], [57, 3, 1, "", "get_edge_data"], [57, 3, 1, "", "get_graphs"], [57, 5, 1, "", "graph_attr_dict_factory"], [57, 3, 1, "", "has_edge"], [57, 3, 1, "", "has_node"], [57, 3, 1, "", "is_directed"], [57, 3, 1, "", "is_multigraph"], [57, 2, 1, "", "name"], [57, 3, 1, "", "nbunch_iter"], [57, 5, 1, "", "node_attr_dict_factory"], [57, 5, 1, "", "node_dict_factory"], [57, 3, 1, "", "number_of_edge_types"], [57, 3, 1, "", "number_of_edges"], [57, 3, 1, "", "number_of_nodes"], [57, 3, 1, "", "order"], [57, 3, 1, "", "remove_edge"], [57, 3, 1, "", "remove_edges_from"], [57, 3, 1, "", "size"], [57, 3, 1, "", "subgraph"], [57, 3, 1, "", "to_directed"], [57, 3, 1, "", "to_undirected"], [57, 3, 1, "", "update"]], "pywhy_graphs.simulate": [[62, 4, 1, "", "simulate_data_from_var"], [63, 4, 1, "", "simulate_linear_var_process"], [64, 4, 1, "", "simulate_var_process_from_summary_graph"]], "pywhy_graphs.viz": [[66, 4, 1, "", "draw"], [67, 4, 1, "", "timeseries_layout"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 68, 69], "pywhy_graph": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 75], "class": [0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72], "causal": [0, 1, 2, 3, 9, 71, 72, 73, 74, 75, 76], "graph": [0, 1, 2, 3, 6, 8, 9, 10, 69, 71, 72, 73, 74, 76], "algorithm": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 71], "mix": [0, 3, 6], "edg": [0, 6], "convers": 0, "between": 0, "other": 0, "packag": [0, 73], "": [0, 80], "networkx": [0, 1, 5, 57, 58, 59, 60, 61, 69, 76], "experiment": [0, 73], "function": [0, 53, 54, 55, 56, 74], "timeseri": [0, 10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 72], "simul": [0, 3, 62, 63, 64, 75], "graphic": [0, 74, 75], "model": [0, 3, 74, 75], "convert": 0, "visual": [0, 1, 8, 9, 76], "util": 0, "debug": 0, "exampl": [1, 5, 12, 15, 16, 37, 57, 60, 66, 67, 76], "galleri": [1, 76], "mixededgegraph": [1, 5, 6, 57, 76], "introduct": [1, 2, 3, 76], "an": 3, "how": [3, 69, 76], "us": [3, 12, 15, 16, 37, 57, 60, 66, 67, 72, 76], "them": 3, "structur": 3, "some": 3, "data": 3, "direct": 3, "ayclic": 3, "dag": 3, "also": 3, "known": 3, "bayesian": 3, "network": 3, "acycl": [3, 71], "admg": [3, 12], "complet": 3, "partial": 3, "cpdag": [3, 15], "ancestr": 3, "pag": [3, 16], "refer": 3, "comput": [4, 7, 11], "time": [4, 7, 11, 71, 72], "differ": 6, "type": [6, 72], "construct": 6, "properti": 6, "oper": 6, "node": 6, "kei": 6, "draw": [8, 10, 66], "set": [8, 10], "layout": [8, 10], "comparison": 8, "augmentedgraph": 13, "augmentedpag": 14, "acyclif": 17, "add_all_snode_combin": 18, "compute_invariant_domains_per_nod": 19, "discriminating_path": 20, "find_connected_pair": 21, "inducing_path": 22, "is_definite_noncollid": 23, "is_valid_mec_graph": 24, "pd": 25, "pds_path": 26, "pds_t": 27, "pds_t_path": 28, "possible_ancestor": 29, "possible_descend": 30, "uncovered_pd_path": 31, "stationarytimeseriescpdag": 32, "stationarytimeseriesdigraph": 33, "stationarytimeseriesgraph": 34, "stationarytimeseriesmixededgegraph": 35, "stationarytimeseriespag": 36, "timeseriesdigraph": 37, "timeseriesgraph": 38, "timeseriesmixededgegraph": 39, "complete_ts_graph": 40, "empty_ts_graph": 41, "get_summary_graph": 42, "has_homologous_edg": 43, "nodes_in_time_ord": 44, "export": [45, 46, 47, 48, 49, 50, 51, 52, 73], "clearn_to_graph": 45, "graph_to_clearn": 46, "graph_to_numpi": 47, "graph_to_pcalg": 48, "graph_to_tetrad": 49, "numpy_to_graph": 50, "pcalg_to_graph": 51, "tetrad_to_graph": 52, "apply_linear_soft_intervent": 53, "make_graph_linear_gaussian": 54, "make_graph_multidomain": 55, "set_node_attributes_with_g": 56, "bidirected_to_unobserved_confound": 58, "is_minimal_m_separ": 59, "m_separ": 60, "minimal_m_separ": 61, "simulate_data_from_var": 62, "simulate_linear_var_process": 63, "simulate_var_process_from_summary_graph": 64, "sys_info": 65, "viz": [66, 67], "timeseries_layout": 67, "glossari": 68, "common": 68, "term": 68, "element": 68, "gener": 68, "concept": 68, "pywhi": [69, 71, 72, 73, 76], "stabil": 69, "do": 69, "we": 69, "compar": 69, "content": 69, "get": 69, "start": 69, "team": 69, "indic": 69, "tabl": 69, "instal": 70, "core": 71, "markov": 71, "equival": 71, "seri": [71, 72], "handl": 71, "which": 72, "should": 72, "i": 72, "alpha": 72, "import": 73, "anoth": 73, "learn": 73, "numpi": 73, "graphviz": 73, "dagitti": 73, "pcalg": 73, "from": 73, "r": 73, "tetrad": 73, "java": 73, "linear": 74, "multidomain": 74, "select": 74, "diagram": 74, "modul": 75, "tutori": 76, "user": 77, "guid": 77, "releas": 78, "histori": 78, "what": 80, "new": 80, "version": 80, "0": 80, "1": 80, "changelog": 80, "code": 80, "document": 80, "contributor": 80}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "pywhy_graphs.classes: Causal graph classes": [[0, "pywhy-graphs-classes-causal-graph-classes"]], "pywhy_graphs.algorithms: Algorithms for Mixed-Edge Graphs": [[0, "pywhy-graphs-algorithms-algorithms-for-mixed-edge-graphs"]], "Conversions between other package\u2019s causal graphs": [[0, "conversions-between-other-package-s-causal-graphs"]], "NetworkX Experimental Functionality": [[0, "networkx-experimental-functionality"]], "pywhy_graphs.classes.timeseries: Timeseries": [[0, "pywhy-graphs-classes-timeseries-timeseries"]], "pywhy_graphs.simulate: Causal graphical model simulations": [[0, "pywhy-graphs-simulate-causal-graphical-model-simulations"], [75, "pywhy-graphs-simulate-causal-graphical-model-simulations"]], "Converting graphs to functional models": [[0, "converting-graphs-to-functional-models"]], "Visualization of causal graphs": [[0, "visualization-of-causal-graphs"], [1, "visualization-of-causal-graphs"], [9, "visualization-of-causal-graphs"], [76, "visualization-of-causal-graphs"]], "Utilities for debugging": [[0, "utilities-for-debugging"]], "Simulation": [[0, "simulation"]], "Examples Gallery": [[1, "examples-gallery"], [76, "examples-gallery"]], "Networkx MixedEdgeGraph Examples": [[1, "networkx-mixededgegraph-examples"], [5, "networkx-mixededgegraph-examples"], [76, "networkx-mixededgegraph-examples"]], "Introduction to causal graphs": [[1, "introduction-to-causal-graphs"], [2, "introduction-to-causal-graphs"], [76, "introduction-to-causal-graphs"]], "An introduction to causal graphs and how to use them": [[3, "an-introduction-to-causal-graphs-and-how-to-use-them"]], "Structural Causal Models: Simulating some data": [[3, "structural-causal-models-simulating-some-data"]], "Causal Directed Ayclic Graphs (DAG): Also known as Causal Bayesian Networks": [[3, "causal-directed-ayclic-graphs-dag-also-known-as-causal-bayesian-networks"]], "Acyclic Directed Mixed Graphs (ADMG)": [[3, "acyclic-directed-mixed-graphs-admg"]], "Completed Partially Directed Ayclic Graph (CPDAG)": [[3, "completed-partially-directed-ayclic-graph-cpdag"]], "Partial Ancestral Graph (PAG)": [[3, "partial-ancestral-graph-pag"]], "References": [[3, "references"]], "Computation times": [[4, "computation-times"], [7, "computation-times"], [11, "computation-times"]], "MixedEdgeGraph - Graph with different types of edges": [[6, "mixededgegraph-graph-with-different-types-of-edges"]], "Construct a MixedEdgeGraph": [[6, "construct-a-mixededgegraph"]], "Mixed Edge Graph Properties": [[6, "mixed-edge-graph-properties"]], "Mixed Edge Graph Operations on Nodes": [[6, "mixed-edge-graph-operations-on-nodes"]], "Mixed Edge Graph Operations on Edges": [[6, "mixed-edge-graph-operations-on-edges"]], "Mixed Edge Graph Key Differences": [[6, "mixed-edge-graph-key-differences"]], "Drawing graphs and setting their layout for visual comparison": [[8, "drawing-graphs-and-setting-their-layout-for-visual-comparison"]], "Drawing timeseries graphs and setting their layout": [[10, "drawing-timeseries-graphs-and-setting-their-layout"]], "pywhy_graphs.ADMG": [[12, "pywhy-graphs-admg"]], "Examples using pywhy_graphs.ADMG": [[12, "examples-using-pywhy-graphs-admg"]], "pywhy_graphs.AugmentedGraph": [[13, "pywhy-graphs-augmentedgraph"]], "pywhy_graphs.AugmentedPAG": [[14, "pywhy-graphs-augmentedpag"]], "pywhy_graphs.CPDAG": [[15, "pywhy-graphs-cpdag"]], "Examples using pywhy_graphs.CPDAG": [[15, "examples-using-pywhy-graphs-cpdag"]], "pywhy_graphs.PAG": [[16, "pywhy-graphs-pag"]], "Examples using pywhy_graphs.PAG": [[16, "examples-using-pywhy-graphs-pag"]], "pywhy_graphs.algorithms.acyclification": [[17, "pywhy-graphs-algorithms-acyclification"]], "pywhy_graphs.algorithms.add_all_snode_combinations": [[18, "pywhy-graphs-algorithms-add-all-snode-combinations"]], "pywhy_graphs.algorithms.compute_invariant_domains_per_node": [[19, "pywhy-graphs-algorithms-compute-invariant-domains-per-node"]], "pywhy_graphs.algorithms.discriminating_path": [[20, "pywhy-graphs-algorithms-discriminating-path"]], "pywhy_graphs.algorithms.find_connected_pairs": [[21, "pywhy-graphs-algorithms-find-connected-pairs"]], "pywhy_graphs.algorithms.inducing_path": [[22, "pywhy-graphs-algorithms-inducing-path"]], "pywhy_graphs.algorithms.is_definite_noncollider": [[23, "pywhy-graphs-algorithms-is-definite-noncollider"]], "pywhy_graphs.algorithms.is_valid_mec_graph": [[24, "pywhy-graphs-algorithms-is-valid-mec-graph"]], "pywhy_graphs.algorithms.pds": [[25, "pywhy-graphs-algorithms-pds"]], "pywhy_graphs.algorithms.pds_path": [[26, "pywhy-graphs-algorithms-pds-path"]], "pywhy_graphs.algorithms.pds_t": [[27, "pywhy-graphs-algorithms-pds-t"]], "pywhy_graphs.algorithms.pds_t_path": [[28, "pywhy-graphs-algorithms-pds-t-path"]], "pywhy_graphs.algorithms.possible_ancestors": [[29, "pywhy-graphs-algorithms-possible-ancestors"]], "pywhy_graphs.algorithms.possible_descendants": [[30, "pywhy-graphs-algorithms-possible-descendants"]], "pywhy_graphs.algorithms.uncovered_pd_path": [[31, "pywhy-graphs-algorithms-uncovered-pd-path"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG": [[32, "pywhy-graphs-classes-timeseries-stationarytimeseriescpdag"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph": [[33, "pywhy-graphs-classes-timeseries-stationarytimeseriesdigraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph": [[34, "pywhy-graphs-classes-timeseries-stationarytimeseriesgraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph": [[35, "pywhy-graphs-classes-timeseries-stationarytimeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG": [[36, "pywhy-graphs-classes-timeseries-stationarytimeseriespag"]], "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[37, "pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "Examples using pywhy_graphs.classes.timeseries.TimeSeriesDiGraph": [[37, "examples-using-pywhy-graphs-classes-timeseries-timeseriesdigraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesGraph": [[38, "pywhy-graphs-classes-timeseries-timeseriesgraph"]], "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph": [[39, "pywhy-graphs-classes-timeseries-timeseriesmixededgegraph"]], "pywhy_graphs.classes.timeseries.complete_ts_graph": [[40, "pywhy-graphs-classes-timeseries-complete-ts-graph"]], "pywhy_graphs.classes.timeseries.empty_ts_graph": [[41, "pywhy-graphs-classes-timeseries-empty-ts-graph"]], "pywhy_graphs.classes.timeseries.get_summary_graph": [[42, "pywhy-graphs-classes-timeseries-get-summary-graph"]], "pywhy_graphs.classes.timeseries.has_homologous_edges": [[43, "pywhy-graphs-classes-timeseries-has-homologous-edges"]], "pywhy_graphs.classes.timeseries.nodes_in_time_order": [[44, "pywhy-graphs-classes-timeseries-nodes-in-time-order"]], "pywhy_graphs.export.clearn_to_graph": [[45, "pywhy-graphs-export-clearn-to-graph"]], "pywhy_graphs.export.graph_to_clearn": [[46, "pywhy-graphs-export-graph-to-clearn"]], "pywhy_graphs.export.graph_to_numpy": [[47, "pywhy-graphs-export-graph-to-numpy"]], "pywhy_graphs.export.graph_to_pcalg": [[48, "pywhy-graphs-export-graph-to-pcalg"]], "pywhy_graphs.export.graph_to_tetrad": [[49, "pywhy-graphs-export-graph-to-tetrad"]], "pywhy_graphs.export.numpy_to_graph": [[50, "pywhy-graphs-export-numpy-to-graph"]], "pywhy_graphs.export.pcalg_to_graph": [[51, "pywhy-graphs-export-pcalg-to-graph"]], "pywhy_graphs.export.tetrad_to_graph": [[52, "pywhy-graphs-export-tetrad-to-graph"]], "pywhy_graphs.functional.apply_linear_soft_intervention": [[53, "pywhy-graphs-functional-apply-linear-soft-intervention"]], "pywhy_graphs.functional.make_graph_linear_gaussian": [[54, "pywhy-graphs-functional-make-graph-linear-gaussian"]], "pywhy_graphs.functional.make_graph_multidomain": [[55, "pywhy-graphs-functional-make-graph-multidomain"]], "pywhy_graphs.functional.set_node_attributes_with_G": [[56, "pywhy-graphs-functional-set-node-attributes-with-g"]], "pywhy_graphs.networkx.MixedEdgeGraph": [[57, "pywhy-graphs-networkx-mixededgegraph"]], "Examples using pywhy_graphs.networkx.MixedEdgeGraph": [[57, "examples-using-pywhy-graphs-networkx-mixededgegraph"]], "pywhy_graphs.networkx.bidirected_to_unobserved_confounder": [[58, "pywhy-graphs-networkx-bidirected-to-unobserved-confounder"]], "pywhy_graphs.networkx.is_minimal_m_separator": [[59, "pywhy-graphs-networkx-is-minimal-m-separator"]], "pywhy_graphs.networkx.m_separated": [[60, "pywhy-graphs-networkx-m-separated"]], "Examples using pywhy_graphs.networkx.m_separated": [[60, "examples-using-pywhy-graphs-networkx-m-separated"]], "pywhy_graphs.networkx.minimal_m_separator": [[61, "pywhy-graphs-networkx-minimal-m-separator"]], "pywhy_graphs.simulate.simulate_data_from_var": [[62, "pywhy-graphs-simulate-simulate-data-from-var"]], "pywhy_graphs.simulate.simulate_linear_var_process": [[63, "pywhy-graphs-simulate-simulate-linear-var-process"]], "pywhy_graphs.simulate.simulate_var_process_from_summary_graph": [[64, "pywhy-graphs-simulate-simulate-var-process-from-summary-graph"]], "pywhy_graphs.sys_info": [[65, "pywhy-graphs-sys-info"]], "pywhy_graphs.viz.draw": [[66, "pywhy-graphs-viz-draw"]], "Examples using pywhy_graphs.viz.draw": [[66, "examples-using-pywhy-graphs-viz-draw"]], "pywhy_graphs.viz.timeseries_layout": [[67, "pywhy-graphs-viz-timeseries-layout"]], "Examples using pywhy_graphs.viz.timeseries_layout": [[67, "examples-using-pywhy-graphs-viz-timeseries-layout"]], "Glossary of Common Terms and API Elements": [[68, "glossary-of-common-terms-and-api-elements"]], "General Concepts": [[68, "general-concepts"]], "pywhy-graphs": [[69, "pywhy-graphs"]], "API Stability": [[69, "api-stability"]], "How do we compare with NetworkX?": [[69, "how-do-we-compare-with-networkx"]], "Contents": [[69, "contents"]], "Getting started:": [[69, null]], "Team": [[69, "team"]], "Indices and tables": [[69, "indices-and-tables"]], "Installation": [[70, "installation"]], "Causal Graph Algorithms in PyWhy": [[71, "module-pywhy_graphs.algorithms"]], "Core Algorithms": [[71, "core-algorithms"]], "Algorithms for Markov Equivalence Classes": [[71, "algorithms-for-markov-equivalence-classes"]], "Algorithms for Time-Series Graphs": [[71, "algorithms-for-time-series-graphs"]], "Algorithms for handling acyclicity": [[71, "algorithms-for-handling-acyclicity"]], "Causal Graphs in PyWhy": [[72, "module-pywhy_graphs.classes"]], "Which graph class should I use?": [[72, "which-graph-class-should-i-use"]], "pywhy_graphs.classes: Causal graph types": [[72, "pywhy-graphs-classes-causal-graph-types"]], "pywhy_graphs.classes.timeseries: Causal graph types for time-series (alpha)": [[72, "module-pywhy_graphs.classes.timeseries"]], "Importing causal graphs to PyWhy-Graphs, or exporting PyWhy-Graphs to another package": [[73, "module-pywhy_graphs.export"]], "Causal-Learn": [[73, "causal-learn"]], "Numpy (graphviz and dagitty)": [[73, "numpy-graphviz-and-dagitty"]], "PCAlg from R (Experimental)": [[73, "pcalg-from-r-experimental"]], "Tetrad from Java": [[73, "tetrad-from-java"]], "Functional Causal Graphical Models": [[74, "module-pywhy_graphs.functional"]], "Linear": [[74, "linear"]], "Linear functional graphs": [[74, "linear-functional-graphs"]], "Multidomain": [[74, "multidomain"]], "Linear functional selection diagrams": [[74, "linear-functional-selection-diagrams"]], "Simulation module": [[75, "simulation-module"]], "How to use pywhy-graphs with examples and tutorials": [[76, "how-to-use-pywhy-graphs-with-examples-and-tutorials"]], "User Guide": [[77, "user-guide"]], "Release History": [[78, "release-history"]], "What\u2019s new?": [[80, "what-s-new"]], "Version 0.1": [[80, "version-0-1"]], "Changelog": [[80, "changelog"]], "Code and Documentation Contributors": [[80, "code-and-documentation-contributors"]]}, "indexentries": {"module": [[0, "module-pywhy_graphs"], [71, "module-pywhy_graphs.algorithms"], [72, "module-pywhy_graphs.classes"], [72, "module-pywhy_graphs.classes.timeseries"], [73, "module-pywhy_graphs.export"], [74, "module-pywhy_graphs.functional"], [75, "module-pywhy_graphs.simulate"]], "pywhy_graphs": [[0, "module-pywhy_graphs"]], "admg (class in pywhy_graphs)": [[12, "pywhy_graphs.ADMG"]], "bidirected_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.bidirected_edges"]], "c_components() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.c_components"]], "directed_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.directed_edge_name"]], "directed_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.directed_edges"]], "sub_bidirected_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_bidirected_graph"]], "sub_directed_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.admg method)": [[12, "pywhy_graphs.ADMG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.admg property)": [[12, "pywhy_graphs.ADMG.undirected_edges"]], "augmentedgraph (class in pywhy_graphs)": [[13, "pywhy_graphs.AugmentedGraph"]], "augmentedpag (class in pywhy_graphs)": [[14, "pywhy_graphs.AugmentedPAG"]], "cpdag (class in pywhy_graphs)": [[15, "pywhy_graphs.CPDAG"]], "add_edge() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.possible_children"]], "possible_parents() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.cpdag method)": [[15, "pywhy_graphs.CPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.cpdag property)": [[15, "pywhy_graphs.CPDAG.undirected_edges"]], "pag (class in pywhy_graphs)": [[16, "pywhy_graphs.PAG"]], "add_edge() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.add_edge"]], "add_edges_from() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.add_edges_from"]], "children() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.children"]], "circle_edge_name (pywhy_graphs.pag property)": [[16, "pywhy_graphs.PAG.circle_edge_name"]], "circle_edges (pywhy_graphs.pag property)": [[16, "pywhy_graphs.PAG.circle_edges"]], "orient_uncertain_edge() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.orient_uncertain_edge"]], "parents() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.parents"]], "possible_children() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.possible_children"]], "possible_parents() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.possible_parents"]], "sub_circle_graph() (pywhy_graphs.pag method)": [[16, "pywhy_graphs.PAG.sub_circle_graph"]], "acyclification() (in module pywhy_graphs.algorithms)": [[17, "pywhy_graphs.algorithms.acyclification"]], "add_all_snode_combinations() (in module pywhy_graphs.algorithms)": [[18, "pywhy_graphs.algorithms.add_all_snode_combinations"]], "compute_invariant_domains_per_node() (in module pywhy_graphs.algorithms)": [[19, "pywhy_graphs.algorithms.compute_invariant_domains_per_node"]], "discriminating_path() (in module pywhy_graphs.algorithms)": [[20, "pywhy_graphs.algorithms.discriminating_path"]], "find_connected_pairs() (in module pywhy_graphs.algorithms)": [[21, "pywhy_graphs.algorithms.find_connected_pairs"]], "inducing_path() (in module pywhy_graphs.algorithms)": [[22, "pywhy_graphs.algorithms.inducing_path"]], "is_definite_noncollider() (in module pywhy_graphs.algorithms)": [[23, "pywhy_graphs.algorithms.is_definite_noncollider"]], "is_valid_mec_graph() (in module pywhy_graphs.algorithms)": [[24, "pywhy_graphs.algorithms.is_valid_mec_graph"]], "pds() (in module pywhy_graphs.algorithms)": [[25, "pywhy_graphs.algorithms.pds"]], "pds_path() (in module pywhy_graphs.algorithms)": [[26, "pywhy_graphs.algorithms.pds_path"]], "pds_t() (in module pywhy_graphs.algorithms)": [[27, "pywhy_graphs.algorithms.pds_t"]], "pds_t_path() (in module pywhy_graphs.algorithms)": [[28, "pywhy_graphs.algorithms.pds_t_path"]], "possible_ancestors() (in module pywhy_graphs.algorithms)": [[29, "pywhy_graphs.algorithms.possible_ancestors"]], "possible_descendants() (in module pywhy_graphs.algorithms)": [[30, "pywhy_graphs.algorithms.possible_descendants"]], "uncovered_pd_path() (in module pywhy_graphs.algorithms)": [[31, "pywhy_graphs.algorithms.uncovered_pd_path"]], "stationarytimeseriescpdag (class in pywhy_graphs.classes.timeseries)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG"]], "add_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.add_edges_from"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.possible_parents"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag method)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriescpdag property)": [[32, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesCPDAG.undirected_edges"]], "stationarytimeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[33, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesDiGraph"]], "stationarytimeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[34, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesGraph"]], "stationarytimeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[35, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesMixedEdgeGraph"]], "stationarytimeseriespag (class in pywhy_graphs.classes.timeseries)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG"]], "bidirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edge_name"]], "bidirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.bidirected_edges"]], "circle_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edge_name"]], "circle_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.circle_edges"]], "directed_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edge_name"]], "directed_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.directed_edges"]], "orient_uncertain_edge() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.orient_uncertain_edge"]], "possible_children() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_children"]], "possible_parents() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.possible_parents"]], "sub_bidirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_bidirected_graph"]], "sub_circle_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_circle_graph"]], "sub_directed_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_directed_graph"]], "sub_undirected_graph() (pywhy_graphs.classes.timeseries.stationarytimeseriespag method)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.sub_undirected_graph"]], "undirected_edge_name (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edge_name"]], "undirected_edges (pywhy_graphs.classes.timeseries.stationarytimeseriespag property)": [[36, "pywhy_graphs.classes.timeseries.StationaryTimeSeriesPAG.undirected_edges"]], "timeseriesdigraph (class in pywhy_graphs.classes.timeseries)": [[37, "pywhy_graphs.classes.timeseries.TimeSeriesDiGraph"]], "timeseriesgraph (class in pywhy_graphs.classes.timeseries)": [[38, "pywhy_graphs.classes.timeseries.TimeSeriesGraph"]], "timeseriesmixededgegraph (class in pywhy_graphs.classes.timeseries)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph"]], "add_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_edges_from"]], "add_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.add_homologous_edges"]], "copy() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.copy"]], "node_attr_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph attribute)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.node_dict_factory"]], "remove_edge() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_edges_from"]], "remove_homologous_edges() (pywhy_graphs.classes.timeseries.timeseriesmixededgegraph method)": [[39, "pywhy_graphs.classes.timeseries.TimeSeriesMixedEdgeGraph.remove_homologous_edges"]], "complete_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[40, "pywhy_graphs.classes.timeseries.complete_ts_graph"]], "empty_ts_graph() (in module pywhy_graphs.classes.timeseries)": [[41, "pywhy_graphs.classes.timeseries.empty_ts_graph"]], "get_summary_graph() (in module pywhy_graphs.classes.timeseries)": [[42, "pywhy_graphs.classes.timeseries.get_summary_graph"]], "has_homologous_edges() (in module pywhy_graphs.classes.timeseries)": [[43, "pywhy_graphs.classes.timeseries.has_homologous_edges"]], "nodes_in_time_order() (in module pywhy_graphs.classes.timeseries)": [[44, "pywhy_graphs.classes.timeseries.nodes_in_time_order"]], "clearn_to_graph() (in module pywhy_graphs.export)": [[45, "pywhy_graphs.export.clearn_to_graph"]], "graph_to_clearn() (in module pywhy_graphs.export)": [[46, "pywhy_graphs.export.graph_to_clearn"]], "graph_to_numpy() (in module pywhy_graphs.export)": [[47, "pywhy_graphs.export.graph_to_numpy"]], "graph_to_pcalg() (in module pywhy_graphs.export)": [[48, "pywhy_graphs.export.graph_to_pcalg"]], "graph_to_tetrad() (in module pywhy_graphs.export)": [[49, "pywhy_graphs.export.graph_to_tetrad"]], "numpy_to_graph() (in module pywhy_graphs.export)": [[50, "pywhy_graphs.export.numpy_to_graph"]], "pcalg_to_graph() (in module pywhy_graphs.export)": [[51, "pywhy_graphs.export.pcalg_to_graph"]], "tetrad_to_graph() (in module pywhy_graphs.export)": [[52, "pywhy_graphs.export.tetrad_to_graph"]], "apply_linear_soft_intervention() (in module pywhy_graphs.functional)": [[53, "pywhy_graphs.functional.apply_linear_soft_intervention"]], "make_graph_linear_gaussian() (in module pywhy_graphs.functional)": [[54, "pywhy_graphs.functional.make_graph_linear_gaussian"]], "make_graph_multidomain() (in module pywhy_graphs.functional)": [[55, "pywhy_graphs.functional.make_graph_multidomain"]], "set_node_attributes_with_g() (in module pywhy_graphs.functional)": [[56, "pywhy_graphs.functional.set_node_attributes_with_G"]], "mixededgegraph (class in pywhy_graphs.networkx)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph"]], "__contains__() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.__contains__"]], "__getitem__() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.__getitem__"]], "__iter__() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.__iter__"]], "__len__() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.__len__"]], "add_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.add_edge"]], "add_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.add_edges_from"]], "adj (pywhy_graphs.networkx.mixededgegraph property)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.adj"]], "clear_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.clear_edge_types"]], "copy() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.copy"]], "degree() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.degree"]], "edges() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.edges"]], "get_edge_data() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.get_edge_data"]], "get_graphs() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.get_graphs"]], "graph_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.graph_attr_dict_factory"]], "has_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.has_edge"]], "has_node() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.has_node"]], "is_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.is_directed"]], "is_multigraph() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.is_multigraph"]], "name (pywhy_graphs.networkx.mixededgegraph property)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.name"]], "nbunch_iter() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.nbunch_iter"]], "node_attr_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.node_attr_dict_factory"]], "node_dict_factory (pywhy_graphs.networkx.mixededgegraph attribute)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.node_dict_factory"]], "number_of_edge_types() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edge_types"]], "number_of_edges() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_edges"]], "number_of_nodes() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.number_of_nodes"]], "order() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.order"]], "remove_edge() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edge"]], "remove_edges_from() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.remove_edges_from"]], "size() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.size"]], "subgraph() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.subgraph"]], "to_directed() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.to_directed"]], "to_undirected() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.to_undirected"]], "update() (pywhy_graphs.networkx.mixededgegraph method)": [[57, "pywhy_graphs.networkx.MixedEdgeGraph.update"]], "bidirected_to_unobserved_confounder() (in module pywhy_graphs.networkx)": [[58, "pywhy_graphs.networkx.bidirected_to_unobserved_confounder"]], "is_minimal_m_separator() (in module pywhy_graphs.networkx)": [[59, "pywhy_graphs.networkx.is_minimal_m_separator"]], "m_separated() (in module pywhy_graphs.networkx)": [[60, "pywhy_graphs.networkx.m_separated"]], "minimal_m_separator() (in module pywhy_graphs.networkx)": [[61, "pywhy_graphs.networkx.minimal_m_separator"]], "simulate_data_from_var() (in module pywhy_graphs.simulate)": [[62, "pywhy_graphs.simulate.simulate_data_from_var"]], "simulate_linear_var_process() (in module pywhy_graphs.simulate)": [[63, "pywhy_graphs.simulate.simulate_linear_var_process"]], "simulate_var_process_from_summary_graph() (in module pywhy_graphs.simulate)": [[64, "pywhy_graphs.simulate.simulate_var_process_from_summary_graph"]], "sys_info() (in module pywhy_graphs)": [[65, "pywhy_graphs.sys_info"]], "draw() (in module pywhy_graphs.viz)": [[66, "pywhy_graphs.viz.draw"]], "timeseries_layout() (in module pywhy_graphs.viz)": [[67, "pywhy_graphs.viz.timeseries_layout"]], "1d": [[68, "term-1d"]], "1d array": [[68, "term-1d-array"]], "2d": [[68, "term-2d"]], "2d array": [[68, "term-2d-array"]], "api": [[68, "term-API"]], "f-node": [[68, "term-F-node"]], "markov equivalence class": [[68, "term-Markov-equivalence-class"]], "scm": [[68, "term-SCM"]], "structural causal model": [[68, "term-Structural-Causal-Model"]], "c components": [[68, "term-0"]], "c-components": [[68, "term-c-components"]], "c_components": [[68, "term-c_components"]], "callable": [[68, "term-callable"]], "docstring": [[68, "term-docstring"]], "equivalence class": [[68, "term-equivalence-class"]], "examples": [[68, "term-examples"]], "experimental": [[68, "term-experimental"]], "gallery": [[68, "term-gallery"]], "joblib": [[68, "term-joblib"]], "lag": [[68, "term-lag"]], "n_features": [[68, "term-n_features"]], "n_samples": [[68, "term-n_samples"]], "node": [[68, "term-node"]], "np": [[68, "term-np"]], "nx": [[68, "term-nx"]], "pair": [[68, "term-pair"]], "pd": [[68, "term-pd"]], "sample": [[68, "term-sample"]], "samples": [[68, "term-samples"]], "sigma_map": [[68, "term-sigma_map"]], "symmetric_difference_map": [[68, "term-symmetric_difference_map"]], "tsnode": [[68, "term-tsnode"]], "variable": [[68, "term-variable"]], "pywhy_graphs.algorithms": [[71, "module-pywhy_graphs.algorithms"]], "pywhy_graphs.classes": [[72, "module-pywhy_graphs.classes"]], "pywhy_graphs.classes.timeseries": [[72, "module-pywhy_graphs.classes.timeseries"]], "pywhy_graphs.export": [[73, "module-pywhy_graphs.export"]], "pywhy_graphs.functional": [[74, "module-pywhy_graphs.functional"]], "pywhy_graphs.simulate": [[75, "module-pywhy_graphs.simulate"]]}})